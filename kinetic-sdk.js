(()=>{"use strict";var e,r,t,o={},n={};function a(e){var r=n[e];if(void 0!==r)return r.exports;var t=n[e]={id:e,loaded:!1,exports:{}};return o[e].call(t.exports,t,t.exports,a),t.loaded=!0,t.exports}a.m=o,e=[],a.O=(r,t,o,n)=>{if(!t){var f=1/0;for(d=0;d<e.length;d++){for(var[t,o,n]=e[d],l=!0,i=0;i<t.length;i++)(!1&n||f>=n)&&Object.keys(a.O).every((e=>a.O[e](t[i])))?t.splice(i--,1):(l=!1,n<f&&(f=n));if(l){e.splice(d--,1);var u=o();void 0!==u&&(r=u)}}return r}n=n||0;for(var d=e.length;d>0&&e[d-1][2]>n;d--)e[d]=e[d-1];e[d]=[t,o,n]},a.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return a.d(r,{a:r}),r},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(e,o){if(1&o&&(e=this(e)),8&o)return e;if("object"==typeof e&&e){if(4&o&&e.__esModule)return e;if(16&o&&"function"==typeof e.then)return e}var n=Object.create(null);a.r(n);var f={};r=r||[null,t({}),t([]),t(t)];for(var l=2&o&&e;"object"==typeof l&&!~r.indexOf(l);l=t(l))Object.getOwnPropertyNames(l).forEach((r=>f[r]=()=>e[r]));return f.default=()=>e,a.d(n,f),n},a.d=(e,r)=>{for(var t in r)a.o(r,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},a.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={666:0};a.O.j=r=>0===e[r];var r=(r,t)=>{var o,n,[f,l,i]=t,u=0;if(f.some((r=>0!==e[r]))){for(o in l)a.o(l,o)&&(a.m[o]=l[o]);if(i)var d=i(a)}for(r&&r(t);u<f.length;u++)n=f[u],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(d)},t=self.webpackChunk=self.webpackChunk||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})()})();(self.webpackChunk=self.webpackChunk||[]).push([[429],{41913:(t,r,e)=>{"use strict";e(634),e(96882),e(64844),e(40225),e(71686),e(68223),e(27072),e(84870),e(39529),e(15735),e(43108),e(9731),e(49992),e(43430),e(67694),e(53985),e(65388),e(72994),e(39509),e(48836),e(77208),e(61657),e(43105),e(37846),e(16635),e(81804),e(42586),e(43045),e(13489),e(68995),e(73439),e(21515),e(98738),e(17368),e(77950),e(90103),e(88233),e(96708),e(31235),e(74069),e(90977),e(35734),e(85940),e(94908),e(48319),e(44112),e(45794),e(18827),e(41715),e(81382),e(91982),e(73229),e(24074),e(64696),e(13675),e(36920),e(13161),e(90723),e(38857),e(26618),e(49527),e(65688),e(70315),e(50556),e(6886),e(46106),e(19866),e(14121),e(85371),e(60523)},70982:()=>{!function(){var t=document.createElement("script");if(!("noModule"in t)&&"onbeforeload"in t){var r=!1;document.addEventListener("beforeload",(function(e){if(e.target===t)r=!0;else if(!e.target.hasAttribute("nomodule")||!r)return;e.preventDefault()}),!0),t.type="module",t.src=".",document.head.appendChild(t),t.remove()}}()},77111:(t,r,e)=>{var n=e(26733),o=e(59821),i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not a function")}},57988:(t,r,e)=>{var n=e(82359),o=e(59821),i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not a constructor")}},88505:(t,r,e)=>{var n=e(26733),o=String,i=TypeError;t.exports=function(t){if("object"==typeof t||n(t))return t;throw i("Can't set "+o(t)+" as a prototype")}},9736:(t,r,e)=>{var n=e(70095),o=e(22391),i=e(31787).f,a=n("unscopables"),u=Array.prototype;null==u[a]&&i(u,a,{configurable:!0,value:o(null)}),t.exports=function(t){u[a][t]=!0}},36637:(t,r,e)=>{"use strict";var n=e(30966).charAt;t.exports=function(t,r,e){return r+(e?n(t,r).length:1)}},57728:(t,r,e)=>{var n=e(91321),o=TypeError;t.exports=function(t,r){if(n(r,t))return t;throw o("Incorrect invocation")}},21176:(t,r,e)=>{var n=e(85052),o=String,i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not an object")}},9772:t=>{t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},9918:(t,r,e)=>{"use strict";var n,o,i,a=e(9772),u=e(7400),s=e(9859),c=e(26733),f=e(85052),l=e(98270),p=e(81589),h=e(59821),v=e(75762),d=e(14768),g=e(31787).f,y=e(91321),m=e(67567),b=e(56540),x=e(70095),w=e(81441),S=e(56407),A=S.enforce,R=S.get,E=s.Int8Array,O=E&&E.prototype,I=s.Uint8ClampedArray,P=I&&I.prototype,T=E&&m(E),L=O&&m(O),j=Object.prototype,U=s.TypeError,k=x("toStringTag"),C=w("TYPED_ARRAY_TAG"),_="TypedArrayConstructor",M=a&&!!b&&"Opera"!==p(s.opera),B=!1,F={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},N={BigInt64Array:8,BigUint64Array:8},D=function(t){var r=m(t);if(f(r)){var e=R(r);return e&&l(e,_)?e.TypedArrayConstructor:D(r)}},H=function(t){if(!f(t))return!1;var r=p(t);return l(F,r)||l(N,r)};for(n in F)(i=(o=s[n])&&o.prototype)?A(i).TypedArrayConstructor=o:M=!1;for(n in N)(i=(o=s[n])&&o.prototype)&&(A(i).TypedArrayConstructor=o);if((!M||!c(T)||T===Function.prototype)&&(T=function(){throw U("Incorrect invocation")},M))for(n in F)s[n]&&b(s[n],T);if((!M||!L||L===j)&&(L=T.prototype,M))for(n in F)s[n]&&b(s[n].prototype,L);if(M&&m(P)!==L&&b(P,L),u&&!l(L,k))for(n in B=!0,g(L,k,{get:function(){return f(this)?this[C]:void 0}}),F)s[n]&&v(s[n],C,n);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:M,TYPED_ARRAY_TAG:B&&C,aTypedArray:function(t){if(H(t))return t;throw U("Target is not a typed array")},aTypedArrayConstructor:function(t){if(c(t)&&(!b||y(T,t)))return t;throw U(h(t)+" is not a typed array constructor")},exportTypedArrayMethod:function(t,r,e,n){if(u){if(e)for(var o in F){var i=s[o];if(i&&l(i.prototype,t))try{delete i.prototype[t]}catch(a){try{i.prototype[t]=r}catch(c){}}}L[t]&&!e||d(L,t,e?r:M&&O[t]||r,n)}},exportTypedArrayStaticMethod:function(t,r,e){var n,o;if(u){if(b){if(e)for(n in F)if((o=s[n])&&l(o,t))try{delete o[t]}catch(i){}if(T[t]&&!e)return;try{return d(T,t,e?r:M&&T[t]||r)}catch(i){}}for(n in F)!(o=s[n])||o[t]&&!e||d(o,t,r)}},getTypedArrayConstructor:D,isView:function(t){if(!f(t))return!1;var r=p(t);return"DataView"===r||l(F,r)||l(N,r)},isTypedArray:H,TypedArray:T,TypedArrayPrototype:L}},53816:(t,r,e)=>{"use strict";var n=e(9859),o=e(65968),i=e(7400),a=e(9772),u=e(51805),s=e(75762),c=e(8312),f=e(24229),l=e(57728),p=e(43329),h=e(34237),v=e(7331),d=e(56201),g=e(67567),y=e(56540),m=e(78151).f,b=e(31787).f,x=e(97065),w=e(69794),S=e(54555),A=e(56407),R=u.PROPER,E=u.CONFIGURABLE,O=A.get,I=A.set,P="ArrayBuffer",T="DataView",L="Wrong index",j=n.ArrayBuffer,U=j,k=U&&U.prototype,C=n.DataView,_=C&&C.prototype,M=Object.prototype,B=n.Array,F=n.RangeError,N=o(x),D=o([].reverse),H=d.pack,q=d.unpack,G=function(t){return[255&t]},V=function(t){return[255&t,t>>8&255]},W=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},$=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},Y=function(t){return H(t,23,4)},z=function(t){return H(t,52,8)},K=function(t,r){b(t.prototype,r,{get:function(){return O(this)[r]}})},J=function(t,r,e,n){var o=v(e),i=O(t);if(o+r>i.byteLength)throw F(L);var a=O(i.buffer).bytes,u=o+i.byteOffset,s=w(a,u,u+r);return n?s:D(s)},Q=function(t,r,e,n,o,i){var a=v(e),u=O(t);if(a+r>u.byteLength)throw F(L);for(var s=O(u.buffer).bytes,c=a+u.byteOffset,f=n(+o),l=0;l<r;l++)s[c+l]=f[i?l:r-l-1]};if(a){var X=R&&j.name!==P;if(f((function(){j(1)}))&&f((function(){new j(-1)}))&&!f((function(){return new j,new j(1.5),new j(NaN),1!=j.length||X&&!E})))X&&E&&s(j,"name",P);else{(U=function(t){return l(this,k),new j(v(t))}).prototype=k;for(var Z,tt=m(j),rt=0;tt.length>rt;)(Z=tt[rt++])in U||s(U,Z,j[Z]);k.constructor=U}y&&g(_)!==M&&y(_,M);var et=new C(new U(2)),nt=o(_.setInt8);et.setInt8(0,2147483648),et.setInt8(1,2147483649),!et.getInt8(0)&&et.getInt8(1)||c(_,{setInt8:function(t,r){nt(this,t,r<<24>>24)},setUint8:function(t,r){nt(this,t,r<<24>>24)}},{unsafe:!0})}else k=(U=function(t){l(this,k);var r=v(t);I(this,{bytes:N(B(r),0),byteLength:r}),i||(this.byteLength=r)}).prototype,_=(C=function(t,r,e){l(this,_),l(t,k);var n=O(t).byteLength,o=p(r);if(o<0||o>n)throw F("Wrong offset");if(o+(e=void 0===e?n-o:h(e))>n)throw F("Wrong length");I(this,{buffer:t,byteLength:e,byteOffset:o}),i||(this.buffer=t,this.byteLength=e,this.byteOffset=o)}).prototype,i&&(K(U,"byteLength"),K(C,"buffer"),K(C,"byteLength"),K(C,"byteOffset")),c(_,{getInt8:function(t){return J(this,1,t)[0]<<24>>24},getUint8:function(t){return J(this,1,t)[0]},getInt16:function(t){var r=J(this,2,t,arguments.length>1?arguments[1]:void 0);return(r[1]<<8|r[0])<<16>>16},getUint16:function(t){var r=J(this,2,t,arguments.length>1?arguments[1]:void 0);return r[1]<<8|r[0]},getInt32:function(t){return $(J(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t){return $(J(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t){return q(J(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t){return q(J(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,r){Q(this,1,t,G,r)},setUint8:function(t,r){Q(this,1,t,G,r)},setInt16:function(t,r){Q(this,2,t,V,r,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,r){Q(this,2,t,V,r,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,r){Q(this,4,t,W,r,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,r){Q(this,4,t,W,r,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,r){Q(this,4,t,Y,r,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,r){Q(this,8,t,z,r,arguments.length>2?arguments[2]:void 0)}});S(U,P),S(C,T),t.exports={ArrayBuffer:U,DataView:C}},97065:(t,r,e)=>{"use strict";var n=e(92991),o=e(43231),i=e(39646);t.exports=function(t){for(var r=n(this),e=i(r),a=arguments.length,u=o(a>1?arguments[1]:void 0,e),s=a>2?arguments[2]:void 0,c=void 0===s?e:o(s,e);c>u;)r[u++]=t;return r}},10507:(t,r,e)=>{"use strict";var n=e(97636),o=e(20266),i=e(92991),a=e(64960),u=e(91943),s=e(82359),c=e(39646),f=e(62324),l=e(28403),p=e(78830),h=Array;t.exports=function(t){var r=i(t),e=s(this),v=arguments.length,d=v>1?arguments[1]:void 0,g=void 0!==d;g&&(d=n(d,v>2?arguments[2]:void 0));var y,m,b,x,w,S,A=p(r),R=0;if(!A||this===h&&u(A))for(y=c(r),m=e?new this(y):h(y);y>R;R++)S=g?d(r[R],R):r[R],f(m,R,S);else for(w=(x=l(r,A)).next,m=e?new this:[];!(b=o(w,x)).done;R++)S=g?a(x,d,[b.value,R],!0):b.value,f(m,R,S);return m.length=R,m}},19540:(t,r,e)=>{var n=e(10905),o=e(43231),i=e(39646),a=function(t){return function(r,e,a){var u,s=n(r),c=i(s),f=o(a,c);if(t&&e!=e){for(;c>f;)if((u=s[f++])!=u)return!0}else for(;c>f;f++)if((t||f in s)&&s[f]===e)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},89996:(t,r,e)=>{var n=e(97636),o=e(65968),i=e(9337),a=e(92991),u=e(39646),s=e(87501),c=o([].push),f=function(t){var r=1==t,e=2==t,o=3==t,f=4==t,l=6==t,p=7==t,h=5==t||l;return function(v,d,g,y){for(var m,b,x=a(v),w=i(x),S=n(d,g),A=u(w),R=0,E=y||s,O=r?E(v,A):e||p?E(v,0):void 0;A>R;R++)if((h||R in w)&&(b=S(m=w[R],R,x),t))if(r)O[R]=b;else if(b)switch(t){case 3:return!0;case 5:return m;case 6:return R;case 2:c(O,m)}else switch(t){case 4:return!1;case 7:c(O,m)}return l?-1:o||f?f:O}};t.exports={forEach:f(0),map:f(1),filter:f(2),some:f(3),every:f(4),find:f(5),findIndex:f(6),filterReject:f(7)}},96038:(t,r,e)=>{"use strict";var n=e(24229);t.exports=function(t,r){var e=[][t];return!!e&&n((function(){e.call(null,r||function(){return 1},1)}))}},43143:(t,r,e)=>{var n=e(77111),o=e(92991),i=e(9337),a=e(39646),u=TypeError,s=function(t){return function(r,e,s,c){n(e);var f=o(r),l=i(f),p=a(f),h=t?p-1:0,v=t?-1:1;if(s<2)for(;;){if(h in l){c=l[h],h+=v;break}if(h+=v,t?h<0:p<=h)throw u("Reduce of empty array with no initial value")}for(;t?h>=0:p>h;h+=v)h in l&&(c=e(c,l[h],h,f));return c}};t.exports={left:s(!1),right:s(!0)}},69794:(t,r,e)=>{var n=e(43231),o=e(39646),i=e(62324),a=Array,u=Math.max;t.exports=function(t,r,e){for(var s=o(t),c=n(r,s),f=n(void 0===e?s:e,s),l=a(u(f-c,0)),p=0;c<f;c++,p++)i(l,p,t[c]);return l.length=p,l}},1909:(t,r,e)=>{var n=e(65968);t.exports=n([].slice)},33867:(t,r,e)=>{var n=e(69794),o=Math.floor,i=function(t,r){var e=t.length,s=o(e/2);return e<8?a(t,r):u(t,i(n(t,0,s),r),i(n(t,s),r),r)},a=function(t,r){for(var e,n,o=t.length,i=1;i<o;){for(n=i,e=t[i];n&&r(t[n-1],e)>0;)t[n]=t[--n];n!==i++&&(t[n]=e)}return t},u=function(t,r,e,n){for(var o=r.length,i=e.length,a=0,u=0;a<o||u<i;)t[a+u]=a<o&&u<i?n(r[a],e[u])<=0?r[a++]:e[u++]:a<o?r[a++]:e[u++];return t};t.exports=i},18760:(t,r,e)=>{var n=e(33718),o=e(82359),i=e(85052),a=e(70095)("species"),u=Array;t.exports=function(t){var r;return n(t)&&(r=t.constructor,(o(r)&&(r===u||n(r.prototype))||i(r)&&null===(r=r[a]))&&(r=void 0)),void 0===r?u:r}},87501:(t,r,e)=>{var n=e(18760);t.exports=function(t,r){return new(n(t))(0===r?0:r)}},64960:(t,r,e)=>{var n=e(21176),o=e(57281);t.exports=function(t,r,e,i){try{return i?r(n(e)[0],e[1]):r(e)}catch(a){o(t,"throw",a)}}},74575:(t,r,e)=>{var n=e(70095)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(u){}t.exports=function(t,r){if(!r&&!o)return!1;var e=!1;try{var i={};i[n]=function(){return{next:function(){return{done:e=!0}}}},t(i)}catch(u){}return e}},27079:(t,r,e)=>{var n=e(65968),o=n({}.toString),i=n("".slice);t.exports=function(t){return i(o(t),8,-1)}},81589:(t,r,e)=>{var n=e(71601),o=e(26733),i=e(27079),a=e(70095)("toStringTag"),u=Object,s="Arguments"==i(function(){return arguments}());t.exports=n?i:function(t){var r,e,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(e=function(t,r){try{return t[r]}catch(e){}}(r=u(t),a))?e:s?i(r):"Object"==(n=i(r))&&o(r.callee)?"Arguments":n}},77081:(t,r,e)=>{var n=e(98270),o=e(4826),i=e(97933),a=e(31787);t.exports=function(t,r,e){for(var u=o(r),s=a.f,c=i.f,f=0;f<u.length;f++){var l=u[f];n(t,l)||e&&n(e,l)||s(t,l,c(r,l))}}},48127:(t,r,e)=>{var n=e(70095)("match");t.exports=function(t){var r=/./;try{"/./"[t](r)}catch(e){try{return r[n]=!1,"/./"[t](r)}catch(o){}}return!1}},27528:(t,r,e)=>{var n=e(24229);t.exports=!n((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},33684:t=>{t.exports=function(t,r){return{value:t,done:r}}},75762:(t,r,e)=>{var n=e(7400),o=e(31787),i=e(65358);t.exports=n?function(t,r,e){return o.f(t,r,i(1,e))}:function(t,r,e){return t[r]=e,t}},65358:t=>{t.exports=function(t,r){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:r}}},62324:(t,r,e)=>{"use strict";var n=e(39310),o=e(31787),i=e(65358);t.exports=function(t,r,e){var a=n(r);a in t?o.f(t,a,i(0,e)):t[a]=e}},96616:(t,r,e)=>{var n=e(16039),o=e(31787);t.exports=function(t,r,e){return e.get&&n(e.get,r,{getter:!0}),e.set&&n(e.set,r,{setter:!0}),o.f(t,r,e)}},14768:(t,r,e)=>{var n=e(26733),o=e(31787),i=e(16039),a=e(18400);t.exports=function(t,r,e,u){u||(u={});var s=u.enumerable,c=void 0!==u.name?u.name:r;if(n(e)&&i(e,c,u),u.global)s?t[r]=e:a(r,e);else{try{u.unsafe?t[r]&&(s=!0):delete t[r]}catch(f){}s?t[r]=e:o.f(t,r,{value:e,enumerable:!1,configurable:!u.nonConfigurable,writable:!u.nonWritable})}return t}},8312:(t,r,e)=>{var n=e(14768);t.exports=function(t,r,e){for(var o in r)n(t,o,r[o],e);return t}},18400:(t,r,e)=>{var n=e(9859),o=Object.defineProperty;t.exports=function(t,r){try{o(n,t,{value:r,configurable:!0,writable:!0})}catch(e){n[t]=r}return r}},79563:(t,r,e)=>{"use strict";var n=e(59821),o=TypeError;t.exports=function(t,r){if(!delete t[r])throw o("Cannot delete property "+n(r)+" of "+n(t))}},7400:(t,r,e)=>{var n=e(24229);t.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},63777:t=>{var r="object"==typeof document&&document.all,e=void 0===r&&void 0!==r;t.exports={all:r,IS_HTMLDDA:e}},22635:(t,r,e)=>{var n=e(9859),o=e(85052),i=n.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},13064:t=>{var r=TypeError;t.exports=function(t){if(t>9007199254740991)throw r("Maximum allowed index exceeded");return t}},95694:t=>{t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},18865:(t,r,e)=>{var n=e(22635)("span").classList,o=n&&n.constructor&&n.constructor.prototype;t.exports=o===Object.prototype?void 0:o},22671:(t,r,e)=>{var n=e(80598).match(/firefox\/(\d+)/i);t.exports=!!n&&+n[1]},48639:(t,r,e)=>{var n=e(95189),o=e(28801);t.exports=!n&&!o&&"object"==typeof window&&"object"==typeof document},95189:t=>{t.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},48506:(t,r,e)=>{var n=e(80598);t.exports=/MSIE|Trident/.test(n)},8983:(t,r,e)=>{var n=e(80598),o=e(9859);t.exports=/ipad|iphone|ipod/i.test(n)&&void 0!==o.Pebble},32023:(t,r,e)=>{var n=e(80598);t.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(n)},28801:(t,r,e)=>{var n=e(27079),o=e(9859);t.exports="process"==n(o.process)},10263:(t,r,e)=>{var n=e(80598);t.exports=/web0s(?!.*chrome)/i.test(n)},80598:(t,r,e)=>{var n=e(31333);t.exports=n("navigator","userAgent")||""},6358:(t,r,e)=>{var n,o,i=e(9859),a=e(80598),u=i.process,s=i.Deno,c=u&&u.versions||s&&s.version,f=c&&c.v8;f&&(o=(n=f.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(o=+n[1]),t.exports=o},49811:(t,r,e)=>{var n=e(80598).match(/AppleWebKit\/(\d+)\./);t.exports=!!n&&+n[1]},13837:t=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},23103:(t,r,e)=>{var n=e(9859),o=e(97933).f,i=e(75762),a=e(14768),u=e(18400),s=e(77081),c=e(46541);t.exports=function(t,r){var e,f,l,p,h,v=t.target,d=t.global,g=t.stat;if(e=d?n:g?n[v]||u(v,{}):(n[v]||{}).prototype)for(f in r){if(p=r[f],l=t.dontCallGetSet?(h=o(e,f))&&h.value:e[f],!c(d?f:v+(g?".":"#")+f,t.forced)&&void 0!==l){if(typeof p==typeof l)continue;s(p,l)}(t.sham||l&&l.sham)&&i(p,"sham",!0),a(e,f,p,t)}}},24229:t=>{t.exports=function(t){try{return!!t()}catch(r){return!0}}},94954:(t,r,e)=>{"use strict";e(77950);var n=e(65968),o=e(14768),i=e(63466),a=e(24229),u=e(70095),s=e(75762),c=u("species"),f=RegExp.prototype;t.exports=function(t,r,e,l){var p=u(t),h=!a((function(){var r={};return r[p]=function(){return 7},7!=""[t](r)})),v=h&&!a((function(){var r=!1,e=/a/;return"split"===t&&((e={}).constructor={},e.constructor[c]=function(){return e},e.flags="",e[p]=/./[p]),e.exec=function(){return r=!0,null},e[p](""),!r}));if(!h||!v||e){var d=n(/./[p]),g=r(p,""[t],(function(t,r,e,o,a){var u=n(t),s=r.exec;return s===i||s===f.exec?h&&!a?{done:!0,value:d(r,e,o)}:{done:!0,value:u(e,r,o)}:{done:!1}}));o(String.prototype,t,g[0]),o(f,p,g[1])}l&&s(f[p],"sham",!0)}},34990:(t,r,e)=>{"use strict";var n=e(33718),o=e(39646),i=e(13064),a=e(97636),u=function(t,r,e,s,c,f,l,p){for(var h,v,d=c,g=0,y=!!l&&a(l,p);g<s;)g in e&&(h=y?y(e[g],g,r):e[g],f>0&&n(h)?(v=o(h),d=u(t,r,h,v,d,f-1)-1):(i(d+1),t[d]=h),d++),g++;return d};t.exports=u},53171:(t,r,e)=>{var n=e(57188),o=Function.prototype,i=o.apply,a=o.call;t.exports="object"==typeof Reflect&&Reflect.apply||(n?a.bind(i):function(){return a.apply(i,arguments)})},97636:(t,r,e)=>{var n=e(65968),o=e(77111),i=e(57188),a=n(n.bind);t.exports=function(t,r){return o(t),void 0===r?t:i?a(t,r):function(){return t.apply(r,arguments)}}},57188:(t,r,e)=>{var n=e(24229);t.exports=!n((function(){var t=(function(){}).bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},20266:(t,r,e)=>{var n=e(57188),o=Function.prototype.call;t.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},51805:(t,r,e)=>{var n=e(7400),o=e(98270),i=Function.prototype,a=n&&Object.getOwnPropertyDescriptor,u=o(i,"name"),s=u&&"something"===(function(){}).name,c=u&&(!n||n&&a(i,"name").configurable);t.exports={EXISTS:u,PROPER:s,CONFIGURABLE:c}},65968:(t,r,e)=>{var n=e(57188),o=Function.prototype,i=o.bind,a=o.call,u=n&&i.bind(a,a);t.exports=n?function(t){return t&&u(t)}:function(t){return t&&function(){return a.apply(t,arguments)}}},31333:(t,r,e)=>{var n=e(9859),o=e(26733),i=function(t){return o(t)?t:void 0};t.exports=function(t,r){return arguments.length<2?i(n[t]):n[t]&&n[t][r]}},78830:(t,r,e)=>{var n=e(81589),o=e(55300),i=e(9650),a=e(45495),u=e(70095)("iterator");t.exports=function(t){if(!i(t))return o(t,u)||o(t,"@@iterator")||a[n(t)]}},28403:(t,r,e)=>{var n=e(20266),o=e(77111),i=e(21176),a=e(59821),u=e(78830),s=TypeError;t.exports=function(t,r){var e=arguments.length<2?u(t):r;if(o(e))return i(n(e,t));throw s(a(t)+" is not iterable")}},55300:(t,r,e)=>{var n=e(77111),o=e(9650);t.exports=function(t,r){var e=t[r];return o(e)?void 0:n(e)}},70017:(t,r,e)=>{var n=e(65968),o=e(92991),i=Math.floor,a=n("".charAt),u=n("".replace),s=n("".slice),c=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,f=/\$([$&'`]|\d{1,2})/g;t.exports=function(t,r,e,n,l,p){var h=e+t.length,v=n.length,d=f;return void 0!==l&&(l=o(l),d=c),u(p,d,(function(o,u){var c;switch(a(u,0)){case"$":return"$";case"&":return t;case"`":return s(r,0,e);case"'":return s(r,h);case"<":c=l[s(u,1,-1)];break;default:var f=+u;if(0===f)return o;if(f>v){var p=i(f/10);return 0===p?o:p<=v?void 0===n[p-1]?a(u,1):n[p-1]+a(u,1):o}c=n[f-1]}return void 0===c?"":c}))}},9859:t=>{var r=function(t){return t&&t.Math==Math&&t};t.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||function(){return this}()||Function("return this")()},98270:(t,r,e)=>{var n=e(65968),o=e(92991),i=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,r){return i(o(t),r)}},95977:t=>{t.exports={}},14665:(t,r,e)=>{var n=e(9859);t.exports=function(t,r){var e=n.console;e&&e.error&&(1==arguments.length?e.error(t):e.error(t,r))}},53777:(t,r,e)=>{var n=e(31333);t.exports=n("document","documentElement")},64394:(t,r,e)=>{var n=e(7400),o=e(24229),i=e(22635);t.exports=!n&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},56201:t=>{var r=Array,e=Math.abs,n=Math.pow,o=Math.floor,i=Math.log,a=Math.LN2;t.exports={pack:function(t,u,s){var c,f,l,p=r(s),h=8*s-u-1,v=(1<<h)-1,d=v>>1,g=23===u?n(2,-24)-n(2,-77):0,y=t<0||0===t&&1/t<0?1:0,m=0;for((t=e(t))!=t||t===1/0?(f=t!=t?1:0,c=v):(c=o(i(t)/a),t*(l=n(2,-c))<1&&(c--,l*=2),(t+=c+d>=1?g/l:g*n(2,1-d))*l>=2&&(c++,l/=2),c+d>=v?(f=0,c=v):c+d>=1?(f=(t*l-1)*n(2,u),c+=d):(f=t*n(2,d-1)*n(2,u),c=0));u>=8;)p[m++]=255&f,f/=256,u-=8;for(c=c<<u|f,h+=u;h>0;)p[m++]=255&c,c/=256,h-=8;return p[--m]|=128*y,p},unpack:function(t,r){var e,o=t.length,i=8*o-r-1,a=(1<<i)-1,u=a>>1,s=i-7,c=o-1,f=t[c--],l=127&f;for(f>>=7;s>0;)l=256*l+t[c--],s-=8;for(e=l&(1<<-s)-1,l>>=-s,s+=r;s>0;)e=256*e+t[c--],s-=8;if(0===l)l=1-u;else{if(l===a)return e?NaN:f?-1/0:1/0;e+=n(2,r),l-=u}return(f?-1:1)*e*n(2,l-r)}}},9337:(t,r,e)=>{var n=e(65968),o=e(24229),i=e(27079),a=Object,u=n("".split);t.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"==i(t)?u(t,""):a(t)}:a},20835:(t,r,e)=>{var n=e(26733),o=e(85052),i=e(56540);t.exports=function(t,r,e){var a,u;return i&&n(a=r.constructor)&&a!==e&&o(u=a.prototype)&&u!==e.prototype&&i(t,u),t}},8511:(t,r,e)=>{var n=e(65968),o=e(26733),i=e(85353),a=n(Function.toString);o(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},56407:(t,r,e)=>{var n,o,i,a=e(51180),u=e(9859),s=e(65968),c=e(85052),f=e(75762),l=e(98270),p=e(85353),h=e(44399),v=e(95977),d="Object already initialized",g=u.TypeError,y=u.WeakMap;if(a||p.state){var m=p.state||(p.state=new y),b=s(m.get),x=s(m.has),w=s(m.set);n=function(t,r){if(x(m,t))throw g(d);return r.facade=t,w(m,t,r),r},o=function(t){return b(m,t)||{}},i=function(t){return x(m,t)}}else{var S=h("state");v[S]=!0,n=function(t,r){if(l(t,S))throw g(d);return r.facade=t,f(t,S,r),r},o=function(t){return l(t,S)?t[S]:{}},i=function(t){return l(t,S)}}t.exports={set:n,get:o,has:i,enforce:function(t){return i(t)?o(t):n(t,{})},getterFor:function(t){return function(r){var e;if(!c(r)||(e=o(r)).type!==t)throw g("Incompatible receiver, "+t+" required");return e}}}},91943:(t,r,e)=>{var n=e(70095),o=e(45495),i=n("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(o.Array===t||a[i]===t)}},33718:(t,r,e)=>{var n=e(27079);t.exports=Array.isArray||function(t){return"Array"==n(t)}},79098:(t,r,e)=>{var n=e(81589),o=e(65968)("".slice);t.exports=function(t){return"Big"===o(n(t),0,3)}},26733:(t,r,e)=>{var n=e(63777),o=n.all;t.exports=n.IS_HTMLDDA?function(t){return"function"==typeof t||t===o}:function(t){return"function"==typeof t}},82359:(t,r,e)=>{var n=e(65968),o=e(24229),i=e(26733),a=e(81589),u=e(31333),s=e(8511),c=function(){},f=[],l=u("Reflect","construct"),p=/^\s*(?:class|function)\b/,h=n(p.exec),v=!p.exec(c),d=function(t){if(!i(t))return!1;try{return l(c,f,t),!0}catch(r){return!1}},g=function(t){if(!i(t))return!1;switch(a(t)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return v||!!h(p,s(t))}catch(r){return!0}};g.sham=!0,t.exports=!l||o((function(){var t;return d(d.call)||!d(Object)||!d((function(){t=!0}))||t}))?g:d},90193:(t,r,e)=>{var n=e(98270);t.exports=function(t){return void 0!==t&&(n(t,"value")||n(t,"writable"))}},46541:(t,r,e)=>{var n=e(24229),o=e(26733),i=/#|\.prototype\./,a=function(t,r){var e=s[u(t)];return e==f||e!=c&&(o(r)?n(r):!!r)},u=a.normalize=function(t){return String(t).replace(i,".").toLowerCase()},s=a.data={},c=a.NATIVE="N",f=a.POLYFILL="P";t.exports=a},82292:(t,r,e)=>{var n=e(85052),o=Math.floor;t.exports=Number.isInteger||function(t){return!n(t)&&isFinite(t)&&o(t)===t}},9650:t=>{t.exports=function(t){return null==t}},85052:(t,r,e)=>{var n=e(26733),o=e(63777),i=o.all;t.exports=o.IS_HTMLDDA?function(t){return"object"==typeof t?null!==t:n(t)||t===i}:function(t){return"object"==typeof t?null!==t:n(t)}},24231:t=>{t.exports=!1},48311:(t,r,e)=>{var n=e(85052),o=e(27079),i=e(70095)("match");t.exports=function(t){var r;return n(t)&&(void 0!==(r=t[i])?!!r:"RegExp"==o(t))}},49395:(t,r,e)=>{var n=e(31333),o=e(26733),i=e(91321),a=e(66969),u=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var r=n("Symbol");return o(r)&&i(r.prototype,u(t))}},89003:(t,r,e)=>{var n=e(97636),o=e(20266),i=e(21176),a=e(59821),u=e(91943),s=e(39646),c=e(91321),f=e(28403),l=e(78830),p=e(57281),h=TypeError,v=function(t,r){this.stopped=t,this.result=r},d=v.prototype;t.exports=function(t,r,e){var g,y,m,b,x,w,S,A=e&&e.that,R=!(!e||!e.AS_ENTRIES),E=!(!e||!e.IS_RECORD),O=!(!e||!e.IS_ITERATOR),I=!(!e||!e.INTERRUPTED),P=n(r,A),T=function(t){return g&&p(g,"normal",t),new v(!0,t)},L=function(t){return R?(i(t),I?P(t[0],t[1],T):P(t[0],t[1])):I?P(t,T):P(t)};if(E)g=t.iterator;else if(O)g=t;else{if(!(y=l(t)))throw h(a(t)+" is not iterable");if(u(y)){for(m=0,b=s(t);b>m;m++)if((x=L(t[m]))&&c(d,x))return x;return new v(!1)}g=f(t,y)}for(w=E?t.next:g.next;!(S=o(w,g)).done;){try{x=L(S.value)}catch(j){p(g,"throw",j)}if("object"==typeof x&&x&&c(d,x))return x}return new v(!1)}},57281:(t,r,e)=>{var n=e(20266),o=e(21176),i=e(55300);t.exports=function(t,r,e){var a,u;o(t);try{if(!(a=i(t,"return"))){if("throw"===r)throw e;return e}a=n(a,t)}catch(s){u=!0,a=s}if("throw"===r)throw e;if(u)throw a;return o(a),e}},42247:(t,r,e)=>{"use strict";var n=e(60693).IteratorPrototype,o=e(22391),i=e(65358),a=e(54555),u=e(45495),s=function(){return this};t.exports=function(t,r,e,c){var f=r+" Iterator";return t.prototype=o(n,{next:i(+!c,e)}),a(t,f,!1,!0),u[f]=s,t}},12707:(t,r,e)=>{"use strict";var n=e(23103),o=e(20266),i=e(24231),a=e(51805),u=e(26733),s=e(42247),c=e(67567),f=e(56540),l=e(54555),p=e(75762),h=e(14768),v=e(70095),d=e(45495),g=e(60693),y=a.PROPER,m=a.CONFIGURABLE,b=g.IteratorPrototype,x=g.BUGGY_SAFARI_ITERATORS,w=v("iterator"),S="keys",A="values",R="entries",E=function(){return this};t.exports=function(t,r,e,a,v,g,O){s(e,r,a);var I,P,T,L=function(t){if(t===v&&_)return _;if(!x&&t in k)return k[t];switch(t){case S:case A:case R:return function(){return new e(this,t)}}return function(){return new e(this)}},j=r+" Iterator",U=!1,k=t.prototype,C=k[w]||k["@@iterator"]||v&&k[v],_=!x&&C||L(v),M="Array"==r&&k.entries||C;if(M&&(I=c(M.call(new t)))!==Object.prototype&&I.next&&(i||c(I)===b||(f?f(I,b):u(I[w])||h(I,w,E)),l(I,j,!0,!0),i&&(d[j]=E)),y&&v==A&&C&&C.name!==A&&(!i&&m?p(k,"name",A):(U=!0,_=function(){return o(C,this)})),v)if(P={values:L(A),keys:g?_:L(S),entries:L(R)},O)for(T in P)(x||U||!(T in k))&&h(k,T,P[T]);else n({target:r,proto:!0,forced:x||U},P);return i&&!O||k[w]===_||h(k,w,_,{name:v}),d[r]=_,P}},60693:(t,r,e)=>{"use strict";var n,o,i,a=e(24229),u=e(26733),s=e(85052),c=e(22391),f=e(67567),l=e(14768),p=e(70095),h=e(24231),v=p("iterator"),d=!1;[].keys&&("next"in(i=[].keys())?(o=f(f(i)))!==Object.prototype&&(n=o):d=!0),!s(n)||a((function(){var t={};return n[v].call(t)!==t}))?n={}:h&&(n=c(n)),u(n[v])||l(n,v,(function(){return this})),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:d}},45495:t=>{t.exports={}},39646:(t,r,e)=>{var n=e(34237);t.exports=function(t){return n(t.length)}},16039:(t,r,e)=>{var n=e(24229),o=e(26733),i=e(98270),a=e(7400),u=e(51805).CONFIGURABLE,s=e(8511),c=e(56407),f=c.enforce,l=c.get,p=Object.defineProperty,h=a&&!n((function(){return 8!==p((function(){}),"length",{value:8}).length})),v=String(String).split("String"),d=t.exports=function(t,r,e){"Symbol("===String(r).slice(0,7)&&(r="["+String(r).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),e&&e.getter&&(r="get "+r),e&&e.setter&&(r="set "+r),(!i(t,"name")||u&&t.name!==r)&&(a?p(t,"name",{value:r,configurable:!0}):t.name=r),h&&e&&i(e,"arity")&&t.length!==e.arity&&p(t,"length",{value:e.arity});try{e&&i(e,"constructor")&&e.constructor?a&&p(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(o){}var n=f(t);return i(n,"source")||(n.source=v.join("string"==typeof r?r:"")),t};Function.prototype.toString=d((function(){return o(this)&&l(this).source||s(this)}),"toString")},50917:t=>{var r=Math.ceil,e=Math.floor;t.exports=Math.trunc||function(t){var n=+t;return(n>0?e:r)(n)}},24794:(t,r,e)=>{var n,o,i,a,u,s,c,f,l=e(9859),p=e(97636),h=e(97933).f,v=e(55795).set,d=e(32023),g=e(8983),y=e(10263),m=e(28801),b=l.MutationObserver||l.WebKitMutationObserver,x=l.document,w=l.process,S=l.Promise,A=h(l,"queueMicrotask"),R=A&&A.value;R||(n=function(){var t,r;for(m&&(t=w.domain)&&t.exit();o;){r=o.fn,o=o.next;try{r()}catch(e){throw o?a():i=void 0,e}}i=void 0,t&&t.enter()},d||m||y||!b||!x?!g&&S&&S.resolve?((c=S.resolve(void 0)).constructor=S,f=p(c.then,c),a=function(){f(n)}):m?a=function(){w.nextTick(n)}:(v=p(v,l),a=function(){v(n)}):(u=!0,s=x.createTextNode(""),new b(n).observe(s,{characterData:!0}),a=function(){s.data=u=!u})),t.exports=R||function(t){var r={fn:t,next:void 0};i&&(i.next=r),o||(o=r,a()),i=r}},16485:(t,r,e)=>{"use strict";var n=e(77111),o=TypeError,i=function(t){var r,e;this.promise=new t((function(t,n){if(void 0!==r||void 0!==e)throw o("Bad Promise constructor");r=t,e=n})),this.resolve=n(r),this.reject=n(e)};t.exports.f=function(t){return new i(t)}},47272:(t,r,e)=>{var n=e(48311),o=TypeError;t.exports=function(t){if(n(t))throw o("The method doesn't accept regular expressions");return t}},45496:(t,r,e)=>{var n=e(9859),o=e(24229),i=e(65968),a=e(83326),u=e(1017).trim,s=e(41647),c=i("".charAt),f=n.parseFloat,l=n.Symbol,p=l&&l.iterator,h=1/f(s+"-0")!=-1/0||p&&!o((function(){f(Object(p))}));t.exports=h?function(t){var r=u(a(t)),e=f(r);return 0===e&&"-"==c(r,0)?-0:e}:f},36596:(t,r,e)=>{var n=e(9859),o=e(24229),i=e(65968),a=e(83326),u=e(1017).trim,s=e(41647),c=n.parseInt,f=n.Symbol,l=f&&f.iterator,p=/^[+-]?0x/i,h=i(p.exec),v=8!==c(s+"08")||22!==c(s+"0x16")||l&&!o((function(){c(Object(l))}));t.exports=v?function(t,r){var e=u(a(t));return c(e,r>>>0||(h(p,e)?16:10))}:c},47:(t,r,e)=>{"use strict";var n=e(7400),o=e(65968),i=e(20266),a=e(24229),u=e(65632),s=e(10894),c=e(19195),f=e(92991),l=e(9337),p=Object.assign,h=Object.defineProperty,v=o([].concat);t.exports=!p||a((function(){if(n&&1!==p({b:1},p(h({},"a",{enumerable:!0,get:function(){h(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},r={},e=Symbol(),o="abcdefghijklmnopqrst";return t[e]=7,o.split("").forEach((function(t){r[t]=t})),7!=p({},t)[e]||u(p({},r)).join("")!=o}))?function(t,r){for(var e=f(t),o=arguments.length,a=1,p=s.f,h=c.f;o>a;)for(var d,g=l(arguments[a++]),y=p?v(u(g),p(g)):u(g),m=y.length,b=0;m>b;)d=y[b++],n&&!i(h,g,d)||(e[d]=g[d]);return e}:p},22391:(t,r,e)=>{var n,o=e(21176),i=e(90219),a=e(13837),u=e(95977),s=e(53777),c=e(22635),f=e(44399),l=f("IE_PROTO"),p=function(){},h=function(t){return"<script>"+t+"</"+"script>"},v=function(t){t.write(h("")),t.close();var r=t.parentWindow.Object;return t=null,r},d=function(){try{n=new ActiveXObject("htmlfile")}catch(o){}var t,r;d="undefined"!=typeof document?document.domain&&n?v(n):((r=c("iframe")).style.display="none",s.appendChild(r),r.src=String("javascript:"),(t=r.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F):v(n);for(var e=a.length;e--;)delete d.prototype[a[e]];return d()};u[l]=!0,t.exports=Object.create||function(t,r){var e;return null!==t?(p.prototype=o(t),e=new p,p.prototype=null,e[l]=t):e=d(),void 0===r?e:i.f(e,r)}},90219:(t,r,e)=>{var n=e(7400),o=e(17137),i=e(31787),a=e(21176),u=e(10905),s=e(65632);r.f=n&&!o?Object.defineProperties:function(t,r){a(t);for(var e,n=u(r),o=s(r),c=o.length,f=0;c>f;)i.f(t,e=o[f++],n[e]);return t}},31787:(t,r,e)=>{var n=e(7400),o=e(64394),i=e(17137),a=e(21176),u=e(39310),s=TypeError,c=Object.defineProperty,f=Object.getOwnPropertyDescriptor,l="enumerable",p="configurable",h="writable";r.f=n?i?function(t,r,e){if(a(t),r=u(r),a(e),"function"==typeof t&&"prototype"===r&&"value"in e&&h in e&&!e.writable){var n=f(t,r);n&&n.writable&&(t[r]=e.value,e={configurable:p in e?e.configurable:n.configurable,enumerable:l in e?e.enumerable:n.enumerable,writable:!1})}return c(t,r,e)}:c:function(t,r,e){if(a(t),r=u(r),a(e),o)try{return c(t,r,e)}catch(n){}if("get"in e||"set"in e)throw s("Accessors not supported");return"value"in e&&(t[r]=e.value),t}},97933:(t,r,e)=>{var n=e(7400),o=e(20266),i=e(19195),a=e(65358),u=e(10905),s=e(39310),c=e(98270),f=e(64394),l=Object.getOwnPropertyDescriptor;r.f=n?l:function(t,r){if(t=u(t),r=s(r),f)try{return l(t,r)}catch(e){}if(c(t,r))return a(!o(i.f,t,r),t[r])}},78151:(t,r,e)=>{var n=e(90140),o=e(13837).concat("length","prototype");r.f=Object.getOwnPropertyNames||function(t){return n(t,o)}},10894:(t,r)=>{r.f=Object.getOwnPropertySymbols},67567:(t,r,e)=>{var n=e(98270),o=e(26733),i=e(92991),a=e(44399),u=e(27528),s=a("IE_PROTO"),c=Object,f=c.prototype;t.exports=u?c.getPrototypeOf:function(t){var r=i(t);if(n(r,s))return r[s];var e=r.constructor;return o(e)&&r instanceof e?e.prototype:r instanceof c?f:null}},91321:(t,r,e)=>{var n=e(65968);t.exports=n({}.isPrototypeOf)},90140:(t,r,e)=>{var n=e(65968),o=e(98270),i=e(10905),a=e(19540).indexOf,u=e(95977),s=n([].push);t.exports=function(t,r){var e,n=i(t),c=0,f=[];for(e in n)!o(u,e)&&o(n,e)&&s(f,e);for(;r.length>c;)o(n,e=r[c++])&&(~a(f,e)||s(f,e));return f}},65632:(t,r,e)=>{var n=e(90140),o=e(13837);t.exports=Object.keys||function(t){return n(t,o)}},19195:(t,r)=>{"use strict";var e={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!e.call({1:2},1);r.f=o?function(t){var r=n(this,t);return!!r&&r.enumerable}:e},15020:(t,r,e)=>{"use strict";var n=e(24231),o=e(9859),i=e(24229),a=e(49811);t.exports=n||!i((function(){if(!(a&&a<535)){var t=Math.random();__defineSetter__.call(null,t,(function(){})),delete o[t]}}))},56540:(t,r,e)=>{var n=e(65968),o=e(21176),i=e(88505);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,r=!1,e={};try{(t=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(e,[]),r=e instanceof Array}catch(a){}return function(e,n){return o(e),i(n),r?t(e,n):e.__proto__=n,e}}():void 0)},32914:(t,r,e)=>{var n=e(20266),o=e(26733),i=e(85052),a=TypeError;t.exports=function(t,r){var e,u;if("string"===r&&o(e=t.toString)&&!i(u=n(e,t)))return u;if(o(e=t.valueOf)&&!i(u=n(e,t)))return u;if("string"!==r&&o(e=t.toString)&&!i(u=n(e,t)))return u;throw a("Can't convert object to primitive value")}},4826:(t,r,e)=>{var n=e(31333),o=e(65968),i=e(78151),a=e(10894),u=e(21176),s=o([].concat);t.exports=n("Reflect","ownKeys")||function(t){var r=i.f(u(t)),e=a.f;return e?s(r,e(t)):r}},49276:(t,r,e)=>{var n=e(9859);t.exports=n},64624:t=>{t.exports=function(t){try{return{error:!1,value:t()}}catch(r){return{error:!0,value:r}}}},38321:(t,r,e)=>{var n=e(9859),o=e(74473),i=e(26733),a=e(46541),u=e(8511),s=e(70095),c=e(48639),f=e(95189),l=e(24231),p=e(6358),h=o&&o.prototype,v=s("species"),d=!1,g=i(n.PromiseRejectionEvent),y=a("Promise",(function(){var t=u(o),r=t!==String(o);if(!r&&66===p)return!0;if(l&&(!h.catch||!h.finally))return!0;if(!p||p<51||!/native code/.test(t)){var e=new o((function(t){t(1)})),n=function(t){t((function(){}),(function(){}))};if((e.constructor={})[v]=n,!(d=e.then((function(){}))instanceof n))return!0}return!r&&(c||f)&&!g}));t.exports={CONSTRUCTOR:y,REJECTION_EVENT:g,SUBCLASSING:d}},74473:(t,r,e)=>{var n=e(9859);t.exports=n.Promise},62391:(t,r,e)=>{var n=e(21176),o=e(85052),i=e(16485);t.exports=function(t,r){if(n(t),o(r)&&r.constructor===t)return r;var e=i.f(t);return(0,e.resolve)(r),e.promise}},96866:(t,r,e)=>{var n=e(74473),o=e(74575),i=e(38321).CONSTRUCTOR;t.exports=i||!o((function(t){n.all(t).then(void 0,(function(){}))}))},26060:(t,r,e)=>{var n=e(31787).f;t.exports=function(t,r,e){e in t||n(t,e,{configurable:!0,get:function(){return r[e]},set:function(t){r[e]=t}})}},93358:t=>{var r=function(){this.head=null,this.tail=null};r.prototype={add:function(t){var r={item:t,next:null};this.head?this.tail.next=r:this.head=r,this.tail=r},get:function(){var t=this.head;if(t)return this.head=t.next,this.tail===t&&(this.tail=null),t.item}},t.exports=r},98115:(t,r,e)=>{var n=e(20266),o=e(21176),i=e(26733),a=e(27079),u=e(63466),s=TypeError;t.exports=function(t,r){var e=t.exec;if(i(e)){var c=n(e,t,r);return null!==c&&o(c),c}if("RegExp"===a(t))return n(u,t,r);throw s("RegExp#exec called on incompatible receiver")}},63466:(t,r,e)=>{"use strict";var n,o,i=e(20266),a=e(65968),u=e(83326),s=e(30895),c=e(25650),f=e(33036),l=e(22391),p=e(56407).get,h=e(42926),v=e(10461),d=f("native-string-replace",String.prototype.replace),g=RegExp.prototype.exec,y=g,m=a("".charAt),b=a("".indexOf),x=a("".replace),w=a("".slice),S=(o=/b*/g,i(g,n=/a/,"a"),i(g,o,"a"),0!==n.lastIndex||0!==o.lastIndex),A=c.BROKEN_CARET,R=void 0!==/()??/.exec("")[1];(S||R||A||h||v)&&(y=function(t){var r,e,n,o,a,c,f,h=this,v=p(h),E=u(t),O=v.raw;if(O)return O.lastIndex=h.lastIndex,r=i(y,O,E),h.lastIndex=O.lastIndex,r;var I=v.groups,P=A&&h.sticky,T=i(s,h),L=h.source,j=0,U=E;if(P&&(T=x(T,"y",""),-1===b(T,"g")&&(T+="g"),U=w(E,h.lastIndex),h.lastIndex>0&&(!h.multiline||h.multiline&&"\n"!==m(E,h.lastIndex-1))&&(L="(?: "+L+")",U=" "+U,j++),e=new RegExp("^(?:"+L+")",T)),R&&(e=new RegExp("^"+L+"$(?!\\s)",T)),S&&(n=h.lastIndex),o=i(g,P?e:h,U),P?o?(o.input=w(o.input,j),o[0]=w(o[0],j),o.index=h.lastIndex,h.lastIndex+=o[0].length):h.lastIndex=0:S&&o&&(h.lastIndex=h.global?o.index+o[0].length:n),R&&o&&o.length>1&&i(d,o[0],e,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&I)for(o.groups=c=l(null),a=0;a<I.length;a++)c[(f=I[a])[0]]=o[f[1]];return o}),t.exports=y},30895:(t,r,e)=>{"use strict";var n=e(21176);t.exports=function(){var t=n(this),r="";return t.hasIndices&&(r+="d"),t.global&&(r+="g"),t.ignoreCase&&(r+="i"),t.multiline&&(r+="m"),t.dotAll&&(r+="s"),t.unicode&&(r+="u"),t.unicodeSets&&(r+="v"),t.sticky&&(r+="y"),r}},83349:(t,r,e)=>{var n=e(20266),o=e(98270),i=e(91321),a=e(30895),u=RegExp.prototype;t.exports=function(t){var r=t.flags;return void 0!==r||"flags"in u||o(t,"flags")||!i(u,t)?r:n(a,t)}},25650:(t,r,e)=>{var n=e(24229),o=e(9859).RegExp,i=n((function(){var t=o("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),a=i||n((function(){return!o("a","y").sticky})),u=i||n((function(){var t=o("^r","gy");return t.lastIndex=2,null!=t.exec("str")}));t.exports={BROKEN_CARET:u,MISSED_STICKY:a,UNSUPPORTED_Y:i}},42926:(t,r,e)=>{var n=e(24229),o=e(9859).RegExp;t.exports=n((function(){var t=o(".","s");return!(t.dotAll&&t.exec("\n")&&"s"===t.flags)}))},10461:(t,r,e)=>{var n=e(24229),o=e(9859).RegExp;t.exports=n((function(){var t=o("(?<a>b)","g");return"b"!==t.exec("b").groups.a||"bc"!=="b".replace(t,"$<a>c")}))},58885:(t,r,e)=>{var n=e(9650),o=TypeError;t.exports=function(t){if(n(t))throw o("Can't call method on "+t);return t}},72101:t=>{t.exports=Object.is||function(t,r){return t===r?0!==t||1/t==1/r:t!=t&&r!=r}},71832:(t,r,e)=>{"use strict";var n=e(31333),o=e(31787),i=e(70095),a=e(7400),u=i("species");t.exports=function(t){var r=n(t),e=o.f;a&&r&&!r[u]&&e(r,u,{configurable:!0,get:function(){return this}})}},54555:(t,r,e)=>{var n=e(31787).f,o=e(98270),i=e(70095)("toStringTag");t.exports=function(t,r,e){t&&!e&&(t=t.prototype),t&&!o(t,i)&&n(t,i,{configurable:!0,value:r})}},44399:(t,r,e)=>{var n=e(33036),o=e(81441),i=n("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},85353:(t,r,e)=>{var n=e(9859),o=e(18400),i="__core-js_shared__",a=n[i]||o(i,{});t.exports=a},33036:(t,r,e)=>{var n=e(24231),o=e(85353);(t.exports=function(t,r){return o[t]||(o[t]=void 0!==r?r:{})})("versions",[]).push({version:"3.25.2",mode:n?"pure":"global",copyright:"\xa9 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.2/LICENSE",source:"https://github.com/zloirock/core-js"})},37942:(t,r,e)=>{var n=e(21176),o=e(57988),i=e(9650),a=e(70095)("species");t.exports=function(t,r){var e,u=n(t).constructor;return void 0===u||i(e=n(u)[a])?r:o(e)}},30966:(t,r,e)=>{var n=e(65968),o=e(43329),i=e(83326),a=e(58885),u=n("".charAt),s=n("".charCodeAt),c=n("".slice),f=function(t){return function(r,e){var n,f,l=i(a(r)),p=o(e),h=l.length;return p<0||p>=h?t?"":void 0:(n=s(l,p))<55296||n>56319||p+1===h||(f=s(l,p+1))<56320||f>57343?t?u(l,p):n:t?c(l,p,p+2):f-56320+(n-55296<<10)+65536}};t.exports={codeAt:f(!1),charAt:f(!0)}},57456:(t,r,e)=>{var n=e(80598);t.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(n)},46650:(t,r,e)=>{var n=e(65968),o=e(34237),i=e(83326),a=e(93124),u=e(58885),s=n(a),c=n("".slice),f=Math.ceil,l=function(t){return function(r,e,n){var a,l,p=i(u(r)),h=o(e),v=p.length,d=void 0===n?" ":i(n);return h<=v||""==d?p:((l=s(d,f((a=h-v)/d.length))).length>a&&(l=c(l,0,a)),t?p+l:l+p)}};t.exports={start:l(!1),end:l(!0)}},77321:(t,r,e)=>{"use strict";var n=e(65968),o=2147483647,i=/[^\0-\u007E]/,a=/[.\u3002\uFF0E\uFF61]/g,u="Overflow: input needs wider integers to process",s=RangeError,c=n(a.exec),f=Math.floor,l=String.fromCharCode,p=n("".charCodeAt),h=n([].join),v=n([].push),d=n("".replace),g=n("".split),y=n("".toLowerCase),m=function(t){return t+22+75*(t<26)},b=function(t,r,e){var n=0;for(t=e?f(t/700):t>>1,t+=f(t/r);t>455;)t=f(t/35),n+=36;return f(n+36*t/(t+38))},x=function(t){var r=[];t=function(t){for(var r=[],e=0,n=t.length;e<n;){var o=p(t,e++);if(o>=55296&&o<=56319&&e<n){var i=p(t,e++);56320==(64512&i)?v(r,((1023&o)<<10)+(1023&i)+65536):(v(r,o),e--)}else v(r,o)}return r}(t);var e,n,i=t.length,a=128,c=0,d=72;for(e=0;e<t.length;e++)(n=t[e])<128&&v(r,l(n));var g=r.length,y=g;for(g&&v(r,"-");y<i;){var x=o;for(e=0;e<t.length;e++)(n=t[e])>=a&&n<x&&(x=n);var w=y+1;if(x-a>f((o-c)/w))throw s(u);for(c+=(x-a)*w,a=x,e=0;e<t.length;e++){if((n=t[e])<a&&++c>o)throw s(u);if(n==a){for(var S=c,A=36;;){var R=A<=d?1:A>=d+26?26:A-d;if(S<R)break;var E=S-R,O=36-R;v(r,l(m(R+E%O))),S=f(E/O),A+=36}v(r,l(m(S))),d=b(c,w,y==g),c=0,y++}}c++,a++}return h(r,"")};t.exports=function(t){var r,e,n=[],o=g(d(y(t),a,"."),".");for(r=0;r<o.length;r++)e=o[r],v(n,c(i,e)?"xn--"+x(e):e);return h(n,".")}},93124:(t,r,e)=>{"use strict";var n=e(43329),o=e(83326),i=e(58885),a=RangeError;t.exports=function(t){var r=o(i(this)),e="",u=n(t);if(u<0||u==1/0)throw a("Wrong number of repetitions");for(;u>0;(u>>>=1)&&(r+=r))1&u&&(e+=r);return e}},61466:(t,r,e)=>{"use strict";var n=e(1017).end,o=e(9445);t.exports=o("trimEnd")?function(){return n(this)}:"".trimEnd},9445:(t,r,e)=>{var n=e(51805).PROPER,o=e(24229),i=e(41647);t.exports=function(t){return o((function(){return!!i[t]()||"\u200b\x85\u180e"!=="\u200b\x85\u180e"[t]()||n&&i[t].name!==t}))}},58747:(t,r,e)=>{"use strict";var n=e(1017).start,o=e(9445);t.exports=o("trimStart")?function(){return n(this)}:"".trimStart},1017:(t,r,e)=>{var n=e(65968),o=e(58885),i=e(83326),a=e(41647),u=n("".replace),s="["+a+"]",c=RegExp("^"+s+s+"*"),f=RegExp(s+s+"*$"),l=function(t){return function(r){var e=i(o(r));return 1&t&&(e=u(e,c,"")),2&t&&(e=u(e,f,"")),e}};t.exports={start:l(1),end:l(2),trim:l(3)}},44860:(t,r,e)=>{var n=e(6358),o=e(24229);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},55795:(t,r,e)=>{var n,o,i,a,u=e(9859),s=e(53171),c=e(97636),f=e(26733),l=e(98270),p=e(24229),h=e(53777),v=e(1909),d=e(22635),g=e(77579),y=e(32023),m=e(28801),b=u.setImmediate,x=u.clearImmediate,w=u.process,S=u.Dispatch,A=u.Function,R=u.MessageChannel,E=u.String,O=0,I={},P="onreadystatechange";try{n=u.location}catch(k){}var T=function(t){if(l(I,t)){var r=I[t];delete I[t],r()}},L=function(t){return function(){T(t)}},j=function(t){T(t.data)},U=function(t){u.postMessage(E(t),n.protocol+"//"+n.host)};b&&x||(b=function(t){g(arguments.length,1);var r=f(t)?t:A(t),e=v(arguments,1);return I[++O]=function(){s(r,void 0,e)},o(O),O},x=function(t){delete I[t]},m?o=function(t){w.nextTick(L(t))}:S&&S.now?o=function(t){S.now(L(t))}:R&&!y?(a=(i=new R).port2,i.port1.onmessage=j,o=c(a.postMessage,a)):u.addEventListener&&f(u.postMessage)&&!u.importScripts&&n&&"file:"!==n.protocol&&!p(U)?(o=U,u.addEventListener("message",j,!1)):o=P in d("script")?function(t){h.appendChild(d("script")).onreadystatechange=function(){h.removeChild(this),T(t)}}:function(t){setTimeout(L(t),0)}),t.exports={set:b,clear:x}},90143:(t,r,e)=>{var n=e(65968);t.exports=n(1..valueOf)},43231:(t,r,e)=>{var n=e(43329),o=Math.max,i=Math.min;t.exports=function(t,r){var e=n(t);return e<0?o(e+r,0):i(e,r)}},19123:(t,r,e)=>{var n=e(92066),o=TypeError;t.exports=function(t){var r=n(t,"number");if("number"==typeof r)throw o("Can't convert number to bigint");return BigInt(r)}},7331:(t,r,e)=>{var n=e(43329),o=e(34237),i=RangeError;t.exports=function(t){if(void 0===t)return 0;var r=n(t),e=o(r);if(r!==e)throw i("Wrong length or index");return e}},10905:(t,r,e)=>{var n=e(9337),o=e(58885);t.exports=function(t){return n(o(t))}},43329:(t,r,e)=>{var n=e(50917);t.exports=function(t){var r=+t;return r!=r||0===r?0:n(r)}},34237:(t,r,e)=>{var n=e(43329),o=Math.min;t.exports=function(t){return t>0?o(n(t),9007199254740991):0}},92991:(t,r,e)=>{var n=e(58885),o=Object;t.exports=function(t){return o(n(t))}},84262:(t,r,e)=>{var n=e(72002),o=RangeError;t.exports=function(t,r){var e=n(t);if(e%r)throw o("Wrong offset");return e}},72002:(t,r,e)=>{var n=e(43329),o=RangeError;t.exports=function(t){var r=n(t);if(r<0)throw o("The argument can't be less than 0");return r}},92066:(t,r,e)=>{var n=e(20266),o=e(85052),i=e(49395),a=e(55300),u=e(32914),s=e(70095),c=TypeError,f=s("toPrimitive");t.exports=function(t,r){if(!o(t)||i(t))return t;var e,s=a(t,f);if(s){if(void 0===r&&(r="default"),e=n(s,t,r),!o(e)||i(e))return e;throw c("Can't convert object to primitive value")}return void 0===r&&(r="number"),u(t,r)}},39310:(t,r,e)=>{var n=e(92066),o=e(49395);t.exports=function(t){var r=n(t,"string");return o(r)?r:r+""}},71601:(t,r,e)=>{var n={};n[e(70095)("toStringTag")]="z",t.exports="[object z]"===String(n)},83326:(t,r,e)=>{var n=e(81589),o=String;t.exports=function(t){if("Symbol"===n(t))throw TypeError("Cannot convert a Symbol value to a string");return o(t)}},59821:t=>{var r=String;t.exports=function(t){try{return r(t)}catch(e){return"Object"}}},42574:(t,r,e)=>{"use strict";var n=e(23103),o=e(9859),i=e(20266),a=e(7400),u=e(48200),s=e(9918),c=e(53816),f=e(57728),l=e(65358),p=e(75762),h=e(82292),v=e(34237),d=e(7331),g=e(84262),y=e(39310),m=e(98270),b=e(81589),x=e(85052),w=e(49395),S=e(22391),A=e(91321),R=e(56540),E=e(78151).f,O=e(35215),I=e(89996).forEach,P=e(71832),T=e(31787),L=e(97933),j=e(56407),U=e(20835),k=j.get,C=j.set,_=j.enforce,M=T.f,B=L.f,F=Math.round,N=o.RangeError,D=c.ArrayBuffer,H=D.prototype,q=c.DataView,G=s.NATIVE_ARRAY_BUFFER_VIEWS,V=s.TYPED_ARRAY_TAG,W=s.TypedArray,$=s.TypedArrayPrototype,Y=s.aTypedArrayConstructor,z=s.isTypedArray,K="BYTES_PER_ELEMENT",J="Wrong length",Q=function(t,r){Y(t);for(var e=0,n=r.length,o=new t(n);n>e;)o[e]=r[e++];return o},X=function(t,r){M(t,r,{get:function(){return k(this)[r]}})},Z=function(t){var r;return A(H,t)||"ArrayBuffer"==(r=b(t))||"SharedArrayBuffer"==r},tt=function(t,r){return z(t)&&!w(r)&&r in t&&h(+r)&&r>=0},rt=function(t,r){return r=y(r),tt(t,r)?l(2,t[r]):B(t,r)},et=function(t,r,e){return r=y(r),!(tt(t,r)&&x(e)&&m(e,"value"))||m(e,"get")||m(e,"set")||e.configurable||m(e,"writable")&&!e.writable||m(e,"enumerable")&&!e.enumerable?M(t,r,e):(t[r]=e.value,t)};a?(G||(L.f=rt,T.f=et,X($,"buffer"),X($,"byteOffset"),X($,"byteLength"),X($,"length")),n({target:"Object",stat:!0,forced:!G},{getOwnPropertyDescriptor:rt,defineProperty:et}),t.exports=function(t,r,e){var a=t.match(/\d+$/)[0]/8,s=t+(e?"Clamped":"")+"Array",c="get"+t,l="set"+t,h=o[s],y=h,m=y&&y.prototype,b={},w=function(t,r){M(t,r,{get:function(){return function(t,r){var e=k(t);return e.view[c](r*a+e.byteOffset,!0)}(this,r)},set:function(t){return function(t,r,n){var o=k(t);e&&(n=(n=F(n))<0?0:n>255?255:255&n),o.view[l](r*a+o.byteOffset,n,!0)}(this,r,t)},enumerable:!0})};G?u&&(y=r((function(t,r,e,n){return f(t,m),U(x(r)?Z(r)?void 0!==n?new h(r,g(e,a),n):void 0!==e?new h(r,g(e,a)):new h(r):z(r)?Q(y,r):i(O,y,r):new h(d(r)),t,y)})),R&&R(y,W),I(E(h),(function(t){t in y||p(y,t,h[t])})),y.prototype=m):(y=r((function(t,r,e,n){f(t,m);var o,u,s,c=0,l=0;if(x(r)){if(!Z(r))return z(r)?Q(y,r):i(O,y,r);o=r,l=g(e,a);var p=r.byteLength;if(void 0===n){if(p%a)throw N(J);if((u=p-l)<0)throw N(J)}else if((u=v(n)*a)+l>p)throw N(J);s=u/a}else s=d(r),o=new D(u=s*a);for(C(t,{buffer:o,byteOffset:l,byteLength:u,length:s,view:new q(o)});c<s;)w(t,c++)})),R&&R(y,W),m=y.prototype=S($)),m.constructor!==y&&p(m,"constructor",y),_(m).TypedArrayConstructor=y,V&&p(m,V,s);var A=y!=h;b[s]=y,n({global:!0,constructor:!0,forced:A,sham:!G},b),K in y||p(y,K,a),K in m||p(m,K,a),P(s)}):t.exports=function(){}},48200:(t,r,e)=>{var n=e(9859),o=e(24229),i=e(74575),a=e(9918).NATIVE_ARRAY_BUFFER_VIEWS,u=n.ArrayBuffer,s=n.Int8Array;t.exports=!a||!o((function(){s(1)}))||!o((function(){new s(-1)}))||!i((function(t){new s,new s(null),new s(1.5),new s(t)}),!0)||o((function(){return 1!==new s(new u(2),1,void 0).length}))},35215:(t,r,e)=>{var n=e(97636),o=e(20266),i=e(57988),a=e(92991),u=e(39646),s=e(28403),c=e(78830),f=e(91943),l=e(79098),p=e(9918).aTypedArrayConstructor,h=e(19123);t.exports=function(t){var r,e,v,d,g,y,m,b,x=i(this),w=a(t),S=arguments.length,A=S>1?arguments[1]:void 0,R=void 0!==A,E=c(w);if(E&&!f(E))for(b=(m=s(w,E)).next,w=[];!(y=o(b,m)).done;)w.push(y.value);for(R&&S>2&&(A=n(A,arguments[2])),e=u(w),v=new(p(x))(e),d=l(v),r=0;e>r;r++)g=R?A(w[r],r):w[r],v[r]=d?h(g):+g;return v}},81441:(t,r,e)=>{var n=e(65968),o=0,i=Math.random(),a=n(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++o+i,36)}},34144:(t,r,e)=>{var n=e(24229),o=e(70095),i=e(24231),a=o("iterator");t.exports=!n((function(){var t=new URL("b?a=1&b=2&c=3","http://a"),r=t.searchParams,e="";return t.pathname="c%20d",r.forEach((function(t,n){r.delete("b"),e+=n+t})),i&&!t.toJSON||!r.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==r.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!r[a]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://\u0442\u0435\u0441\u0442").host||"#%D0%B1"!==new URL("http://a#\u0431").hash||"a1c3"!==e||"x"!==new URL("http://x",void 0).host}))},66969:(t,r,e)=>{var n=e(44860);t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},17137:(t,r,e)=>{var n=e(7400),o=e(24229);t.exports=n&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},77579:t=>{var r=TypeError;t.exports=function(t,e){if(t<e)throw r("Not enough arguments");return t}},51180:(t,r,e)=>{var n=e(9859),o=e(26733),i=n.WeakMap;t.exports=o(i)&&/native code/.test(String(i))},63524:(t,r,e)=>{var n=e(49276),o=e(98270),i=e(55391),a=e(31787).f;t.exports=function(t){var r=n.Symbol||(n.Symbol={});o(r,t)||a(r,t,{value:i.f(t)})}},55391:(t,r,e)=>{var n=e(70095);r.f=n},70095:(t,r,e)=>{var n=e(9859),o=e(33036),i=e(98270),a=e(81441),u=e(44860),s=e(66969),c=o("wks"),f=n.Symbol,l=f&&f.for,p=s?f:f&&f.withoutSetter||a;t.exports=function(t){if(!i(c,t)||!u&&"string"!=typeof c[t]){var r="Symbol."+t;u&&i(f,t)?c[t]=f[t]:c[t]=s&&l?l(r):p(r)}return c[t]}},41647:t=>{t.exports="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff"},65388:(t,r,e)=>{"use strict";var n=e(23103),o=e(9859),i=e(53816),a=e(71832),u="ArrayBuffer",s=i.ArrayBuffer;n({global:!0,constructor:!0,forced:o.ArrayBuffer!==s},{ArrayBuffer:s}),a(u)},72994:(t,r,e)=>{"use strict";var n=e(23103),o=e(65968),i=e(24229),a=e(53816),u=e(21176),s=e(43231),c=e(34237),f=e(37942),l=a.ArrayBuffer,p=a.DataView,h=p.prototype,v=o(l.prototype.slice),d=o(h.getUint8),g=o(h.setUint8);n({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:i((function(){return!new l(2).slice(1,void 0).byteLength}))},{slice:function(t,r){if(v&&void 0===r)return v(u(this),t);for(var e=u(this).byteLength,n=s(t,e),o=s(void 0===r?e:r,e),i=new(f(this,l))(c(o-n)),a=new p(this),h=new p(i),y=0;n<o;)g(h,y++,d(a,n++));return i}})},84870:(t,r,e)=>{"use strict";var n=e(23103),o=e(34990),i=e(77111),a=e(92991),u=e(39646),s=e(87501);n({target:"Array",proto:!0},{flatMap:function(t){var r,e=a(this),n=u(e);return i(t),(r=s(e,0)).length=o(r,e,e,n,0,1,t,arguments.length>1?arguments[1]:void 0),r}})},27072:(t,r,e)=>{"use strict";var n=e(23103),o=e(34990),i=e(92991),a=e(39646),u=e(43329),s=e(87501);n({target:"Array",proto:!0},{flat:function(){var t=arguments.length?arguments[0]:void 0,r=i(this),e=a(r),n=s(r,0);return n.length=o(n,r,r,e,0,void 0===t?1:u(t)),n}})},39529:(t,r,e)=>{"use strict";var n=e(23103),o=e(19540).includes,i=e(24229),a=e(9736);n({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),a("includes")},15735:(t,r,e)=>{"use strict";var n=e(10905),o=e(9736),i=e(45495),a=e(56407),u=e(31787).f,s=e(12707),c=e(33684),f=e(24231),l=e(7400),p="Array Iterator",h=a.set,v=a.getterFor(p);t.exports=s(Array,"Array",(function(t,r){h(this,{type:p,target:n(t),index:0,kind:r})}),(function(){var t=v(this),r=t.target,e=t.kind,n=t.index++;return!r||n>=r.length?(t.target=void 0,c(void 0,!0)):c("keys"==e?n:"values"==e?r[n]:[n,r[n]],!1)}),"values");var d=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!f&&l&&"values"!==d.name)try{u(d,"name",{value:"values"})}catch(g){}},9731:(t,r,e)=>{"use strict";var n=e(23103),o=e(43143).right,i=e(96038),a=e(6358),u=e(28801);n({target:"Array",proto:!0,forced:!i("reduceRight")||!u&&a>79&&a<83},{reduceRight:function(t){return o(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},43108:(t,r,e)=>{"use strict";var n=e(23103),o=e(43143).left,i=e(96038),a=e(6358),u=e(28801);n({target:"Array",proto:!0,forced:!i("reduce")||!u&&a>79&&a<83},{reduce:function(t){var r=arguments.length;return o(this,t,r,r>1?arguments[1]:void 0)}})},49992:(t,r,e)=>{"use strict";var n=e(23103),o=e(65968),i=e(33718),a=o([].reverse),u=[1,2];n({target:"Array",proto:!0,forced:String(u)===String(u.reverse())},{reverse:function(){return i(this)&&(this.length=this.length),a(this)}})},43430:(t,r,e)=>{"use strict";var n=e(23103),o=e(65968),i=e(77111),a=e(92991),u=e(39646),s=e(79563),c=e(83326),f=e(24229),l=e(33867),p=e(96038),h=e(22671),v=e(48506),d=e(6358),g=e(49811),y=[],m=o(y.sort),b=o(y.push),x=f((function(){y.sort(void 0)})),w=f((function(){y.sort(null)})),S=p("sort"),A=!f((function(){if(d)return d<70;if(!(h&&h>3)){if(v)return!0;if(g)return g<603;var t,r,e,n,o="";for(t=65;t<76;t++){switch(r=String.fromCharCode(t),t){case 66:case 69:case 70:case 72:e=3;break;case 68:case 71:e=4;break;default:e=2}for(n=0;n<47;n++)y.push({k:r+n,v:e})}for(y.sort((function(t,r){return r.v-t.v})),n=0;n<y.length;n++)r=y[n].k.charAt(0),o.charAt(o.length-1)!==r&&(o+=r);return"DGBEFHACIJK"!==o}}));n({target:"Array",proto:!0,forced:x||!w||!S||!A},{sort:function(t){void 0!==t&&i(t);var r=a(this);if(A)return void 0===t?m(r):m(r,t);var e,n,o=[],f=u(r);for(n=0;n<f;n++)n in r&&b(o,r[n]);for(l(o,function(t){return function(r,e){return void 0===e?-1:void 0===r?1:void 0!==t?+t(r,e)||0:c(r)>c(e)?1:-1}}(t)),e=u(o),n=0;n<e;)r[n]=o[n++];for(;n<f;)s(r,n++);return r}})},53985:(t,r,e)=>{e(9736)("flatMap")},67694:(t,r,e)=>{e(9736)("flat")},39509:(t,r,e)=>{var n=e(23103),o=Math.hypot,i=Math.abs,a=Math.sqrt;n({target:"Math",stat:!0,arity:2,forced:!!o&&o(1/0,NaN)!==1/0},{hypot:function(t,r){for(var e,n,o=0,u=0,s=arguments.length,c=0;u<s;)c<(e=i(arguments[u++]))?(o=o*(n=c/e)*n+1,c=e):o+=e>0?(n=e/c)*n:e;return c===1/0?1/0:c*a(o)}})},48836:(t,r,e)=>{var n=e(23103),o=e(45496);n({target:"Number",stat:!0,forced:Number.parseFloat!=o},{parseFloat:o})},77208:(t,r,e)=>{var n=e(23103),o=e(36596);n({target:"Number",stat:!0,forced:Number.parseInt!=o},{parseInt:o})},61657:(t,r,e)=>{"use strict";var n=e(23103),o=e(65968),i=e(43329),a=e(90143),u=e(93124),s=e(24229),c=RangeError,f=String,l=Math.floor,p=o(u),h=o("".slice),v=o(1..toFixed),d=function(t,r,e){return 0===r?e:r%2==1?d(t,r-1,e*t):d(t*t,r/2,e)},g=function(t,r,e){for(var n=-1,o=e;++n<6;)o+=r*t[n],t[n]=o%1e7,o=l(o/1e7)},y=function(t,r){for(var e=6,n=0;--e>=0;)n+=t[e],t[e]=l(n/r),n=n%r*1e7},m=function(t){for(var r=6,e="";--r>=0;)if(""!==e||0===r||0!==t[r]){var n=f(t[r]);e=""===e?n:e+p("0",7-n.length)+n}return e};n({target:"Number",proto:!0,forced:s((function(){return"0.000"!==v(8e-5,3)||"1"!==v(.9,0)||"1.25"!==v(1.255,2)||"1000000000000000128"!==v(0xde0b6b3a7640080,0)}))||!s((function(){v({})}))},{toFixed:function(t){var r,e,n,o,u=a(this),s=i(t),l=[0,0,0,0,0,0],v="",b="0";if(s<0||s>20)throw c("Incorrect fraction digits");if(u!=u)return"NaN";if(u<=-1e21||u>=1e21)return f(u);if(u<0&&(v="-",u=-u),u>1e-21)if(e=(r=function(t){for(var r=0,e=t;e>=4096;)r+=12,e/=4096;for(;e>=2;)r+=1,e/=2;return r}(u*d(2,69,1))-69)<0?u*d(2,-r,1):u/d(2,r,1),e*=4503599627370496,(r=52-r)>0){for(g(l,0,e),n=s;n>=7;)g(l,1e7,0),n-=7;for(g(l,d(10,n,1),0),n=r-1;n>=23;)y(l,1<<23),n-=23;y(l,1<<n),g(l,1,1),y(l,2),b=m(l)}else g(l,0,e),g(l,1<<-r,0),b=m(l)+p("0",s);return b=s>0?v+((o=b.length)<=s?"0."+p("0",s-o)+b:h(b,0,o-s)+"."+h(b,o-s)):v+b}})},43105:(t,r,e)=>{var n=e(23103),o=e(47);n({target:"Object",stat:!0,arity:2,forced:Object.assign!==o},{assign:o})},37846:(t,r,e)=>{"use strict";var n=e(23103),o=e(7400),i=e(15020),a=e(77111),u=e(92991),s=e(31787);o&&n({target:"Object",proto:!0,forced:i},{__defineGetter__:function(t,r){s.f(u(this),t,{get:a(r),enumerable:!0,configurable:!0})}})},16635:(t,r,e)=>{"use strict";var n=e(23103),o=e(7400),i=e(15020),a=e(77111),u=e(92991),s=e(31787);o&&n({target:"Object",proto:!0,forced:i},{__defineSetter__:function(t,r){s.f(u(this),t,{set:a(r),enumerable:!0,configurable:!0})}})},81804:(t,r,e)=>{var n=e(23103),o=e(89003),i=e(62324);n({target:"Object",stat:!0},{fromEntries:function(t){var r={};return o(t,(function(t,e){i(r,t,e)}),{AS_ENTRIES:!0}),r}})},42586:(t,r,e)=>{"use strict";var n=e(23103),o=e(7400),i=e(15020),a=e(92991),u=e(39310),s=e(67567),c=e(97933).f;o&&n({target:"Object",proto:!0,forced:i},{__lookupGetter__:function(t){var r,e=a(this),n=u(t);do{if(r=c(e,n))return r.get}while(e=s(e))}})},43045:(t,r,e)=>{"use strict";var n=e(23103),o=e(7400),i=e(15020),a=e(92991),u=e(39310),s=e(67567),c=e(97933).f;o&&n({target:"Object",proto:!0,forced:i},{__lookupSetter__:function(t){var r,e=a(this),n=u(t);do{if(r=c(e,n))return r.set}while(e=s(e))}})},13489:(t,r,e)=>{var n=e(23103),o=e(45496);n({global:!0,forced:parseFloat!=o},{parseFloat:o})},68995:(t,r,e)=>{var n=e(23103),o=e(36596);n({global:!0,forced:parseInt!=o},{parseInt:o})},56032:(t,r,e)=>{"use strict";var n=e(23103),o=e(20266),i=e(77111),a=e(16485),u=e(64624),s=e(89003);n({target:"Promise",stat:!0,forced:e(96866)},{all:function(t){var r=this,e=a.f(r),n=e.resolve,c=e.reject,f=u((function(){var e=i(r.resolve),a=[],u=0,f=1;s(t,(function(t){var i=u++,s=!1;f++,o(e,r,t).then((function(t){s||(s=!0,a[i]=t,--f||n(a))}),c)})),--f||n(a)}));return f.error&&c(f.value),e.promise}})},6135:(t,r,e)=>{"use strict";var n=e(23103),o=e(24231),i=e(38321).CONSTRUCTOR,a=e(74473),u=e(31333),s=e(26733),c=e(14768),f=a&&a.prototype;if(n({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(t){return this.then(void 0,t)}}),!o&&s(a)){var l=u("Promise").prototype.catch;f.catch!==l&&c(f,"catch",l,{unsafe:!0})}},86087:(t,r,e)=>{"use strict";var n,o,i,a=e(23103),u=e(24231),s=e(28801),c=e(9859),f=e(20266),l=e(14768),p=e(56540),h=e(54555),v=e(71832),d=e(77111),g=e(26733),y=e(85052),m=e(57728),b=e(37942),x=e(55795).set,w=e(24794),S=e(14665),A=e(64624),R=e(93358),E=e(56407),O=e(74473),I=e(38321),P=e(16485),T="Promise",L=I.CONSTRUCTOR,j=I.REJECTION_EVENT,U=I.SUBCLASSING,k=E.getterFor(T),C=E.set,_=O&&O.prototype,M=O,B=_,F=c.TypeError,N=c.document,D=c.process,H=P.f,q=H,G=!!(N&&N.createEvent&&c.dispatchEvent),V="unhandledrejection",W=function(t){var r;return!(!y(t)||!g(r=t.then))&&r},$=function(t,r){var e,n,o,i=r.value,a=1==r.state,u=a?t.ok:t.fail,s=t.resolve,c=t.reject,l=t.domain;try{u?(a||(2===r.rejection&&Q(r),r.rejection=1),!0===u?e=i:(l&&l.enter(),e=u(i),l&&(l.exit(),o=!0)),e===t.promise?c(F("Promise-chain cycle")):(n=W(e))?f(n,e,s,c):s(e)):c(i)}catch(p){l&&!o&&l.exit(),c(p)}},Y=function(t,r){t.notified||(t.notified=!0,w((function(){for(var e,n=t.reactions;e=n.get();)$(e,t);t.notified=!1,r&&!t.rejection&&K(t)})))},z=function(t,r,e){var n,o;G?((n=N.createEvent("Event")).promise=r,n.reason=e,n.initEvent(t,!1,!0),c.dispatchEvent(n)):n={promise:r,reason:e},!j&&(o=c["on"+t])?o(n):t===V&&S("Unhandled promise rejection",e)},K=function(t){f(x,c,(function(){var r,e=t.facade,n=t.value;if(J(t)&&(r=A((function(){s?D.emit("unhandledRejection",n,e):z(V,e,n)})),t.rejection=s||J(t)?2:1,r.error))throw r.value}))},J=function(t){return 1!==t.rejection&&!t.parent},Q=function(t){f(x,c,(function(){var r=t.facade;s?D.emit("rejectionHandled",r):z("rejectionhandled",r,t.value)}))},X=function(t,r,e){return function(n){t(r,n,e)}},Z=function(t,r,e){t.done||(t.done=!0,e&&(t=e),t.value=r,t.state=2,Y(t,!0))},tt=function(t,r,e){if(!t.done){t.done=!0,e&&(t=e);try{if(t.facade===r)throw F("Promise can't be resolved itself");var n=W(r);n?w((function(){var e={done:!1};try{f(n,r,X(tt,e,t),X(Z,e,t))}catch(o){Z(e,o,t)}})):(t.value=r,t.state=1,Y(t,!1))}catch(o){Z({done:!1},o,t)}}};if(L&&(B=(M=function(t){m(this,B),d(t),f(n,this);var r=k(this);try{t(X(tt,r),X(Z,r))}catch(e){Z(r,e)}}).prototype,(n=function(t){C(this,{type:T,done:!1,notified:!1,parent:!1,reactions:new R,rejection:!1,state:0,value:void 0})}).prototype=l(B,"then",(function(t,r){var e=k(this),n=H(b(this,M));return e.parent=!0,n.ok=!g(t)||t,n.fail=g(r)&&r,n.domain=s?D.domain:void 0,0==e.state?e.reactions.add(n):w((function(){$(n,e)})),n.promise})),o=function(){var t=new n,r=k(t);this.promise=t,this.resolve=X(tt,r),this.reject=X(Z,r)},P.f=H=function(t){return t===M||undefined===t?new o(t):q(t)},!u&&g(O)&&_!==Object.prototype)){i=_.then,U||l(_,"then",(function(t,r){var e=this;return new M((function(t,r){f(i,e,t,r)})).then(t,r)}),{unsafe:!0});try{delete _.constructor}catch(rt){}p&&p(_,B)}a({global:!0,constructor:!0,wrap:!0,forced:L},{Promise:M}),h(M,T,!1,!0),v(T)},21515:(t,r,e)=>{"use strict";var n=e(23103),o=e(24231),i=e(74473),a=e(24229),u=e(31333),s=e(26733),c=e(37942),f=e(62391),l=e(14768),p=i&&i.prototype;if(n({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){p.finally.call({then:function(){}},(function(){}))}))},{finally:function(t){var r=c(this,u("Promise")),e=s(t);return this.then(e?function(e){return f(r,t()).then((function(){return e}))}:t,e?function(e){return f(r,t()).then((function(){throw e}))}:t)}}),!o&&s(i)){var h=u("Promise").prototype.finally;p.finally!==h&&l(p,"finally",h,{unsafe:!0})}},73439:(t,r,e)=>{e(86087),e(56032),e(6135),e(26767),e(39320),e(52047)},26767:(t,r,e)=>{"use strict";var n=e(23103),o=e(20266),i=e(77111),a=e(16485),u=e(64624),s=e(89003);n({target:"Promise",stat:!0,forced:e(96866)},{race:function(t){var r=this,e=a.f(r),n=e.reject,c=u((function(){var a=i(r.resolve);s(t,(function(t){o(a,r,t).then(e.resolve,n)}))}));return c.error&&n(c.value),e.promise}})},39320:(t,r,e)=>{"use strict";var n=e(23103),o=e(20266),i=e(16485);n({target:"Promise",stat:!0,forced:e(38321).CONSTRUCTOR},{reject:function(t){var r=i.f(this);return o(r.reject,void 0,t),r.promise}})},52047:(t,r,e)=>{"use strict";var n=e(23103),o=e(31333),i=e(24231),a=e(74473),u=e(38321).CONSTRUCTOR,s=e(62391),c=o("Promise"),f=i&&!u;n({target:"Promise",stat:!0,forced:i||u},{resolve:function(t){return s(f&&this===c?a:this,t)}})},98738:(t,r,e)=>{var n=e(23103),o=e(20266),i=e(21176),a=e(85052),u=e(90193),s=e(24229),c=e(31787),f=e(97933),l=e(67567),p=e(65358);n({target:"Reflect",stat:!0,forced:s((function(){var t=function(){},r=c.f(new t,"a",{configurable:!0});return!1!==Reflect.set(t.prototype,"a",1,r)}))},{set:function t(r,e,n){var s,h,v,d=arguments.length<4?r:arguments[3],g=f.f(i(r),e);if(!g){if(a(h=l(r)))return t(h,e,n,d);g=p(0)}if(u(g)){if(!1===g.writable||!a(d))return!1;if(s=f.f(d,e)){if(s.get||s.set||!1===s.writable)return!1;s.value=n,c.f(d,e,s)}else c.f(d,e,p(0,n))}else{if(void 0===(v=g.set))return!1;o(v,d,n)}return!0}})},17368:(t,r,e)=>{var n=e(7400),o=e(9859),i=e(65968),a=e(46541),u=e(20835),s=e(75762),c=e(78151).f,f=e(91321),l=e(48311),p=e(83326),h=e(83349),v=e(25650),d=e(26060),g=e(14768),y=e(24229),m=e(98270),b=e(56407).enforce,x=e(71832),w=e(70095),S=e(42926),A=e(10461),R=w("match"),E=o.RegExp,O=E.prototype,I=o.SyntaxError,P=i(O.exec),T=i("".charAt),L=i("".replace),j=i("".indexOf),U=i("".slice),k=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,C=/a/g,_=/a/g,M=new E(C)!==C,B=v.MISSED_STICKY,F=v.UNSUPPORTED_Y,N=n&&(!M||B||S||A||y((function(){return _[R]=!1,E(C)!=C||E(_)==_||"/a/i"!=E(C,"i")})));if(a("RegExp",N)){for(var D=function(t,r){var e,n,o,i,a,c,v=f(O,this),d=l(t),g=void 0===r,y=[],x=t;if(!v&&d&&g&&t.constructor===D)return t;if((d||f(O,t))&&(t=t.source,g&&(r=h(x))),t=void 0===t?"":p(t),r=void 0===r?"":p(r),x=t,S&&"dotAll"in C&&(n=!!r&&j(r,"s")>-1)&&(r=L(r,/s/g,"")),e=r,B&&"sticky"in C&&(o=!!r&&j(r,"y")>-1)&&F&&(r=L(r,/y/g,"")),A&&(i=function(t){for(var r,e=t.length,n=0,o="",i=[],a={},u=!1,s=!1,c=0,f="";n<=e;n++){if("\\"===(r=T(t,n)))r+=T(t,++n);else if("]"===r)u=!1;else if(!u)switch(!0){case"["===r:u=!0;break;case"("===r:P(k,U(t,n+1))&&(n+=2,s=!0),o+=r,c++;continue;case">"===r&&s:if(""===f||m(a,f))throw new I("Invalid capture group name");a[f]=!0,i[i.length]=[f,c],s=!1,f="";continue}s?f+=r:o+=r}return[o,i]}(t),t=i[0],y=i[1]),a=u(E(t,r),v?this:O,D),(n||o||y.length)&&(c=b(a),n&&(c.dotAll=!0,c.raw=D(function(t){for(var r,e=t.length,n=0,o="",i=!1;n<=e;n++)"\\"!==(r=T(t,n))?i||"."!==r?("["===r?i=!0:"]"===r&&(i=!1),o+=r):o+="[\\s\\S]":o+=r+T(t,++n);return o}(t),e)),o&&(c.sticky=!0),y.length&&(c.groups=y)),t!==x)try{s(a,"source",""===x?"(?:)":x)}catch(w){}return a},H=c(E),q=0;H.length>q;)d(D,E,H[q++]);O.constructor=D,D.prototype=O,g(o,"RegExp",D,{constructor:!0})}x("RegExp")},77950:(t,r,e)=>{"use strict";var n=e(23103),o=e(63466);n({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},90103:(t,r,e)=>{var n=e(9859),o=e(7400),i=e(96616),a=e(30895),u=e(24229),s=n.RegExp,c=s.prototype;o&&u((function(){var t=!0;try{s(".","d")}catch(u){t=!1}var r={},e="",n=t?"dgimsy":"gimsy",o=function(t,n){Object.defineProperty(r,t,{get:function(){return e+=n,!0}})},i={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var a in t&&(i.hasIndices="d"),i)o(a,i[a]);return Object.getOwnPropertyDescriptor(c,"flags").get.call(r)!==n||e!==n}))&&i(c,"flags",{configurable:!0,get:a})},88233:(t,r,e)=>{"use strict";var n=e(51805).PROPER,o=e(14768),i=e(21176),a=e(83326),u=e(24229),s=e(83349),c="toString",f=RegExp.prototype.toString,l=u((function(){return"/a/b"!=f.call({source:"a",flags:"b"})})),p=n&&f.name!=c;(l||p)&&o(RegExp.prototype,c,(function(){var t=i(this);return"/"+a(t.source)+"/"+a(s(t))}),{unsafe:!0})},96708:(t,r,e)=>{"use strict";var n,o=e(23103),i=e(65968),a=e(97933).f,u=e(34237),s=e(83326),c=e(47272),f=e(58885),l=e(48127),p=e(24231),h=i("".endsWith),v=i("".slice),d=Math.min,g=l("endsWith");o({target:"String",proto:!0,forced:!!(p||g||(n=a(String.prototype,"endsWith"),!n||n.writable))&&!g},{endsWith:function(t){var r=s(f(this));c(t);var e=arguments.length>1?arguments[1]:void 0,n=r.length,o=void 0===e?n:d(u(e),n),i=s(t);return h?h(r,i,o):v(r,o-i.length,o)===i}})},31235:(t,r,e)=>{"use strict";var n=e(23103),o=e(65968),i=e(47272),a=e(58885),u=e(83326),s=e(48127),c=o("".indexOf);n({target:"String",proto:!0,forced:!s("includes")},{includes:function(t){return!!~c(u(a(this)),u(i(t)),arguments.length>1?arguments[1]:void 0)}})},28673:(t,r,e)=>{"use strict";var n=e(30966).charAt,o=e(83326),i=e(56407),a=e(12707),u=e(33684),s="String Iterator",c=i.set,f=i.getterFor(s);a(String,"String",(function(t){c(this,{type:s,string:o(t),index:0})}),(function(){var t,r=f(this),e=r.string,o=r.index;return o>=e.length?u(void 0,!0):(t=n(e,o),r.index+=t.length,u(t,!1))}))},74069:(t,r,e)=>{"use strict";var n=e(20266),o=e(94954),i=e(21176),a=e(9650),u=e(34237),s=e(83326),c=e(58885),f=e(55300),l=e(36637),p=e(98115);o("match",(function(t,r,e){return[function(r){var e=c(this),o=a(r)?void 0:f(r,t);return o?n(o,r,e):new RegExp(r)[t](s(e))},function(t){var n=i(this),o=s(t),a=e(r,n,o);if(a.done)return a.value;if(!n.global)return p(n,o);var c=n.unicode;n.lastIndex=0;for(var f,h=[],v=0;null!==(f=p(n,o));){var d=s(f[0]);h[v]=d,""===d&&(n.lastIndex=l(o,u(n.lastIndex),c)),v++}return 0===v?null:h}]}))},90977:(t,r,e)=>{"use strict";var n=e(23103),o=e(46650).end;n({target:"String",proto:!0,forced:e(57456)},{padEnd:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},35734:(t,r,e)=>{"use strict";var n=e(23103),o=e(46650).start;n({target:"String",proto:!0,forced:e(57456)},{padStart:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},85940:(t,r,e)=>{"use strict";var n=e(53171),o=e(20266),i=e(65968),a=e(94954),u=e(24229),s=e(21176),c=e(26733),f=e(9650),l=e(43329),p=e(34237),h=e(83326),v=e(58885),d=e(36637),g=e(55300),y=e(70017),m=e(98115),b=e(70095)("replace"),x=Math.max,w=Math.min,S=i([].concat),A=i([].push),R=i("".indexOf),E=i("".slice),O="$0"==="a".replace(/./,"$0"),I=!!/./[b]&&""===/./[b]("a","$0");a("replace",(function(t,r,e){var i=I?"$":"$0";return[function(t,e){var n=v(this),i=f(t)?void 0:g(t,b);return i?o(i,t,n,e):o(r,h(n),t,e)},function(t,o){var a=s(this),u=h(t);if("string"==typeof o&&-1===R(o,i)&&-1===R(o,"$<")){var f=e(r,a,u,o);if(f.done)return f.value}var v=c(o);v||(o=h(o));var g=a.global;if(g){var b=a.unicode;a.lastIndex=0}for(var O=[];;){var I=m(a,u);if(null===I)break;if(A(O,I),!g)break;""===h(I[0])&&(a.lastIndex=d(u,p(a.lastIndex),b))}for(var P,T="",L=0,j=0;j<O.length;j++){for(var U=h((I=O[j])[0]),k=x(w(l(I.index),u.length),0),C=[],_=1;_<I.length;_++)A(C,void 0===(P=I[_])?P:String(P));var M=I.groups;if(v){var B=S([U],C,k,u);void 0!==M&&A(B,M);var F=h(n(o,void 0,B))}else F=y(U,u,k,C,M,o);k>=L&&(T+=E(u,L,k)+F,L=k+U.length)}return T+E(u,L)}]}),!!u((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}))||!O||I)},94908:(t,r,e)=>{"use strict";var n=e(20266),o=e(94954),i=e(21176),a=e(9650),u=e(58885),s=e(72101),c=e(83326),f=e(55300),l=e(98115);o("search",(function(t,r,e){return[function(r){var e=u(this),o=a(r)?void 0:f(r,t);return o?n(o,r,e):new RegExp(r)[t](c(e))},function(t){var n=i(this),o=c(t),a=e(r,n,o);if(a.done)return a.value;var u=n.lastIndex;s(u,0)||(n.lastIndex=0);var f=l(n,o);return s(n.lastIndex,u)||(n.lastIndex=u),null===f?-1:f.index}]}))},48319:(t,r,e)=>{"use strict";var n=e(53171),o=e(20266),i=e(65968),a=e(94954),u=e(21176),s=e(9650),c=e(48311),f=e(58885),l=e(37942),p=e(36637),h=e(34237),v=e(83326),d=e(55300),g=e(69794),y=e(98115),m=e(63466),b=e(25650),x=e(24229),w=b.UNSUPPORTED_Y,S=4294967295,A=Math.min,R=[].push,E=i(/./.exec),O=i(R),I=i("".slice);a("split",(function(t,r,e){var i;return i="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,e){var i=v(f(this)),a=void 0===e?S:e>>>0;if(0===a)return[];if(void 0===t)return[i];if(!c(t))return o(r,i,t,a);for(var u,s,l,p=[],h=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),d=0,y=new RegExp(t.source,h+"g");(u=o(m,y,i))&&!((s=y.lastIndex)>d&&(O(p,I(i,d,u.index)),u.length>1&&u.index<i.length&&n(R,p,g(u,1)),l=u[0].length,d=s,p.length>=a));)y.lastIndex===u.index&&y.lastIndex++;return d===i.length?!l&&E(y,"")||O(p,""):O(p,I(i,d)),p.length>a?g(p,0,a):p}:"0".split(void 0,0).length?function(t,e){return void 0===t&&0===e?[]:o(r,this,t,e)}:r,[function(r,e){var n=f(this),a=s(r)?void 0:d(r,t);return a?o(a,r,n,e):o(i,v(n),r,e)},function(t,n){var o=u(this),a=v(t),s=e(i,o,a,n,i!==r);if(s.done)return s.value;var c=l(o,RegExp),f=o.unicode,d=(o.ignoreCase?"i":"")+(o.multiline?"m":"")+(o.unicode?"u":"")+(w?"g":"y"),g=new c(w?"^(?:"+o.source+")":o,d),m=void 0===n?S:n>>>0;if(0===m)return[];if(0===a.length)return null===y(g,a)?[a]:[];for(var b=0,x=0,R=[];x<a.length;){g.lastIndex=w?0:x;var E,P=y(g,w?I(a,x):a);if(null===P||(E=A(h(g.lastIndex+(w?x:0)),a.length))===b)x=p(a,x,f);else{if(O(R,I(a,b,x)),R.length===m)return R;for(var T=1;T<=P.length-1;T++)if(O(R,P[T]),R.length===m)return R;x=b=E}}return O(R,I(a,b)),R}]}),!!x((function(){var t=/(?:)/,r=t.exec;t.exec=function(){return r.apply(this,arguments)};var e="ab".split(t);return 2!==e.length||"a"!==e[0]||"b"!==e[1]})),w)},44112:(t,r,e)=>{"use strict";var n,o=e(23103),i=e(65968),a=e(97933).f,u=e(34237),s=e(83326),c=e(47272),f=e(58885),l=e(48127),p=e(24231),h=i("".startsWith),v=i("".slice),d=Math.min,g=l("startsWith");o({target:"String",proto:!0,forced:!!(p||g||(n=a(String.prototype,"startsWith"),!n||n.writable))&&!g},{startsWith:function(t){var r=s(f(this));c(t);var e=u(d(arguments.length>1?arguments[1]:void 0,r.length)),n=s(t);return h?h(r,n,e):v(r,e,e+n.length)===n}})},18827:(t,r,e)=>{e(65625);var n=e(23103),o=e(61466);n({target:"String",proto:!0,name:"trimEnd",forced:"".trimEnd!==o},{trimEnd:o})},18763:(t,r,e)=>{var n=e(23103),o=e(58747);n({target:"String",proto:!0,name:"trimStart",forced:"".trimLeft!==o},{trimLeft:o})},65625:(t,r,e)=>{var n=e(23103),o=e(61466);n({target:"String",proto:!0,name:"trimEnd",forced:"".trimRight!==o},{trimRight:o})},41715:(t,r,e)=>{e(18763);var n=e(23103),o=e(58747);n({target:"String",proto:!0,name:"trimStart",forced:"".trimStart!==o},{trimStart:o})},45794:(t,r,e)=>{"use strict";var n=e(23103),o=e(1017).trim;n({target:"String",proto:!0,forced:e(9445)("trim")},{trim:function(){return o(this)}})},96882:(t,r,e)=>{e(63524)("asyncIterator")},634:(t,r,e)=>{"use strict";var n=e(23103),o=e(7400),i=e(9859),a=e(65968),u=e(98270),s=e(26733),c=e(91321),f=e(83326),l=e(31787).f,p=e(77081),h=i.Symbol,v=h&&h.prototype;if(o&&s(h)&&(!("description"in v)||void 0!==h().description)){var d={},g=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:f(arguments[0]),r=c(v,this)?new h(t):void 0===t?h():h(t);return""===t&&(d[r]=!0),r};p(g,h),g.prototype=v,v.constructor=g;var y="Symbol(test)"==String(h("test")),m=a(v.valueOf),b=a(v.toString),x=/^Symbol\((.*)\)[^)]+$/,w=a("".replace),S=a("".slice);l(v,"description",{configurable:!0,get:function(){var t=m(this);if(u(d,t))return"";var r=b(t),e=y?S(r,7,-1):w(r,x,"$1");return""===e?void 0:e}}),n({global:!0,constructor:!0,forced:!0},{Symbol:g})}},64844:(t,r,e)=>{e(63524)("match")},40225:(t,r,e)=>{e(63524)("replace")},71686:(t,r,e)=>{e(63524)("search")},68223:(t,r,e)=>{e(63524)("split")},38857:(t,r,e)=>{"use strict";var n=e(9918),o=e(97065),i=e(19123),a=e(81589),u=e(20266),s=e(65968),c=e(24229),f=n.aTypedArray,l=n.exportTypedArrayMethod,p=s("".slice);l("fill",(function(t){var r=arguments.length;f(this);var e="Big"===p(a(this),0,3)?i(t):+t;return u(o,this,e,r>1?arguments[1]:void 0,r>2?arguments[2]:void 0)}),c((function(){var t=0;return new Int8Array(2).fill({valueOf:function(){return t++}}),1!==t})))},81382:(t,r,e)=>{e(42574)("Float32",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},91982:(t,r,e)=>{e(42574)("Float64",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},26618:(t,r,e)=>{"use strict";var n=e(48200);(0,e(9918).exportTypedArrayStaticMethod)("from",e(35215),n)},24074:(t,r,e)=>{e(42574)("Int16",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},64696:(t,r,e)=>{e(42574)("Int32",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},73229:(t,r,e)=>{e(42574)("Int8",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},49527:(t,r,e)=>{"use strict";var n=e(9918),o=e(48200),i=n.aTypedArrayConstructor;(0,n.exportTypedArrayStaticMethod)("of",(function(){for(var t=0,r=arguments.length,e=new(i(this))(r);r>t;)e[t]=arguments[t++];return e}),o)},65688:(t,r,e)=>{"use strict";var n=e(9859),o=e(20266),i=e(9918),a=e(39646),u=e(84262),s=e(92991),c=e(24229),f=n.RangeError,l=n.Int8Array,p=l&&l.prototype,h=p&&p.set,v=i.aTypedArray,d=i.exportTypedArrayMethod,g=!c((function(){var t=new Uint8ClampedArray(2);return o(h,t,{length:1,0:3},1),3!==t[1]})),y=g&&i.NATIVE_ARRAY_BUFFER_VIEWS&&c((function(){var t=new l(2);return t.set(1),t.set("2",1),0!==t[0]||2!==t[1]}));d("set",(function(t){v(this);var r=u(arguments.length>1?arguments[1]:void 0,1),e=s(t);if(g)return o(h,this,e,r);var n=this.length,i=a(e),c=0;if(i+r>n)throw f("Wrong length");for(;c<i;)this[r+c]=e[c++]}),!g||y)},70315:(t,r,e)=>{"use strict";var n=e(9859),o=e(65968),i=e(24229),a=e(77111),u=e(33867),s=e(9918),c=e(22671),f=e(48506),l=e(6358),p=e(49811),h=s.aTypedArray,v=s.exportTypedArrayMethod,d=n.Uint16Array,g=d&&o(d.prototype.sort),y=!(!g||i((function(){g(new d(2),null)}))&&i((function(){g(new d(2),{})}))),m=!!g&&!i((function(){if(l)return l<74;if(c)return c<67;if(f)return!0;if(p)return p<602;var t,r,e=new d(516),n=Array(516);for(t=0;t<516;t++)r=t%4,e[t]=515-t,n[t]=t-2*r+3;for(g(e,(function(t,r){return(t/4|0)-(r/4|0)})),t=0;t<516;t++)if(e[t]!==n[t])return!0}));v("sort",(function(t){return void 0!==t&&a(t),m?g(this,t):u(h(this),function(t){return function(r,e){return void 0!==t?+t(r,e)||0:e!=e?-1:r!=r?1:0===r&&0===e?1/r>0&&1/e<0?1:-1:r>e}}(t))}),!m||y)},50556:(t,r,e)=>{"use strict";var n=e(9859),o=e(53171),i=e(9918),a=e(24229),u=e(1909),s=n.Int8Array,c=i.aTypedArray,f=i.exportTypedArrayMethod,l=[].toLocaleString,p=!!s&&a((function(){l.call(new s(1))}));f("toLocaleString",(function(){return o(l,p?u(c(this)):c(this),u(arguments))}),a((function(){return[1,2].toLocaleString()!=new s([1,2]).toLocaleString()}))||!a((function(){s.prototype.toLocaleString.call([1,2])})))},13161:(t,r,e)=>{e(42574)("Uint16",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},90723:(t,r,e)=>{e(42574)("Uint32",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},13675:(t,r,e)=>{e(42574)("Uint8",(function(t){return function(r,e,n){return t(this,r,e,n)}}))},36920:(t,r,e)=>{e(42574)("Uint8",(function(t){return function(r,e,n){return t(this,r,e,n)}}),!0)},78596:(t,r,e)=>{var n=e(23103),o=e(9859),i=e(55795).clear;n({global:!0,bind:!0,enumerable:!0,forced:o.clearImmediate!==i},{clearImmediate:i})},6886:(t,r,e)=>{var n=e(9859),o=e(95694),i=e(18865),a=e(15735),u=e(75762),s=e(70095),c=s("iterator"),f=s("toStringTag"),l=a.values,p=function(t,r){if(t){if(t[c]!==l)try{u(t,c,l)}catch(n){t[c]=l}if(t[f]||u(t,f,r),o[r])for(var e in a)if(t[e]!==a[e])try{u(t,e,a[e])}catch(n){t[e]=a[e]}}};for(var h in o)p(n[h]&&n[h].prototype,h);p(i,"DOMTokenList")},46106:(t,r,e)=>{e(78596),e(86471)},19866:(t,r,e)=>{var n=e(23103),o=e(9859),i=e(24794),a=e(77111),u=e(77579),s=e(28801),c=o.process;n({global:!0,enumerable:!0,dontCallGetSet:!0},{queueMicrotask:function(t){u(arguments.length,1),a(t);var r=s&&c.domain;i(r?r.bind(t):t)}})},86471:(t,r,e)=>{var n=e(23103),o=e(9859),i=e(55795).set;n({global:!0,bind:!0,enumerable:!0,forced:o.setImmediate!==i},{setImmediate:i})},62653:(t,r,e)=>{"use strict";e(15735);var n=e(23103),o=e(9859),i=e(20266),a=e(65968),u=e(7400),s=e(34144),c=e(14768),f=e(8312),l=e(54555),p=e(42247),h=e(56407),v=e(57728),d=e(26733),g=e(98270),y=e(97636),m=e(81589),b=e(21176),x=e(85052),w=e(83326),S=e(22391),A=e(65358),R=e(28403),E=e(78830),O=e(77579),I=e(70095),P=e(33867),T=I("iterator"),L="URLSearchParams",j="URLSearchParamsIterator",U=h.set,k=h.getterFor(L),C=h.getterFor(j),_=Object.getOwnPropertyDescriptor,M=function(t){if(!u)return o[t];var r=_(o,t);return r&&r.value},B=M("fetch"),F=M("Request"),N=M("Headers"),D=F&&F.prototype,H=N&&N.prototype,q=o.RegExp,G=o.TypeError,V=o.decodeURIComponent,W=o.encodeURIComponent,$=a("".charAt),Y=a([].join),z=a([].push),K=a("".replace),J=a([].shift),Q=a([].splice),X=a("".split),Z=a("".slice),tt=/\+/g,rt=Array(4),et=function(t){return rt[t-1]||(rt[t-1]=q("((?:%[\\da-f]{2}){"+t+"})","gi"))},nt=function(t){try{return V(t)}catch(r){return t}},ot=function(t){var r=K(t,tt," "),e=4;try{return V(r)}catch(n){for(;e;)r=K(r,et(e--),nt);return r}},it=/[!'()~]|%20/g,at={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},ut=function(t){return at[t]},st=function(t){return K(W(t),it,ut)},ct=p((function(t,r){U(this,{type:j,iterator:R(k(t).entries),kind:r})}),"Iterator",(function(){var t=C(this),r=t.kind,e=t.iterator.next(),n=e.value;return e.done||(e.value="keys"===r?n.key:"values"===r?n.value:[n.key,n.value]),e}),!0),ft=function(t){this.entries=[],this.url=null,void 0!==t&&(x(t)?this.parseObject(t):this.parseQuery("string"==typeof t?"?"===$(t,0)?Z(t,1):t:w(t)))};ft.prototype={type:L,bindURL:function(t){this.url=t,this.update()},parseObject:function(t){var r,e,n,o,a,u,s,c=E(t);if(c)for(e=(r=R(t,c)).next;!(n=i(e,r)).done;){if(a=(o=R(b(n.value))).next,(u=i(a,o)).done||(s=i(a,o)).done||!i(a,o).done)throw G("Expected sequence with length 2");z(this.entries,{key:w(u.value),value:w(s.value)})}else for(var f in t)g(t,f)&&z(this.entries,{key:f,value:w(t[f])})},parseQuery:function(t){if(t)for(var r,e,n=X(t,"&"),o=0;o<n.length;)(r=n[o++]).length&&(e=X(r,"="),z(this.entries,{key:ot(J(e)),value:ot(Y(e,"="))}))},serialize:function(){for(var t,r=this.entries,e=[],n=0;n<r.length;)t=r[n++],z(e,st(t.key)+"="+st(t.value));return Y(e,"&")},update:function(){this.entries.length=0,this.parseQuery(this.url.query)},updateURL:function(){this.url&&this.url.update()}};var lt=function(){v(this,pt);var t=arguments.length>0?arguments[0]:void 0;U(this,new ft(t))},pt=lt.prototype;if(f(pt,{append:function(t,r){O(arguments.length,2);var e=k(this);z(e.entries,{key:w(t),value:w(r)}),e.updateURL()},delete:function(t){O(arguments.length,1);for(var r=k(this),e=r.entries,n=w(t),o=0;o<e.length;)e[o].key===n?Q(e,o,1):o++;r.updateURL()},get:function(t){O(arguments.length,1);for(var r=k(this).entries,e=w(t),n=0;n<r.length;n++)if(r[n].key===e)return r[n].value;return null},getAll:function(t){O(arguments.length,1);for(var r=k(this).entries,e=w(t),n=[],o=0;o<r.length;o++)r[o].key===e&&z(n,r[o].value);return n},has:function(t){O(arguments.length,1);for(var r=k(this).entries,e=w(t),n=0;n<r.length;)if(r[n++].key===e)return!0;return!1},set:function(t,r){O(arguments.length,1);for(var e,n=k(this),o=n.entries,i=!1,a=w(t),u=w(r),s=0;s<o.length;s++)(e=o[s]).key===a&&(i?Q(o,s--,1):(i=!0,e.value=u));i||z(o,{key:a,value:u}),n.updateURL()},sort:function(){var t=k(this);P(t.entries,(function(t,r){return t.key>r.key?1:-1})),t.updateURL()},forEach:function(t){for(var r,e=k(this).entries,n=y(t,arguments.length>1?arguments[1]:void 0),o=0;o<e.length;)n((r=e[o++]).value,r.key,this)},keys:function(){return new ct(this,"keys")},values:function(){return new ct(this,"values")},entries:function(){return new ct(this,"entries")}},{enumerable:!0}),c(pt,T,pt.entries,{name:"entries"}),c(pt,"toString",(function(){return k(this).serialize()}),{enumerable:!0}),l(lt,L),n({global:!0,constructor:!0,forced:!s},{URLSearchParams:lt}),!s&&d(N)){var ht=a(H.has),vt=a(H.set),dt=function(t){if(x(t)){var r,e=t.body;if(m(e)===L)return r=t.headers?new N(t.headers):new N,ht(r,"content-type")||vt(r,"content-type","application/x-www-form-urlencoded;charset=UTF-8"),S(t,{body:A(0,w(e)),headers:A(0,r)})}return t};if(d(B)&&n({global:!0,enumerable:!0,dontCallGetSet:!0,forced:!0},{fetch:function(t){return B(t,arguments.length>1?dt(arguments[1]):{})}}),d(F)){var gt=function(t){return v(this,D),new F(t,arguments.length>1?dt(arguments[1]):{})};D.constructor=gt,gt.prototype=D,n({global:!0,constructor:!0,dontCallGetSet:!0,forced:!0},{Request:gt})}}t.exports={URLSearchParams:lt,getState:k}},60523:(t,r,e)=>{e(62653)},95340:(t,r,e)=>{"use strict";e(28673);var n,o=e(23103),i=e(7400),a=e(34144),u=e(9859),s=e(97636),c=e(65968),f=e(14768),l=e(96616),p=e(57728),h=e(98270),v=e(47),d=e(10507),g=e(69794),y=e(30966).codeAt,m=e(77321),b=e(83326),x=e(54555),w=e(77579),S=e(62653),A=e(56407),R=A.set,E=A.getterFor("URL"),O=S.URLSearchParams,I=S.getState,P=u.URL,T=u.TypeError,L=u.parseInt,j=Math.floor,U=Math.pow,k=c("".charAt),C=c(/./.exec),_=c([].join),M=c(1..toString),B=c([].pop),F=c([].push),N=c("".replace),D=c([].shift),H=c("".split),q=c("".slice),G=c("".toLowerCase),V=c([].unshift),W="Invalid scheme",$="Invalid host",Y="Invalid port",z=/[a-z]/i,K=/[\d+-.a-z]/i,J=/\d/,Q=/^0x/i,X=/^[0-7]+$/,Z=/^\d+$/,tt=/^[\da-f]+$/i,rt=/[\0\t\n\r #%/:<>?@[\\\]^|]/,et=/[\0\t\n\r #/:<>?@[\\\]^|]/,nt=/^[\u0000-\u0020]+|[\u0000-\u0020]+$/g,ot=/[\t\n\r]/g,it=function(t){var r,e,n,o;if("number"==typeof t){for(r=[],e=0;e<4;e++)V(r,t%256),t=j(t/256);return _(r,".")}if("object"==typeof t){for(r="",n=function(t){for(var r=null,e=1,n=null,o=0,i=0;i<8;i++)0!==t[i]?(o>e&&(r=n,e=o),n=null,o=0):(null===n&&(n=i),++o);return o>e&&(r=n,e=o),r}(t),e=0;e<8;e++)o&&0===t[e]||(o&&(o=!1),n===e?(r+=e?":":"::",o=!0):(r+=M(t[e],16),e<7&&(r+=":")));return"["+r+"]"}return t},at={},ut=v({},at,{" ":1,'"':1,"<":1,">":1,"`":1}),st=v({},ut,{"#":1,"?":1,"{":1,"}":1}),ct=v({},st,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),ft=function(t,r){var e=y(t,0);return e>32&&e<127&&!h(r,t)?t:encodeURIComponent(t)},lt={ftp:21,file:null,http:80,https:443,ws:80,wss:443},pt=function(t,r){var e;return 2==t.length&&C(z,k(t,0))&&(":"==(e=k(t,1))||!r&&"|"==e)},ht=function(t){var r;return t.length>1&&pt(q(t,0,2))&&(2==t.length||"/"===(r=k(t,2))||"\\"===r||"?"===r||"#"===r)},vt=function(t){return"."===t||"%2e"===G(t)},dt={},gt={},yt={},mt={},bt={},xt={},wt={},St={},At={},Rt={},Et={},Ot={},It={},Pt={},Tt={},Lt={},jt={},Ut={},kt={},Ct={},_t={},Mt=function(t,r,e){var n,o,i,a=b(t);if(r){if(o=this.parse(a))throw T(o);this.searchParams=null}else{if(void 0!==e&&(n=new Mt(e,!0)),o=this.parse(a,null,n))throw T(o);(i=I(new O)).bindURL(this),this.searchParams=i}};Mt.prototype={type:"URL",parse:function(t,r,e){var o,i,a,u,s,c=this,f=r||dt,l=0,p="",v=!1,y=!1,m=!1;for(t=b(t),r||(c.scheme="",c.username="",c.password="",c.host=null,c.port=null,c.path=[],c.query=null,c.fragment=null,c.cannotBeABaseURL=!1,t=N(t,nt,"")),t=N(t,ot,""),o=d(t);l<=o.length;){switch(i=o[l],f){case dt:if(!i||!C(z,i)){if(r)return W;f=yt;continue}p+=G(i),f=gt;break;case gt:if(i&&(C(K,i)||"+"==i||"-"==i||"."==i))p+=G(i);else{if(":"!=i){if(r)return W;p="",f=yt,l=0;continue}if(r&&(c.isSpecial()!=h(lt,p)||"file"==p&&(c.includesCredentials()||null!==c.port)||"file"==c.scheme&&!c.host))return;if(c.scheme=p,r)return void(c.isSpecial()&&lt[c.scheme]==c.port&&(c.port=null));p="","file"==c.scheme?f=Pt:c.isSpecial()&&e&&e.scheme==c.scheme?f=mt:c.isSpecial()?f=St:"/"==o[l+1]?(f=bt,l++):(c.cannotBeABaseURL=!0,F(c.path,""),f=kt)}break;case yt:if(!e||e.cannotBeABaseURL&&"#"!=i)return W;if(e.cannotBeABaseURL&&"#"==i){c.scheme=e.scheme,c.path=g(e.path),c.query=e.query,c.fragment="",c.cannotBeABaseURL=!0,f=_t;break}f="file"==e.scheme?Pt:xt;continue;case mt:if("/"!=i||"/"!=o[l+1]){f=xt;continue}f=At,l++;break;case bt:if("/"==i){f=Rt;break}f=Ut;continue;case xt:if(c.scheme=e.scheme,i==n)c.username=e.username,c.password=e.password,c.host=e.host,c.port=e.port,c.path=g(e.path),c.query=e.query;else if("/"==i||"\\"==i&&c.isSpecial())f=wt;else if("?"==i)c.username=e.username,c.password=e.password,c.host=e.host,c.port=e.port,c.path=g(e.path),c.query="",f=Ct;else{if("#"!=i){c.username=e.username,c.password=e.password,c.host=e.host,c.port=e.port,c.path=g(e.path),c.path.length--,f=Ut;continue}c.username=e.username,c.password=e.password,c.host=e.host,c.port=e.port,c.path=g(e.path),c.query=e.query,c.fragment="",f=_t}break;case wt:if(!c.isSpecial()||"/"!=i&&"\\"!=i){if("/"!=i){c.username=e.username,c.password=e.password,c.host=e.host,c.port=e.port,f=Ut;continue}f=Rt}else f=At;break;case St:if(f=At,"/"!=i||"/"!=k(p,l+1))continue;l++;break;case At:if("/"!=i&&"\\"!=i){f=Rt;continue}break;case Rt:if("@"==i){v&&(p="%40"+p),v=!0,a=d(p);for(var x=0;x<a.length;x++){var w=a[x];if(":"!=w||m){var S=ft(w,ct);m?c.password+=S:c.username+=S}else m=!0}p=""}else if(i==n||"/"==i||"?"==i||"#"==i||"\\"==i&&c.isSpecial()){if(v&&""==p)return"Invalid authority";l-=d(p).length+1,p="",f=Et}else p+=i;break;case Et:case Ot:if(r&&"file"==c.scheme){f=Lt;continue}if(":"!=i||y){if(i==n||"/"==i||"?"==i||"#"==i||"\\"==i&&c.isSpecial()){if(c.isSpecial()&&""==p)return $;if(r&&""==p&&(c.includesCredentials()||null!==c.port))return;if(u=c.parseHost(p))return u;if(p="",f=jt,r)return;continue}"["==i?y=!0:"]"==i&&(y=!1),p+=i}else{if(""==p)return $;if(u=c.parseHost(p))return u;if(p="",f=It,r==Ot)return}break;case It:if(!C(J,i)){if(i==n||"/"==i||"?"==i||"#"==i||"\\"==i&&c.isSpecial()||r){if(""!=p){var A=L(p,10);if(A>65535)return Y;c.port=c.isSpecial()&&A===lt[c.scheme]?null:A,p=""}if(r)return;f=jt;continue}return Y}p+=i;break;case Pt:if(c.scheme="file","/"==i||"\\"==i)f=Tt;else{if(!e||"file"!=e.scheme){f=Ut;continue}if(i==n)c.host=e.host,c.path=g(e.path),c.query=e.query;else if("?"==i)c.host=e.host,c.path=g(e.path),c.query="",f=Ct;else{if("#"!=i){ht(_(g(o,l),""))||(c.host=e.host,c.path=g(e.path),c.shortenPath()),f=Ut;continue}c.host=e.host,c.path=g(e.path),c.query=e.query,c.fragment="",f=_t}}break;case Tt:if("/"==i||"\\"==i){f=Lt;break}e&&"file"==e.scheme&&!ht(_(g(o,l),""))&&(pt(e.path[0],!0)?F(c.path,e.path[0]):c.host=e.host),f=Ut;continue;case Lt:if(i==n||"/"==i||"\\"==i||"?"==i||"#"==i){if(!r&&pt(p))f=Ut;else if(""==p){if(c.host="",r)return;f=jt}else{if(u=c.parseHost(p))return u;if("localhost"==c.host&&(c.host=""),r)return;p="",f=jt}continue}p+=i;break;case jt:if(c.isSpecial()){if(f=Ut,"/"!=i&&"\\"!=i)continue}else if(r||"?"!=i)if(r||"#"!=i){if(i!=n&&(f=Ut,"/"!=i))continue}else c.fragment="",f=_t;else c.query="",f=Ct;break;case Ut:if(i==n||"/"==i||"\\"==i&&c.isSpecial()||!r&&("?"==i||"#"==i)){if(".."===(s=G(s=p))||"%2e."===s||".%2e"===s||"%2e%2e"===s?(c.shortenPath(),"/"==i||"\\"==i&&c.isSpecial()||F(c.path,"")):vt(p)?"/"==i||"\\"==i&&c.isSpecial()||F(c.path,""):("file"==c.scheme&&!c.path.length&&pt(p)&&(c.host&&(c.host=""),p=k(p,0)+":"),F(c.path,p)),p="","file"==c.scheme&&(i==n||"?"==i||"#"==i))for(;c.path.length>1&&""===c.path[0];)D(c.path);"?"==i?(c.query="",f=Ct):"#"==i&&(c.fragment="",f=_t)}else p+=ft(i,st);break;case kt:"?"==i?(c.query="",f=Ct):"#"==i?(c.fragment="",f=_t):i!=n&&(c.path[0]+=ft(i,at));break;case Ct:r||"#"!=i?i!=n&&("'"==i&&c.isSpecial()?c.query+="%27":c.query+="#"==i?"%23":ft(i,at)):(c.fragment="",f=_t);break;case _t:i!=n&&(c.fragment+=ft(i,ut))}l++}},parseHost:function(t){var r,e,n;if("["==k(t,0)){if("]"!=k(t,t.length-1))return $;if(r=function(t){var r,e,n,o,i,a,u,s=[0,0,0,0,0,0,0,0],c=0,f=null,l=0,p=function(){return k(t,l)};if(":"==p()){if(":"!=k(t,1))return;l+=2,f=++c}for(;p();){if(8==c)return;if(":"!=p()){for(r=e=0;e<4&&C(tt,p());)r=16*r+L(p(),16),l++,e++;if("."==p()){if(0==e)return;if(l-=e,c>6)return;for(n=0;p();){if(o=null,n>0){if(!("."==p()&&n<4))return;l++}if(!C(J,p()))return;for(;C(J,p());){if(i=L(p(),10),null===o)o=i;else{if(0==o)return;o=10*o+i}if(o>255)return;l++}s[c]=256*s[c]+o,2!=++n&&4!=n||c++}if(4!=n)return;break}if(":"==p()){if(l++,!p())return}else if(p())return;s[c++]=r}else{if(null!==f)return;l++,f=++c}}if(null!==f)for(a=c-f,c=7;0!=c&&a>0;)u=s[c],s[c--]=s[f+a-1],s[f+--a]=u;else if(8!=c)return;return s}(q(t,1,-1)),!r)return $;this.host=r}else if(this.isSpecial()){if(t=m(t),C(rt,t))return $;if(r=function(t){var r,e,n,o,i,a,u,s=H(t,".");if(s.length&&""==s[s.length-1]&&s.length--,(r=s.length)>4)return t;for(e=[],n=0;n<r;n++){if(""==(o=s[n]))return t;if(i=10,o.length>1&&"0"==k(o,0)&&(i=C(Q,o)?16:8,o=q(o,8==i?1:2)),""===o)a=0;else{if(!C(10==i?Z:8==i?X:tt,o))return t;a=L(o,i)}F(e,a)}for(n=0;n<r;n++)if(a=e[n],n==r-1){if(a>=U(256,5-r))return null}else if(a>255)return null;for(u=B(e),n=0;n<e.length;n++)u+=e[n]*U(256,3-n);return u}(t),null===r)return $;this.host=r}else{if(C(et,t))return $;for(r="",e=d(t),n=0;n<e.length;n++)r+=ft(e[n],at);this.host=r}},cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||"file"==this.scheme},includesCredentials:function(){return""!=this.username||""!=this.password},isSpecial:function(){return h(lt,this.scheme)},shortenPath:function(){var t=this.path,r=t.length;!r||"file"==this.scheme&&1==r&&pt(t[0],!0)||t.length--},serialize:function(){var t=this,r=t.scheme,e=t.username,n=t.password,o=t.host,i=t.port,a=t.path,u=t.query,s=t.fragment,c=r+":";return null!==o?(c+="//",t.includesCredentials()&&(c+=e+(n?":"+n:"")+"@"),c+=it(o),null!==i&&(c+=":"+i)):"file"==r&&(c+="//"),c+=t.cannotBeABaseURL?a[0]:a.length?"/"+_(a,"/"):"",null!==u&&(c+="?"+u),null!==s&&(c+="#"+s),c},setHref:function(t){var r=this.parse(t);if(r)throw T(r);this.searchParams.update()},getOrigin:function(){var t=this.scheme,r=this.port;if("blob"==t)try{return new Bt(t.path[0]).origin}catch(e){return"null"}return"file"!=t&&this.isSpecial()?t+"://"+it(this.host)+(null!==r?":"+r:""):"null"},getProtocol:function(){return this.scheme+":"},setProtocol:function(t){this.parse(b(t)+":",dt)},getUsername:function(){return this.username},setUsername:function(t){var r=d(b(t));if(!this.cannotHaveUsernamePasswordPort()){this.username="";for(var e=0;e<r.length;e++)this.username+=ft(r[e],ct)}},getPassword:function(){return this.password},setPassword:function(t){var r=d(b(t));if(!this.cannotHaveUsernamePasswordPort()){this.password="";for(var e=0;e<r.length;e++)this.password+=ft(r[e],ct)}},getHost:function(){var t=this.host,r=this.port;return null===t?"":null===r?it(t):it(t)+":"+r},setHost:function(t){this.cannotBeABaseURL||this.parse(t,Et)},getHostname:function(){var t=this.host;return null===t?"":it(t)},setHostname:function(t){this.cannotBeABaseURL||this.parse(t,Ot)},getPort:function(){var t=this.port;return null===t?"":b(t)},setPort:function(t){this.cannotHaveUsernamePasswordPort()||(""==(t=b(t))?this.port=null:this.parse(t,It))},getPathname:function(){var t=this.path;return this.cannotBeABaseURL?t[0]:t.length?"/"+_(t,"/"):""},setPathname:function(t){this.cannotBeABaseURL||(this.path=[],this.parse(t,jt))},getSearch:function(){var t=this.query;return t?"?"+t:""},setSearch:function(t){""==(t=b(t))?this.query=null:("?"==k(t,0)&&(t=q(t,1)),this.query="",this.parse(t,Ct)),this.searchParams.update()},getSearchParams:function(){return this.searchParams.facade},getHash:function(){var t=this.fragment;return t?"#"+t:""},setHash:function(t){""!=(t=b(t))?("#"==k(t,0)&&(t=q(t,1)),this.fragment="",this.parse(t,_t)):this.fragment=null},update:function(){this.query=this.searchParams.serialize()||null}};var Bt=function(t){var r=p(this,Ft),e=w(arguments.length,1)>1?arguments[1]:void 0,n=R(r,new Mt(t,!1,e));i||(r.href=n.serialize(),r.origin=n.getOrigin(),r.protocol=n.getProtocol(),r.username=n.getUsername(),r.password=n.getPassword(),r.host=n.getHost(),r.hostname=n.getHostname(),r.port=n.getPort(),r.pathname=n.getPathname(),r.search=n.getSearch(),r.searchParams=n.getSearchParams(),r.hash=n.getHash())},Ft=Bt.prototype,Nt=function(t,r){return{get:function(){return E(this)[t]()},set:r&&function(t){return E(this)[r](t)},configurable:!0,enumerable:!0}};if(i&&(l(Ft,"href",Nt("serialize","setHref")),l(Ft,"origin",Nt("getOrigin")),l(Ft,"protocol",Nt("getProtocol","setProtocol")),l(Ft,"username",Nt("getUsername","setUsername")),l(Ft,"password",Nt("getPassword","setPassword")),l(Ft,"host",Nt("getHost","setHost")),l(Ft,"hostname",Nt("getHostname","setHostname")),l(Ft,"port",Nt("getPort","setPort")),l(Ft,"pathname",Nt("getPathname","setPathname")),l(Ft,"search",Nt("getSearch","setSearch")),l(Ft,"searchParams",Nt("getSearchParams")),l(Ft,"hash",Nt("getHash","setHash"))),f(Ft,"toJSON",(function(){return E(this).serialize()}),{enumerable:!0}),f(Ft,"toString",(function(){return E(this).serialize()}),{enumerable:!0}),P){var Dt=P.createObjectURL,Ht=P.revokeObjectURL;Dt&&f(Bt,"createObjectURL",s(Dt,P)),Ht&&f(Bt,"revokeObjectURL",s(Ht,P))}x(Bt,"URL"),o({global:!0,constructor:!0,forced:!a,sham:!i},{URL:Bt})},14121:(t,r,e)=>{e(95340)},85371:(t,r,e)=>{"use strict";var n=e(23103),o=e(20266);n({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return o(URL.prototype.toString,this)}})}},t=>{var r=r=>t(t.s=r);r(70982),r(41913)}]);/*! For license information please see main.890225dc0385d2a6.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([[179],{63279:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);e(43847),l.__exportStar(e(71889),t),l.__exportStar(e(55825),t)},43847:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163).__importStar(e(52087));"undefined"==typeof TextEncoder&&(window.global=window,global.TextEncoder=l.TextEncoder)},71889:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Keypair=t.SolanaPublicKey=t.SolanaKeypair=void 0;const l=e(5163),r=e(90394),u=l.__importStar(e(55796)),i=e(68050),o=e(27158);Object.defineProperty(t,"SolanaKeypair",{enumerable:!0,get:function(){return o.Keypair}}),Object.defineProperty(t,"SolanaPublicKey",{enumerable:!0,get:function(){return o.PublicKey}});const s=l.__importStar(e(17022));class a{constructor(n){this.solanaKeypair=o.Keypair.fromSecretKey(s.decode(n)),this.publicKey=this.solanaKeypair.publicKey.toBase58(),this.secretKey=s.encode(this.solanaKeypair.secretKey)}get solana(){return this.solanaKeypair}get solanaPublicKey(){return this.solanaKeypair.publicKey}get solanaSecretKey(){return this.solanaKeypair.secretKey}static fromByteArray(n){return this.fromSecretKey(s.encode(Uint8Array.from(n)))}static fromMnemonicSeed(n){const t=u.mnemonicToSeedSync(n,"");return this.fromSeed(Buffer.from(t).slice(0,32))}static fromMnemonic(n){return this.fromMnemonicSet(n)[0]}static fromMnemonicSet(n,t=0,e=10){e=e<=(t=t<0?0:t)?1:e;const l=u.mnemonicToSeedSync(n,""),r=[];for(let u=t;u<e;u++){const t=`m/44'/501'/${u}'/0'`,e=this.derive(Buffer.from(l),t);e.mnemonic=n,r.push(e)}return r}static derive(n,t){const e=r.HDKey.fromMasterSeed(n.toString("hex"));return a.fromSeed(Buffer.from(e.derive(t).privateKey))}static fromSeed(n){return this.fromSecretKey(s.encode(o.Keypair.fromSeed(n).secretKey))}static fromSecretKey(n){return new a(n)}static random(){const n=this.generateMnemonic(),[t]=this.fromMnemonicSet(n);return t}static generateMnemonic(n=128){return u.generateMnemonic(i.wordlist,n)}}t.Keypair=a},55825:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VERSION=t.NAME=void 0,t.NAME="@kin-kinetic/keypair",t.VERSION="1.0.0-rc.2"},53773:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TransactionApi=t.TransactionApiFactory=t.TransactionApiFp=t.TransactionApiAxiosParamCreator=t.AppApi=t.AppApiFactory=t.AppApiFp=t.AppApiAxiosParamCreator=t.AirdropApi=t.AirdropApiFactory=t.AirdropApiFp=t.AirdropApiAxiosParamCreator=t.AccountApi=t.AccountApiFactory=t.AccountApiFp=t.AccountApiAxiosParamCreator=t.TransactionErrorTypeEnum=t.TransactionStatusEnum=t.SignatureStatusConfirmationStatusEnum=t.RequestAirdropRequestCommitmentEnum=t.MakeTransferRequestCommitmentEnum=t.CreateAccountRequestCommitmentEnum=t.AppConfigClusterTypeEnum=void 0;const l=e(5163),r=e(89644),u=e(44340),i=e(61617);t.AppConfigClusterTypeEnum={Custom:"Custom",SolanaDevnet:"SolanaDevnet",SolanaMainnet:"SolanaMainnet",SolanaTestnet:"SolanaTestnet"},t.CreateAccountRequestCommitmentEnum={Confirmed:"Confirmed",Finalized:"Finalized",Processed:"Processed"},t.MakeTransferRequestCommitmentEnum={Confirmed:"Confirmed",Finalized:"Finalized",Processed:"Processed"},t.RequestAirdropRequestCommitmentEnum={Confirmed:"Confirmed",Finalized:"Finalized",Processed:"Processed"},t.SignatureStatusConfirmationStatusEnum={Processed:"processed",Confirmed:"confirmed",Finalized:"finalized"},t.TransactionStatusEnum={Committed:"Committed",Confirmed:"Confirmed",Failed:"Failed",Finalized:"Finalized",Processing:"Processing"},t.TransactionErrorTypeEnum={BadNonce:"BadNonce",InvalidAccount:"InvalidAccount",SomeError:"SomeError",Timeout:"Timeout",Unknown:"Unknown",WebhookFailed:"WebhookFailed"};t.AccountApiAxiosParamCreator=function(n){return{createAccount:(t,e={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("createAccount","createAccountRequest",t);const l=new URL("/api/account/create",u.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const i=Object.assign(Object.assign({method:"POST"},r),e),o={};o["Content-Type"]="application/json",(0,u.setSearchParams)(l,{});let s=r&&r.headers?r.headers:{};return i.headers=Object.assign(Object.assign(Object.assign({},o),s),e.headers),i.data=(0,u.serializeDataIfNeeded)(t,i,n),{url:(0,u.toPathString)(l),options:i}})),getAccountInfo:(t,e,r,i={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getAccountInfo","environment",t),(0,u.assertParamExists)("getAccountInfo","index",e),(0,u.assertParamExists)("getAccountInfo","accountId",r);const l="/api/account/info/{environment}/{index}/{accountId}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))).replace("{accountId}",encodeURIComponent(String(r))),o=new URL(l,u.DUMMY_BASE_URL);let s;n&&(s=n.baseOptions);const a=Object.assign(Object.assign({method:"GET"},s),i);(0,u.setSearchParams)(o,{});let c=s&&s.headers?s.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),c),i.headers),{url:(0,u.toPathString)(o),options:a}})),getBalance:(t,e,r,i={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getBalance","environment",t),(0,u.assertParamExists)("getBalance","index",e),(0,u.assertParamExists)("getBalance","accountId",r);const l="/api/account/balance/{environment}/{index}/{accountId}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))).replace("{accountId}",encodeURIComponent(String(r))),o=new URL(l,u.DUMMY_BASE_URL);let s;n&&(s=n.baseOptions);const a=Object.assign(Object.assign({method:"GET"},s),i);(0,u.setSearchParams)(o,{});let c=s&&s.headers?s.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),c),i.headers),{url:(0,u.toPathString)(o),options:a}})),getHistory:(t,e,r,i,o={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getHistory","environment",t),(0,u.assertParamExists)("getHistory","index",e),(0,u.assertParamExists)("getHistory","accountId",r),(0,u.assertParamExists)("getHistory","mint",i);const l="/api/account/history/{environment}/{index}/{accountId}/{mint}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))).replace("{accountId}",encodeURIComponent(String(r))).replace("{mint}",encodeURIComponent(String(i))),s=new URL(l,u.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const c=Object.assign(Object.assign({method:"GET"},a),o);(0,u.setSearchParams)(s,{});let h=a&&a.headers?a.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},{}),h),o.headers),{url:(0,u.toPathString)(s),options:c}})),getTokenAccounts:(t,e,r,i,o={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getTokenAccounts","environment",t),(0,u.assertParamExists)("getTokenAccounts","index",e),(0,u.assertParamExists)("getTokenAccounts","accountId",r),(0,u.assertParamExists)("getTokenAccounts","mint",i);const l="/api/account/token-accounts/{environment}/{index}/{accountId}/{mint}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))).replace("{accountId}",encodeURIComponent(String(r))).replace("{mint}",encodeURIComponent(String(i))),s=new URL(l,u.DUMMY_BASE_URL);let a;n&&(a=n.baseOptions);const c=Object.assign(Object.assign({method:"GET"},a),o);(0,u.setSearchParams)(s,{});let h=a&&a.headers?a.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},{}),h),o.headers),{url:(0,u.toPathString)(s),options:c}}))}};t.AccountApiFp=function(n){const e=(0,t.AccountApiAxiosParamCreator)(n);return{createAccount(t,o){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.createAccount(t,o);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getAccountInfo(t,o,s,a){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getAccountInfo(t,o,s,a);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getBalance(t,o,s,a){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getBalance(t,o,s,a);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getHistory(t,o,s,a,c){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getHistory(t,o,s,a,c);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getTokenAccounts(t,o,s,a,c){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getTokenAccounts(t,o,s,a,c);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))}}};t.AccountApiFactory=function(n,e,l){const r=(0,t.AccountApiFp)(n);return{createAccount:(n,t)=>r.createAccount(n,t).then((n=>n(l,e))),getAccountInfo:(n,t,u,i)=>r.getAccountInfo(n,t,u,i).then((n=>n(l,e))),getBalance:(n,t,u,i)=>r.getBalance(n,t,u,i).then((n=>n(l,e))),getHistory:(n,t,u,i,o)=>r.getHistory(n,t,u,i,o).then((n=>n(l,e))),getTokenAccounts:(n,t,u,i,o)=>r.getTokenAccounts(n,t,u,i,o).then((n=>n(l,e)))}};class o extends i.BaseAPI{createAccount(n,e){return(0,t.AccountApiFp)(this.configuration).createAccount(n,e).then((n=>n(this.axios,this.basePath)))}getAccountInfo(n,e,l,r){return(0,t.AccountApiFp)(this.configuration).getAccountInfo(n,e,l,r).then((n=>n(this.axios,this.basePath)))}getBalance(n,e,l,r){return(0,t.AccountApiFp)(this.configuration).getBalance(n,e,l,r).then((n=>n(this.axios,this.basePath)))}getHistory(n,e,l,r,u){return(0,t.AccountApiFp)(this.configuration).getHistory(n,e,l,r,u).then((n=>n(this.axios,this.basePath)))}getTokenAccounts(n,e,l,r,u){return(0,t.AccountApiFp)(this.configuration).getTokenAccounts(n,e,l,r,u).then((n=>n(this.axios,this.basePath)))}}t.AccountApi=o;t.AirdropApiAxiosParamCreator=function(n){return{requestAirdrop:(t,e={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("requestAirdrop","requestAirdropRequest",t);const l=new URL("/api/airdrop",u.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const i=Object.assign(Object.assign({method:"POST"},r),e),o={};o["Content-Type"]="application/json",(0,u.setSearchParams)(l,{});let s=r&&r.headers?r.headers:{};return i.headers=Object.assign(Object.assign(Object.assign({},o),s),e.headers),i.data=(0,u.serializeDataIfNeeded)(t,i,n),{url:(0,u.toPathString)(l),options:i}}))}};t.AirdropApiFp=function(n){const e=(0,t.AirdropApiAxiosParamCreator)(n);return{requestAirdrop(t,o){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.requestAirdrop(t,o);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))}}};t.AirdropApiFactory=function(n,e,l){const r=(0,t.AirdropApiFp)(n);return{requestAirdrop:(n,t)=>r.requestAirdrop(n,t).then((n=>n(l,e)))}};class s extends i.BaseAPI{requestAirdrop(n,e){return(0,t.AirdropApiFp)(this.configuration).requestAirdrop(n,e).then((n=>n(this.axios,this.basePath)))}}t.AirdropApi=s;t.AppApiAxiosParamCreator=function(n){return{getAppConfig:(t,e,r={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getAppConfig","environment",t),(0,u.assertParamExists)("getAppConfig","index",e);const l="/api/app/{environment}/{index}/config".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))),i=new URL(l,u.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},o),r);(0,u.setSearchParams)(i,{});let a=o&&o.headers?o.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),a),r.headers),{url:(0,u.toPathString)(i),options:s}})),getAppHealth:(t,e,r={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getAppHealth","environment",t),(0,u.assertParamExists)("getAppHealth","index",e);const l="/api/app/{environment}/{index}/health".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))),i=new URL(l,u.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},o),r);(0,u.setSearchParams)(i,{});let a=o&&o.headers?o.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),a),r.headers),{url:(0,u.toPathString)(i),options:s}}))}};t.AppApiFp=function(n){const e=(0,t.AppApiAxiosParamCreator)(n);return{getAppConfig(t,o,s){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getAppConfig(t,o,s);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getAppHealth(t,o,s){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getAppHealth(t,o,s);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))}}};t.AppApiFactory=function(n,e,l){const r=(0,t.AppApiFp)(n);return{getAppConfig:(n,t,u)=>r.getAppConfig(n,t,u).then((n=>n(l,e))),getAppHealth:(n,t,u)=>r.getAppHealth(n,t,u).then((n=>n(l,e)))}};class a extends i.BaseAPI{getAppConfig(n,e,l){return(0,t.AppApiFp)(this.configuration).getAppConfig(n,e,l).then((n=>n(this.axios,this.basePath)))}getAppHealth(n,e,l){return(0,t.AppApiFp)(this.configuration).getAppHealth(n,e,l).then((n=>n(this.axios,this.basePath)))}}t.AppApi=a;t.TransactionApiAxiosParamCreator=function(n){return{getLatestBlockhash:(t,e,r={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getLatestBlockhash","environment",t),(0,u.assertParamExists)("getLatestBlockhash","index",e);const l="/api/transaction/latest-blockhash/{environment}/{index}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))),i=new URL(l,u.DUMMY_BASE_URL);let o;n&&(o=n.baseOptions);const s=Object.assign(Object.assign({method:"GET"},o),r);(0,u.setSearchParams)(i,{});let a=o&&o.headers?o.headers:{};return s.headers=Object.assign(Object.assign(Object.assign({},{}),a),r.headers),{url:(0,u.toPathString)(i),options:s}})),getMinimumRentExemptionBalance:(t,e,r,i={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getMinimumRentExemptionBalance","environment",t),(0,u.assertParamExists)("getMinimumRentExemptionBalance","index",e),(0,u.assertParamExists)("getMinimumRentExemptionBalance","dataLength",r);const l="/api/transaction/minimum-rent-exemption-balance/{environment}/{index}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))),o=new URL(l,u.DUMMY_BASE_URL);let s;n&&(s=n.baseOptions);const a=Object.assign(Object.assign({method:"GET"},s),i),c={};void 0!==r&&(c.dataLength=r),(0,u.setSearchParams)(o,c);let h=s&&s.headers?s.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),h),i.headers),{url:(0,u.toPathString)(o),options:a}})),getTransaction:(t,e,r,i={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("getTransaction","environment",t),(0,u.assertParamExists)("getTransaction","index",e),(0,u.assertParamExists)("getTransaction","signature",r);const l="/api/transaction/transaction/{environment}/{index}/{signature}".replace("{environment}",encodeURIComponent(String(t))).replace("{index}",encodeURIComponent(String(e))).replace("{signature}",encodeURIComponent(String(r))),o=new URL(l,u.DUMMY_BASE_URL);let s;n&&(s=n.baseOptions);const a=Object.assign(Object.assign({method:"GET"},s),i);(0,u.setSearchParams)(o,{});let c=s&&s.headers?s.headers:{};return a.headers=Object.assign(Object.assign(Object.assign({},{}),c),i.headers),{url:(0,u.toPathString)(o),options:a}})),makeTransfer:(t,e={})=>l.__awaiter(this,void 0,void 0,(function*(){(0,u.assertParamExists)("makeTransfer","makeTransferRequest",t);const l=new URL("/api/transaction/make-transfer",u.DUMMY_BASE_URL);let r;n&&(r=n.baseOptions);const i=Object.assign(Object.assign({method:"POST"},r),e),o={};o["Content-Type"]="application/json",(0,u.setSearchParams)(l,{});let s=r&&r.headers?r.headers:{};return i.headers=Object.assign(Object.assign(Object.assign({},o),s),e.headers),i.data=(0,u.serializeDataIfNeeded)(t,i,n),{url:(0,u.toPathString)(l),options:i}}))}};t.TransactionApiFp=function(n){const e=(0,t.TransactionApiAxiosParamCreator)(n);return{getLatestBlockhash(t,o,s){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getLatestBlockhash(t,o,s);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getMinimumRentExemptionBalance(t,o,s,a){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getMinimumRentExemptionBalance(t,o,s,a);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},getTransaction(t,o,s,a){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.getTransaction(t,o,s,a);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))},makeTransfer(t,o){return l.__awaiter(this,void 0,void 0,(function*(){const l=yield e.makeTransfer(t,o);return(0,u.createRequestFunction)(l,r.default,i.BASE_PATH,n)}))}}};t.TransactionApiFactory=function(n,e,l){const r=(0,t.TransactionApiFp)(n);return{getLatestBlockhash:(n,t,u)=>r.getLatestBlockhash(n,t,u).then((n=>n(l,e))),getMinimumRentExemptionBalance:(n,t,u,i)=>r.getMinimumRentExemptionBalance(n,t,u,i).then((n=>n(l,e))),getTransaction:(n,t,u,i)=>r.getTransaction(n,t,u,i).then((n=>n(l,e))),makeTransfer:(n,t)=>r.makeTransfer(n,t).then((n=>n(l,e)))}};class c extends i.BaseAPI{getLatestBlockhash(n,e,l){return(0,t.TransactionApiFp)(this.configuration).getLatestBlockhash(n,e,l).then((n=>n(this.axios,this.basePath)))}getMinimumRentExemptionBalance(n,e,l,r){return(0,t.TransactionApiFp)(this.configuration).getMinimumRentExemptionBalance(n,e,l,r).then((n=>n(this.axios,this.basePath)))}getTransaction(n,e,l,r){return(0,t.TransactionApiFp)(this.configuration).getTransaction(n,e,l,r).then((n=>n(this.axios,this.basePath)))}makeTransfer(n,e){return(0,t.TransactionApiFp)(this.configuration).makeTransfer(n,e).then((n=>n(this.axios,this.basePath)))}}t.TransactionApi=c},61617:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RequiredError=t.BaseAPI=t.COLLECTION_FORMATS=t.BASE_PATH=void 0;const l=e(89644);t.BASE_PATH="http://localhost:3000".replace(/\/+$/,""),t.COLLECTION_FORMATS={csv:",",ssv:" ",tsv:"\t",pipes:"|"};t.BaseAPI=class{constructor(n,e=t.BASE_PATH,r=l.default){this.basePath=e,this.axios=r,n&&(this.configuration=n,this.basePath=n.basePath||this.basePath)}};class r extends Error{constructor(n,t){super(t),this.field=n,this.name="RequiredError"}}t.RequiredError=r},44340:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createRequestFunction=t.toPathString=t.serializeDataIfNeeded=t.setSearchParams=t.setOAuthToObject=t.setBearerAuthToObject=t.setBasicAuthToObject=t.setApiKeyToObject=t.assertParamExists=t.DUMMY_BASE_URL=void 0;const l=e(5163),r=e(61617);t.DUMMY_BASE_URL="https://example.com";t.assertParamExists=function(n,t,e){if(null==e)throw new r.RequiredError(t,`Required parameter ${t} was null or undefined when calling ${n}.`)};t.setApiKeyToObject=function(n,t,e){return l.__awaiter(this,void 0,void 0,(function*(){if(e&&e.apiKey){const l="function"==typeof e.apiKey?yield e.apiKey(t):yield e.apiKey;n[t]=l}}))};t.setBasicAuthToObject=function(n,t){t&&(t.username||t.password)&&(n.auth={username:t.username,password:t.password})};t.setBearerAuthToObject=function(n,t){return l.__awaiter(this,void 0,void 0,(function*(){if(t&&t.accessToken){const e="function"==typeof t.accessToken?yield t.accessToken():yield t.accessToken;n.Authorization="Bearer "+e}}))};function u(n,t,e=""){"object"==typeof t?Array.isArray(t)?t.forEach((t=>u(n,t,e))):Object.keys(t).forEach((l=>u(n,t[l],`${e}${""!==e?".":""}${l}`))):n.has(e)?n.append(e,t):n.set(e,t)}t.setOAuthToObject=function(n,t,e,r){return l.__awaiter(this,void 0,void 0,(function*(){if(r&&r.accessToken){const l="function"==typeof r.accessToken?yield r.accessToken(t,e):yield r.accessToken;n.Authorization="Bearer "+l}}))};t.setSearchParams=function(n,...t){const e=new URLSearchParams(n.search);u(e,t),n.search=e.toString()};t.serializeDataIfNeeded=function(n,t,e){const l="string"!=typeof n;return(l&&e&&e.isJsonMime?e.isJsonMime(t.headers["Content-Type"]):l)?JSON.stringify(void 0!==n?n:{}):n||""};t.toPathString=function(n){return n.pathname+n.search+n.hash};t.createRequestFunction=function(n,t,e,l){return(r=t,u=e)=>{const i=Object.assign(Object.assign({},n.options),{url:((null==l?void 0:l.basePath)||u)+n.url});return r.request(i)}}},86367:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Configuration=void 0;t.Configuration=class{constructor(n={}){this.apiKey=n.apiKey,this.username=n.username,this.password=n.password,this.accessToken=n.accessToken,this.basePath=n.basePath,this.baseOptions=n.baseOptions,this.formDataCtor=n.formDataCtor}isJsonMime(n){const t=new RegExp("^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$","i");return null!==n&&(t.test(n)||"application/json-patch+json"===n.toLowerCase())}}},77117:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(53773),t),l.__exportStar(e(86367),t)},48526:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(44851),t),l.__exportStar(e(65442),t),l.__exportStar(e(20143),t),l.__exportStar(e(31144),t)},35164:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSolanaRpcEndpoint=void 0,t.getSolanaRpcEndpoint=function(n){switch(n){case"devnet":return"devnet";case"mainnet":case"mainnet-beta":return"mainnet-beta";default:if(null==n?void 0:n.startsWith("http"))return n;throw new Error("Unknown http or https endpoint")}}},44851:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(35164),t),l.__exportStar(e(30581),t)},30581:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.kinToQuarks=t.quarksToKin=t.removeDecimals=t.addDecimals=void 0;const l=e(30586);var r=e(30586);Object.defineProperty(t,"addDecimals",{enumerable:!0,get:function(){return r.addDecimals}}),Object.defineProperty(t,"removeDecimals",{enumerable:!0,get:function(){return r.removeDecimals}}),t.quarksToKin=function(n){return(0,l.removeDecimals)(n,5)},t.kinToQuarks=function(n){return(0,l.addDecimals)(n,5)}},69054:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateKineticSdkConfig=void 0,t.validateKineticSdkConfig=function(n){if(!n.endpoint)throw new Error("validateKineticSdkConfig: no endpoint configured.");if(!n.endpoint.startsWith("http"))throw new Error("validateKineticSdkConfig: the endpoint should start with http or https.");if(!n.environment)throw new Error("validateKineticSdkConfig: no environment configured.");if(!n.index)throw new Error("validateKineticSdkConfig: no index configured.");if(!Number.isInteger(n.index))throw new Error("validateKineticSdkConfig: index should be an integer.");return Object.assign(Object.assign({},n),{endpoint:(t=n.endpoint,t.replace(/\/+$/,""))});var t}},76087:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},70451:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},26942:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},85222:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},52459:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},65442:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(76087),t),l.__exportStar(e(70451),t),l.__exportStar(e(26942),t),l.__exportStar(e(52459),t),l.__exportStar(e(65804),t),l.__exportStar(e(45418),t),l.__exportStar(e(34),t),l.__exportStar(e(25872),t),l.__exportStar(e(58530),t),l.__exportStar(e(14220),t),l.__exportStar(e(5606),t),l.__exportStar(e(85222),t)},34:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},25872:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},58530:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},65804:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},45418:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},14220:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},5606:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},46288:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.KineticSdkInternal=void 0;const l=e(5163),r=e(30586),u=e(33167),i=e(77117),o=e(31144);t.KineticSdkInternal=class{constructor(n){this.sdkConfig=n;const t=new i.Configuration({baseOptions:this.apiBaseOptions(this.sdkConfig.headers),basePath:n.endpoint});this.accountApi=new i.AccountApi(t),this.airdropApi=new i.AirdropApi(t),this.appApi=new i.AppApi(t),this.transactionApi=new i.TransactionApi(t)}createAccount(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){const e=this.ensureAppConfig(),l=this.getAppMint(e,null===(t=n.mint)||void 0===t?void 0:t.toString()),u=n.commitment||r.Commitment.Confirmed,{blockhash:i,lastValidBlockHeight:o}=yield this.getBlockhash(),s=yield(0,r.generateCreateAccountTransaction)({addMemo:l.addMemo,blockhash:i,index:this.sdkConfig.index,lastValidBlockHeight:o,mintFeePayer:l.feePayer,mintPublicKey:l.publicKey,owner:n.owner.solana}),a={commitment:u,environment:this.sdkConfig.environment,index:this.sdkConfig.index,lastValidBlockHeight:o,mint:l.publicKey,referenceId:n.referenceId,referenceType:n.referenceType,tx:(0,r.serializeTransaction)(s)};return this.accountApi.createAccount(a).then((n=>n.data))}))}getAppConfig(n,t){return l.__awaiter(this,void 0,void 0,(function*(){const e=yield this.appApi.getAppConfig(n,t);return this.appConfig=e.data,this.appConfig}))}getBalance(n){return l.__awaiter(this,void 0,void 0,(function*(){return this.accountApi.getBalance(this.sdkConfig.environment,this.sdkConfig.index,n.account.toString()).then((n=>n.data))}))}getHistory(n){var t;const e=this.ensureAppConfig(),l=this.getAppMint(e,null===(t=n.mint)||void 0===t?void 0:t.toString());return this.accountApi.getHistory(this.sdkConfig.environment,this.sdkConfig.index,n.account.toString(),l.publicKey).then((n=>n.data))}getTokenAccounts(n){var t;const e=this.ensureAppConfig(),l=this.getAppMint(e,null===(t=n.mint)||void 0===t?void 0:t.toString());return this.accountApi.getTokenAccounts(this.sdkConfig.environment,this.sdkConfig.index,n.account.toString(),l.publicKey).then((n=>n.data))}getTransaction(n){return this.transactionApi.getTransaction(this.sdkConfig.environment,this.sdkConfig.index,n.signature).then((n=>n.data))}makeTransfer(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){const e=this.ensureAppConfig(),l=this.getAppMint(e,null===(t=n.mint)||void 0===t?void 0:t.toString()),i=n.commitment||r.Commitment.Confirmed,o=n.destination.toString(),s=n.senderCreate||!1;this.validateDestination(e,o);const a=yield this.getTokenAccounts({account:o,mint:l.publicKey});if(!(null==a?void 0:a.length)&&!s)throw new Error("Destination account doesn't exist.");const{lastValidBlockHeight:c,blockhash:h}=yield this.getBlockhash(),d=yield(0,r.generateMakeTransferTransaction)({addMemo:l.addMemo,amount:n.amount,blockhash:h,destination:o,index:this.sdkConfig.index,lastValidBlockHeight:c,mintDecimals:l.decimals,mintFeePayer:l.feePayer,mintPublicKey:l.publicKey,owner:n.owner.solana,senderCreate:!(null==a?void 0:a.length)&&s,type:n.type||u.TransactionType.None});return this.makeTransferRequest({commitment:i,environment:this.sdkConfig.environment,index:this.sdkConfig.index,lastValidBlockHeight:c,mint:l.publicKey,referenceId:n.referenceId,referenceType:n.referenceType,tx:(0,r.serializeTransaction)(d)})}))}makeTransferBatch(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){const e=this.ensureAppConfig(),l=this.getAppMint(e,null===(t=n.mint)||void 0===t?void 0:t.toString()),i=n.commitment||r.Commitment.Confirmed,o=n.destinations,s=n.referenceId||null,a=n.referenceType||null;this.validateDestinations(e,o);const{blockhash:c,lastValidBlockHeight:h}=yield this.getBlockhash(),d=yield(0,r.generateMakeTransferBatchTransaction)({addMemo:l.addMemo,blockhash:c,destinations:o,index:this.sdkConfig.index,lastValidBlockHeight:h,mintDecimals:l.decimals,mintFeePayer:l.feePayer,mintPublicKey:l.publicKey,owner:n.owner.solana,type:n.type||u.TransactionType.None});return this.makeTransferRequest({commitment:i,environment:this.sdkConfig.environment,index:this.sdkConfig.index,lastValidBlockHeight:h,mint:l.publicKey,referenceId:s,referenceType:a,tx:(0,r.serializeTransaction)(d)})}))}requestAirdrop(n){var t,e;const l=this.ensureAppConfig(),u=this.getAppMint(l,null===(t=n.mint)||void 0===t?void 0:t.toString());return this.airdropApi.requestAirdrop({account:null===(e=n.account)||void 0===e?void 0:e.toString(),amount:n.amount,commitment:n.commitment||r.Commitment.Finalized,environment:this.sdkConfig.environment,index:this.sdkConfig.index,mint:u.publicKey}).then((n=>n.data))}apiBaseOptions(n={}){return{headers:Object.assign(Object.assign({},n),{"kinetic-environment":`${this.sdkConfig.environment}`,"kinetic-index":`${this.sdkConfig.index}`,"kinetic-user-agent":`${o.NAME}@${o.VERSION}`})}}ensureAppConfig(){if(!this.appConfig)throw new Error("AppConfig not initialized");return this.appConfig}getAppMint(n,t){t=t||n.mint.publicKey;const e=n.mints.find((n=>n.publicKey===t));if(!e)throw new Error("Mint not found");return e}getBlockhash(){return l.__awaiter(this,void 0,void 0,(function*(){const{blockhash:n,lastValidBlockHeight:t}=yield this.transactionApi.getLatestBlockhash(this.sdkConfig.environment,this.sdkConfig.index).then((n=>n.data));return{blockhash:n,lastValidBlockHeight:t}}))}makeTransferRequest(n){return this.transactionApi.makeTransfer(n).then((n=>n.data))}validateDestination(n,t){if(n.mints.find((n=>n.publicKey===t)))throw new Error("Transfers to a mint are not allowed.")}validateDestinations(n,t){if((null==t?void 0:t.length)<1)throw new Error("At least 1 destination required");if((null==t?void 0:t.length)>15)throw new Error("Maximum number of destinations exceeded");t.forEach((t=>{var e;return this.validateDestination(n,null===(e=t.destination)||void 0===e?void 0:e.toString())}))}}},78242:(n,t,e)=>{"undefined"!=typeof window&&void 0===window.global&&"undefined"==typeof Buffer&&(window.global=window,global.Buffer=e(48834).Buffer)},20143:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.KineticSdk=void 0;const l=e(5163),r=e(30586),u=e(31144),i=e(44851),o=e(69054),s=e(46288);e(78242);class a{constructor(n){this.sdkConfig=n,this.internal=new s.KineticSdkInternal(n)}get config(){return this.internal.appConfig}get endpoint(){return this.sdkConfig.endpoint}get solanaRpcEndpoint(){return this.sdkConfig.solanaRpcEndpoint}createAccount(n){return this.internal.createAccount(n)}getBalance(n){return this.internal.getBalance(n)}getExplorerUrl(n){var t,e,l,r;return null===(r=null===(l=null===(e=null===(t=this.internal)||void 0===t?void 0:t.appConfig)||void 0===e?void 0:e.environment)||void 0===l?void 0:l.explorer)||void 0===r?void 0:r.replace("{path}",n)}getHistory(n){return this.internal.getHistory(n)}getTokenAccounts(n){return this.internal.getTokenAccounts(n)}getTransaction(n){return this.internal.getTransaction(n)}makeTransfer(n){return this.internal.makeTransfer(n)}makeTransferBatch(n){return this.internal.makeTransferBatch(n)}requestAirdrop(n){return this.internal.requestAirdrop(n)}init(){var n,t,e,o,s,a,c;return l.__awaiter(this,void 0,void 0,(function*(){try{null===(t=null===(n=this.sdkConfig)||void 0===n?void 0:n.logger)||void 0===t||t.log(`${u.NAME}: initializing ${u.NAME}@${u.VERSION}`);const l=yield this.internal.getAppConfig(this.sdkConfig.environment,this.sdkConfig.index);return this.sdkConfig.solanaRpcEndpoint=this.sdkConfig.solanaRpcEndpoint?(0,i.getSolanaRpcEndpoint)(this.sdkConfig.solanaRpcEndpoint):(0,i.getSolanaRpcEndpoint)(l.environment.cluster.endpoint),this.solana=new r.Solana(this.sdkConfig.solanaRpcEndpoint,{logger:null===(e=this.sdkConfig)||void 0===e?void 0:e.logger}),null===(s=null===(o=this.sdkConfig)||void 0===o?void 0:o.logger)||void 0===s||s.log(`${u.NAME}: endpoint '${this.sdkConfig.endpoint}', environment '${this.sdkConfig.environment}', index: ${l.app.index}`),l}catch(l){throw null===(c=null===(a=this.sdkConfig)||void 0===a?void 0:a.logger)||void 0===c||c.error("Error initializing Server."),new Error("Error initializing Server.")}}))}static setup(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){const e=new a((0,o.validateKineticSdkConfig)(n));try{return yield e.init().then((()=>{var t;return null===(t=n.logger)||void 0===t?void 0:t.log(`${u.NAME}: Setup done.`)})),e}catch(l){throw null===(t=n.logger)||void 0===t||t.error(`${u.NAME}: Error setting up SDK.`,l),new Error(`${u.NAME}: Error setting up SDK.`)}}))}}t.KineticSdk=a},31144:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VERSION=t.NAME=void 0,t.NAME="@kin-kinetic/sdk",t.VERSION="1.0.0-rc.2"},30586:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(51479),t),l.__exportStar(e(80160),t),l.__exportStar(e(99302),t),l.__exportStar(e(66565),t)},2064:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeDecimals=t.addDecimals=void 0;const l=e(6391);t.addDecimals=function(n,t){return new l.default(n).decimalPlaces(t,l.default.ROUND_DOWN).multipliedBy(Math.pow(10,t))},t.removeDecimals=function(n,t){return new l.default(n).dividedBy(Math.pow(10,t)).toString()}},28970:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertCommitment=void 0;const l=e(99302);t.convertCommitment=function(n){switch(n){case l.Commitment.Confirmed:return"confirmed";case l.Commitment.Finalized:return"finalized";case l.Commitment.Processed:return"processed";default:return"finalized"}}},51373:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateCreateAccountTransaction=void 0;const l=e(5163),r=e(33167),u=e(6974),i=e(52828),o=e(27158),s=e(12116);t.generateCreateAccountTransaction=function({addMemo:n,blockhash:t,index:e,lastValidBlockHeight:a,mintFeePayer:c,mintPublicKey:h,owner:d}){return l.__awaiter(this,void 0,void 0,(function*(){const l=(0,s.getPublicKey)(h),f=(0,s.getPublicKey)(c),p=d.publicKey,g=yield(0,i.getAssociatedTokenAddress)(l,p),y=[];n&&y.push((0,u.generateKinMemoInstruction)({appIndex:e,type:r.TransactionType.None})),y.push((0,i.createAssociatedTokenAccountInstruction)(f,g,p,l),(0,i.createSetAuthorityInstruction)(g,p,i.AuthorityType.CloseAccount,f));const m=new o.Transaction({blockhash:t,feePayer:(0,s.getPublicKey)(c),lastValidBlockHeight:a,signatures:[{publicKey:p,signature:null}]}).add(...y);return m.partialSign(d),m}))}},92154:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateMakeTransferBatchTransaction=void 0;const l=e(5163),r=e(6974),u=e(52828),i=e(27158),o=e(2064),s=e(12116);t.generateMakeTransferBatchTransaction=function({addMemo:n,blockhash:t,destinations:e,index:a,lastValidBlockHeight:c,mintDecimals:h,mintFeePayer:d,mintPublicKey:f,owner:p,type:g}){return l.__awaiter(this,void 0,void 0,(function*(){const y=(0,s.getPublicKey)(f),m=(0,s.getPublicKey)(d),b=p.publicKey,w=yield(0,u.getAssociatedTokenAddress)(y,b),v=yield Promise.all(e.map((({amount:n,destination:t})=>l.__awaiter(this,void 0,void 0,(function*(){return{amount:(0,o.addDecimals)(n,h).toNumber(),destination:yield(0,u.getAssociatedTokenAddress)(y,(0,s.getPublicKey)(t))}}))))),k=[];n&&k.push((0,r.generateKinMemoInstruction)({appIndex:a,type:g})),v.map((({amount:n,destination:t})=>k.push((0,u.createTransferCheckedInstruction)(w,y,t,b,n,h,[],u.TOKEN_PROGRAM_ID))));const I=new i.Transaction({blockhash:t,feePayer:m,lastValidBlockHeight:c,signatures:[{publicKey:b,signature:null}]}).add(...k);return I.partialSign(p),I}))}},52981:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateMakeTransferTransaction=void 0;const l=e(5163),r=e(6974),u=e(52828),i=e(27158),o=e(2064),s=e(12116);t.generateMakeTransferTransaction=function({addMemo:n,amount:t,blockhash:e,destination:a,index:c,lastValidBlockHeight:h,mintDecimals:d,mintFeePayer:f,mintPublicKey:p,owner:g,senderCreate:y,type:m}){return l.__awaiter(this,void 0,void 0,(function*(){const l=(0,s.getPublicKey)(p),b=(0,s.getPublicKey)(f),w=g.publicKey,[v,k]=yield Promise.all([(0,u.getAssociatedTokenAddress)(l,w),(0,u.getAssociatedTokenAddress)(l,(0,s.getPublicKey)(a))]),I=[];n&&I.push((0,r.generateKinMemoInstruction)({appIndex:c,type:m})),y&&I.push((0,u.createAssociatedTokenAccountInstruction)(b,k,(0,s.getPublicKey)(a),l)),I.push((0,u.createTransferCheckedInstruction)(v,l,k,w,(0,o.addDecimals)(t,d).toNumber(),d,[],u.TOKEN_PROGRAM_ID));const A=new i.Transaction({blockhash:e,feePayer:b,lastValidBlockHeight:h,signatures:[{publicKey:w,signature:null}]}).add(...I);return A.partialSign(g),A}))}},12116:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getPublicKey=void 0;const l=e(27158);t.getPublicKey=function(n){return"string"==typeof n?new l.PublicKey(n):n}},51479:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(2064),t),l.__exportStar(e(28970),t),l.__exportStar(e(51373),t),l.__exportStar(e(92154),t),l.__exportStar(e(52981),t),l.__exportStar(e(12116),t),l.__exportStar(e(44018),t),l.__exportStar(e(96345),t),l.__exportStar(e(3197),t),l.__exportStar(e(21406),t),l.__exportStar(e(60067),t),l.__exportStar(e(68277),t)},44018:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseAndSignTokenTransfer=void 0;const l=e(52828),r=e(96345);t.parseAndSignTokenTransfer=function({tx:n,signer:t}){const{blockhash:e,feePayer:u,source:i,transaction:o}=(0,r.parseAndSignTransaction)({tx:n,signer:t}),s=o.instructions.find((n=>{var t;return(null===(t=null==n?void 0:n.programId)||void 0===t?void 0:t.toBase58())===(null===l.TOKEN_PROGRAM_ID||void 0===l.TOKEN_PROGRAM_ID?void 0:l.TOKEN_PROGRAM_ID.toBase58())}));if(!s)throw new Error("parseAndSignTokenTransfer: Can't find token transfer instruction");const{data:{amount:a},keys:{destination:c}}=(0,l.decodeTransferCheckedInstruction)(s,l.TOKEN_PROGRAM_ID);return{amount:Number(a),blockhash:e,destination:c,feePayer:u,source:i,transaction:o}}},96345:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseAndSignTransaction=void 0;const l=e(27158);t.parseAndSignTransaction=function({tx:n,signer:t}){var e,r,u;const i=l.Transaction.from(Buffer.from(n));i.partialSign(t);const o=null===(e=null==i?void 0:i.feePayer)||void 0===e?void 0:e.toBase58();if(!o)throw new Error("parseAndSignTransaction: Can't find token feePayer");if(!i.recentBlockhash)throw new Error("parseAndSignTransaction: Can't find recentBlockhash");const s=null===(u=null===(r=i.signatures.find((n=>n.publicKey.toBase58()!==o)))||void 0===r?void 0:r.publicKey)||void 0===u?void 0:u.toBase58();if(!s)throw new Error("parseAndSignTransaction: Can't find transaction source");return{feePayer:o,blockhash:i.recentBlockhash.toString(),source:s,transaction:i}}},3197:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseEndpoint=void 0;const l=e(27158);t.parseEndpoint=function(n){return(null==n?void 0:n.startsWith("http"))?n:(0,l.clusterApiUrl)(n)}},21406:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransactionSimulation=void 0;const l=e(68277);function r(n){switch(n){case 0:return{type:"CUSTOM_ZERO",message:"Account already exists."};case 1:return{type:"InsufficientFunds",message:"Insufficient funds."};case"InvalidAccountData":return{type:"InvalidAccountData",message:"Insufficient funds."};default:return{type:"Unknown",message:"Unknown error."}}}t.parseTransactionSimulation=function(n){const t=n.logs?n.logs:void 0;if((null==n?void 0:n.err)&&"object"==typeof n.err&&"InstructionError"in n.err){const e=n.err,[u,i]=e.InstructionError,{Custom:o}=i,s=r(void 0!==o?o:i);throw new l.TransactionError(s.message,t,s.type,u)}return n}},60067:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.serializeTransaction=void 0,t.serializeTransaction=function(n){return n.serialize({requireAllSignatures:!1,verifySignatures:!1}).toString("base64")}},68277:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TransactionError=void 0;const l=e(27158);class r extends l.SendTransactionError{constructor(n,t,e,l){super(n,t),this.logs=t,this.type=e,this.instruction=l}}t.TransactionError=r},34279:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},72254:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},93959:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},49625:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Commitment=void 0,function(n){n.Confirmed="Confirmed",n.Finalized="Finalized",n.Processed="Processed"}(t.Commitment||(t.Commitment={}))},33423:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},42141:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},28424:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},41502:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},99302:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(34279),t),l.__exportStar(e(72254),t),l.__exportStar(e(93959),t),l.__exportStar(e(49625),t),l.__exportStar(e(33423),t),l.__exportStar(e(42141),t),l.__exportStar(e(28424),t),l.__exportStar(e(41502),t),l.__exportStar(e(56729),t),l.__exportStar(e(70810),t),l.__exportStar(e(7830),t),l.__exportStar(e(21332),t)},56729:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},70810:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},7830:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},21332:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},80160:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Solana=void 0;const l=e(5163),r=e(27158),u=e(89644),i=e(6391),o=e(66565),s=e(51479),a=e(99302);t.Solana=class{constructor(n,t={}){var e;this.config=t,this.endpoint=(0,s.parseEndpoint)(n),this.connection=new r.Connection(this.endpoint),null===(e=t.logger)||void 0===e||e.log(`${o.NAME}: Solana RPC Endpoint: ${this.endpoint}`)}confirmTransaction({blockhash:n,lastValidBlockHeight:t,signature:e},l){return this.connection.confirmTransaction({blockhash:n,lastValidBlockHeight:t,signature:e},(0,s.convertCommitment)(l))}getAccountHistory(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){null===(t=this.config.logger)||void 0===t||t.log(`Getting account history: ${(0,s.getPublicKey)(n)}`);try{const t=yield this.connection.getConfirmedSignaturesForAddress2((0,s.getPublicKey)(n));return{account:n,history:t}}catch(e){return console.log(e),e}}))}getAccountInfo(n,{commitment:t=a.Commitment.Confirmed}){var e;return null===(e=this.config.logger)||void 0===e||e.log(`Getting account info: ${n}`),this.connection.getParsedAccountInfo(new r.PublicKey(n),(0,s.convertCommitment)(t))}getBalance(n,t){var e;return l.__awaiter(this,void 0,void 0,(function*(){if(t=Array.isArray(t)?t:[t],null===(e=this.config.logger)||void 0===e||e.log(`Getting account balance summary: ${n} for mints ${t.join(", ")}`),!t.length)throw new Error("getBalance: No mints provided.");const l=t[0];try{const e=[],r=(yield Promise.allSettled(t.map((t=>this.getTokenAccounts(n,t).then((n=>({mint:t,accounts:n}))))))).filter((n=>"fulfilled"===n.status)).map((n=>n.value)),u=t.reduce(((n,t)=>{var e;return Object.assign(Object.assign({},n),{[t]:(null===(e=r.find((n=>n.mint===t)))||void 0===e?void 0:e.accounts)||[]})}),{});for(const{mint:n,accounts:t}of r)for(const l of t){const{balance:t}=yield this.getTokenBalance(l);e.push({account:l,mint:n,balance:t})}const o=e.reduce(((n,{mint:t,balance:e})=>{const l=n[t]?n[t]:new i.default(0);return Object.assign(Object.assign({},n),{[t]:l.plus(e)})}),{});return{balance:o[l]?o[l]:new i.default(0),mintMap:u,mints:o,tokens:e}}catch(r){throw new Error("No token accounts found for "+(t.length>1?`mints ${t.join(", ")}`:`mint ${l}`))}}))}getBalanceSol(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){return null===(t=this.config.logger)||void 0===t||t.log(`Getting account balance: ${n} (SOL)`),this.connection.getBalance((0,s.getPublicKey)(n))}))}getMinimumBalanceForRentExemption(n){var t;return null===(t=this.config.logger)||void 0===t||t.log(`Getting minimum balance for rent exemption: ${n}`),this.connection.getMinimumBalanceForRentExemption(n)}getLatestBlockhash(){var n;return null===(n=this.config.logger)||void 0===n||n.log("Getting latest blockhash"),this.connection.getLatestBlockhash()}getTokenAccounts(n,t){var e;return l.__awaiter(this,void 0,void 0,(function*(){null===(e=this.config.logger)||void 0===e||e.log(`Getting token account: ${(0,s.getPublicKey)(n)} / mint: ${(0,s.getPublicKey)(t)}`);return(yield this.connection.getTokenAccountsByOwner((0,s.getPublicKey)(n),{mint:(0,s.getPublicKey)(t)})).value.map((({pubkey:n})=>n.toBase58()))}))}getTokenAccountsHistory(n){var t;return null===(t=this.config.logger)||void 0===t||t.log(`Getting token accounts history: ${n}`),Promise.all(n.map((n=>this.getAccountHistory(n))))}getTokenBalance(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){null===(t=this.config.logger)||void 0===t||t.log(`Getting token balance: ${(0,s.getPublicKey)(n)}`);const e=yield this.connection.getTokenAccountBalance((0,s.getPublicKey)(n));return{account:n,balance:new i.default(e.value.amount)}}))}getTokenBalances(n,t){var e;return l.__awaiter(this,void 0,void 0,(function*(){null===(e=this.config.logger)||void 0===e||e.log(`Getting token balances: ${(0,s.getPublicKey)(n)}`);const r=yield this.getTokenAccounts(n,t);return Promise.all(r.map((n=>l.__awaiter(this,void 0,void 0,(function*(){return this.getTokenBalance(n)})))))}))}getTokenHistory(n,t){var e;return l.__awaiter(this,void 0,void 0,(function*(){return null===(e=this.config.logger)||void 0===e||e.log(`Getting token history: ${(0,s.getPublicKey)(n)} / ${(0,s.getPublicKey)(t)} `),this.getTokenAccounts(n,t).then((n=>this.getTokenAccountsHistory(n)))}))}getTransaction(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){null===(t=this.config.logger)||void 0===t||t.log(`Getting transaction: ${n} `);const e=yield this.connection.getSignatureStatus(n,{searchTransactionHistory:!0}),l=yield this.connection.getTransaction(n);return{signature:n,status:e,transaction:l}}))}requestAirdrop(n,t){var e;return null===(e=this.config.logger)||void 0===e||e.log(`Request Airdrop: ${(0,s.getPublicKey)(n)} ${t}`),this.connection.requestAirdrop((0,s.getPublicKey)(n),t)}sendRawTransaction(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){return yield this.simulateTransaction(n),null===(t=this.config.logger)||void 0===t||t.log("Send Raw Transaction"),this.connection.sendRawTransaction(n.serialize())}))}simulateTransaction(n){var t;return l.__awaiter(this,void 0,void 0,(function*(){null===(t=this.config.logger)||void 0===t||t.log("Simulate Transaction");const e=yield this.connection.simulateTransaction(n);return(0,s.parseTransactionSimulation)(e.value)}))}healthCheck(){var n;return l.__awaiter(this,void 0,void 0,(function*(){null===(n=this.config.logger)||void 0===n||n.log("Health check");return"ok"===(yield u.default.get(`${this.endpoint}/health`)).data.toString()}))}getRecentPerformanceSamples(n){return this.connection.getRecentPerformanceSamples(n)}}},66565:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VERSION=t.NAME=void 0,t.NAME="@kin-kinetic/solana",t.VERSION="1.0.0-rc.2"},33167:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(65662),t),l.__exportStar(e(8062),t),l.__exportStar(e(14351),t),l.__exportStar(e(81426),t)},65662:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createKinMemo=void 0;const l=e(8062),r=e(81426);t.createKinMemo=function({appIndex:n,memo:t,type:e=r.TransactionType.None}){let u=Buffer.alloc(29);return t&&(u=Buffer.from(t,"base64")),l.KinMemo.new(1,e,n,u).buffer.toString("base64")}},14351:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_VERSION=t.MAX_APP_INDEX=t.MAX_TRANSACTION_TYPE=t.MAGIC_BYTE=void 0,t.MAGIC_BYTE=1,t.MAX_TRANSACTION_TYPE=3,t.MAX_APP_INDEX=Math.pow(2,16)-1,t.MAX_VERSION=1},8062:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.KinMemo=void 0;const l=e(14351),r=e(81426);class u{constructor(n){this.buffer=n}static from(n){const t=Buffer.alloc(n.length);return n.copy(t),new this(t)}static fromB64String(n,t=!0){const e=Buffer.from(n,"base64"),l=u.from(e);if(!u.isValid(l,t))throw new Error("invalid memo");return l}static new(n,t,e,r){if(r.length>29)throw new Error("invalid foreign key length");if(n>7)throw new Error("invalid version");if(t<0)throw new Error("cannot use unknown transaction type");const u=Buffer.alloc(32);if(u[0]=l.MAGIC_BYTE,u[0]|=n<<2,u[0]|=(7&t)<<5,u[1]=(24&t)>>3,u[1]|=(63&e)<<2,u[2]=(16320&e)>>6,u[3]=(49152&e)>>14,r.byteLength>0){u[3]|=(63&r[0])<<2;for(let n=4;n<3+r.byteLength;n++)u[n]=r[n-4]>>6&3,u[n]|=(63&r[n-3])<<2;r.byteLength<29&&(u[r.byteLength+3]=r[r.byteLength-1]>>6&3)}return new this(u)}static isValid(n,t){return Number(3&n.buffer[0])==l.MAGIC_BYTE&&(-1!=n.transactionTypeRaw()&&(!t||!(n.version()>l.MAX_VERSION)&&(n.transactionType()>=0&&n.transactionType()<=l.MAX_TRANSACTION_TYPE)))}version(){return(28&this.buffer[0])>>2}transactionType(){const n=this.transactionTypeRaw();return n>=0&&n<=l.MAX_TRANSACTION_TYPE?n:r.TransactionType.Unknown}transactionTypeRaw(){return this.buffer[0]>>5|(3&this.buffer[1])<<3}appIndex(){return Number(this.buffer[1])>>2|Number(this.buffer[2])<<6|Number(3&this.buffer[3])<<14}foreignKey(){const n=Buffer.alloc(29);for(let t=0;t<28;t++)n[t]|=this.buffer[t+3]>>2,n[t]|=(3&this.buffer[t+4])<<6;return n[28]=this.buffer[31]>>2,n}}t.KinMemo=u},81426:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TransactionType=void 0,function(n){n[n.Unknown=-1]="Unknown",n[n.None=0]="None",n[n.Earn=1]="Earn",n[n.Spend=2]="Spend",n[n.P2P=3]="P2P"}(t.TransactionType||(t.TransactionType={}))},6974:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TransactionType=void 0;const l=e(5163);l.__exportStar(e(65789),t),l.__exportStar(e(86863),t),l.__exportStar(e(35054),t),l.__exportStar(e(67923),t),l.__exportStar(e(52545),t),l.__exportStar(e(69339),t),l.__exportStar(e(71434),t),l.__exportStar(e(92997),t);var r=e(33167);Object.defineProperty(t,"TransactionType",{enumerable:!0,get:function(){return r.TransactionType}})},65789:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MEMO_V1_TOKEN_ID=t.KIN_MINT_MAINNET=void 0,t.KIN_MINT_MAINNET="kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6",t.MEMO_V1_TOKEN_ID="Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo"},53898:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateKinMemoInstruction=void 0;const l=e(33167),r=e(50086);t.generateKinMemoInstruction=function({appIndex:n,type:t}){const e=(0,l.createKinMemo)({appIndex:n,type:t});return(0,r.generateMemoInstruction)({memoContent:e})}},50086:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateMemoInstruction=void 0;const l=e(27158),r=e(65789);t.generateMemoInstruction=function({memoContent:n}){return new l.TransactionInstruction({keys:[],programId:new l.PublicKey(r.MEMO_V1_TOKEN_ID),data:Buffer.from(n)})}},3017:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getPublicKey=void 0;const l=e(27158);t.getPublicKey=function(n){return"string"==typeof n?new l.PublicKey(n):n}},86863:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(50086),t),l.__exportStar(e(53898),t),l.__exportStar(e(3017),t),l.__exportStar(e(98275),t)},98275:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.kinToQuarks=void 0;const l=e(6391);t.kinToQuarks=function(n){return new l.default(n).decimalPlaces(5,l.default.ROUND_DOWN).multipliedBy(1e5)}},99479:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},35613:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},13360:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},70778:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},35054:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const l=e(5163);l.__exportStar(e(99479),t),l.__exportStar(e(35613),t),l.__exportStar(e(13360),t),l.__exportStar(e(70778),t),l.__exportStar(e(34257),t)},34257:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},67923:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},52545:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateKreTransactionInstructions=void 0;const l=e(5163),r=e(33167),u=e(52828),i=e(86863);t.generateKreTransactionInstructions=function({amount:n,appIndex:t,from:e,fromTokenAccount:o,toTokenAccount:s,type:a=r.TransactionType.None}){return l.__awaiter(this,void 0,void 0,(function*(){const r=(0,i.generateKinMemoInstruction)({appIndex:t,type:a}),c=yield function({amount:n,from:t,fromTokenAccount:e,toTokenAccount:r}){return l.__awaiter(this,void 0,void 0,(function*(){const l=(0,i.kinToQuarks)(n);return(0,u.createTransferInstruction)((0,i.getPublicKey)(e),(0,i.getPublicKey)(r),(0,i.getPublicKey)(t),Number(l),[],u.TOKEN_PROGRAM_ID)}))}({amount:n,from:e,fromTokenAccount:o,toTokenAccount:s});return[r,c]}))}},69339:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},71434:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseKinTransaction=t.getMintAddress=void 0;const l=e(33167),r=e(65789);function u(n){var t,e,l;return null===(l=null===(e=null===(t=null==n?void 0:n.meta)||void 0===t?void 0:t.postTokenBalances)||void 0===e?void 0:e.find((n=>n.mint)))||void 0===l?void 0:l.mint}t.getMintAddress=u,t.parseKinTransaction=function(n){var t,e;const i=u(n),o=null===(e=null===(t=null==n?void 0:n.transaction)||void 0===t?void 0:t.message)||void 0===e?void 0:e.instructions,s=o.find((n=>{var t;return"system"===n.program&&"transfer"===(null===(t=n.parsed)||void 0===t?void 0:t.type)})),a=o.find((n=>"spl-token"===n.program)),c=o.filter((n=>"spl-memo"===n.program)),h=c.find((n=>{var t;return(null===(t=n.programId)||void 0===t?void 0:t.toString())===r.MEMO_V1_TOKEN_ID})),d=(null==h?void 0:h.parsed)?l.KinMemo.fromB64String(h.parsed):void 0;return{tx:n,mint:i,memo:h,memoCount:null==c?void 0:c.length,memoParsed:d,solTransfer:s,tokenTransfer:a}}},92997:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateKinTransaction=void 0;const l=e(65789);t.validateKinTransaction=function(n,t=l.KIN_MINT_MAINNET){var e;const r=!!n.solTransfer,u=!!n.tokenTransfer;return{mint:n.mint&&n.mint===t,memo:n.memo&&n.memoParsed&&1===(null===(e=n.memoParsed)||void 0===e?void 0:e.version()),isSolTransfer:r,isTokenTransfer:u}}},59696:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.utils=t.curve25519=t.getSharedSecret=t.sync=t.verify=t.sign=t.getPublicKey=t.Signature=t.Point=t.RistrettoPoint=t.ExtendedPoint=t.CURVE=void 0;const l=e(10868),r=BigInt(0),u=BigInt(1),i=BigInt(2),o=BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),s=Object.freeze({a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),l:o,n:o,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")});t.CURVE=s;const a=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000"),c=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),h=(BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742"),BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235")),d=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),f=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),p=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");class g{constructor(n,t,e,l){this.x=n,this.y=t,this.z=e,this.t=l}static fromAffine(n){if(!(n instanceof k))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return n.equals(k.ZERO)?g.ZERO:new g(n.x,n.y,u,M(n.x*n.y))}static toAffineBatch(n){const t=function(n,t=s.P){const e=new Array(n.length),l=C(n.reduce(((n,l,u)=>l===r?n:(e[u]=n,M(n*l,t))),u),t);return n.reduceRight(((n,l,u)=>l===r?n:(e[u]=M(n*e[u],t),M(n*l,t))),l),e}(n.map((n=>n.z)));return n.map(((n,e)=>n.toAffine(t[e])))}static normalizeZ(n){return this.toAffineBatch(n).map(this.fromAffine)}equals(n){y(n);const{x:t,y:e,z:l}=this,{x:r,y:u,z:i}=n,o=M(t*i),s=M(r*l),a=M(e*i),c=M(u*l);return o===s&&a===c}negate(){return new g(M(-this.x),this.y,this.z,M(-this.t))}double(){const{x:n,y:t,z:e}=this,{a:l}=s,r=M(n*n),u=M(t*t),o=M(i*M(e*e)),a=M(l*r),c=n+t,h=M(M(c*c)-r-u),d=a+u,f=d-o,p=a-u,y=M(h*f),m=M(d*p),b=M(h*p),w=M(f*d);return new g(y,m,w,b)}add(n){y(n);const{x:t,y:e,z:l,t:u}=this,{x:o,y:s,z:a,t:c}=n,h=M((e-t)*(s+o)),d=M((e+t)*(s-o)),f=M(d-h);if(f===r)return this.double();const p=M(l*i*c),m=M(u*i*a),b=m+p,w=d+h,v=m-p,k=M(b*f),I=M(w*v),A=M(b*v),_=M(f*w);return new g(k,I,_,A)}subtract(n){return this.add(n.negate())}precomputeWindow(n){const t=1+256/n,e=[];let l=this,r=l;for(let u=0;u<t;u++){r=l,e.push(r);for(let t=1;t<2**(n-1);t++)r=r.add(l),e.push(r);l=r.double()}return e}wNAF(n,t){!t&&this.equals(g.BASE)&&(t=k.BASE);const e=t&&t._WINDOW_SIZE||1;if(256%e)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let l=t&&v.get(t);l||(l=this.precomputeWindow(e),t&&1!==e&&(l=g.normalizeZ(l),v.set(t,l)));let r=g.ZERO,i=g.ZERO;const o=1+256/e,s=2**(e-1),a=BigInt(2**e-1),c=2**e,h=BigInt(e);for(let d=0;d<o;d++){const t=d*s;let e=Number(n&a);if(n>>=h,e>s&&(e-=c,n+=u),0===e){let n=l[t];d%2&&(n=n.negate()),i=i.add(n)}else{let n=l[t+Math.abs(e)-1];e<0&&(n=n.negate()),r=r.add(n)}}return g.normalizeZ([r,i])[0]}multiply(n,t){return this.wNAF(W(n,s.l),t)}multiplyUnsafe(n){let t=W(n,s.l,!1);const e=g.BASE,l=g.ZERO;if(t===r)return l;if(this.equals(l)||t===u)return this;if(this.equals(e))return this.wNAF(t);let i=l,o=this;for(;t>r;)t&u&&(i=i.add(o)),o=o.double(),t>>=u;return i}isSmallOrder(){return this.multiplyUnsafe(s.h).equals(g.ZERO)}isTorsionFree(){return this.multiplyUnsafe(s.l).equals(g.ZERO)}toAffine(n=C(this.z)){const{x:t,y:e,z:l}=this,r=M(t*n),i=M(e*n);if(M(l*n)!==u)throw new Error("invZ was invalid");return new k(r,i)}fromRistrettoBytes(){b()}toRistrettoBytes(){b()}fromRistrettoHash(){b()}}function y(n){if(!(n instanceof g))throw new TypeError("ExtendedPoint expected")}function m(n){if(!(n instanceof w))throw new TypeError("RistrettoPoint expected")}function b(){throw new Error("Legacy method: switch to RistrettoPoint")}t.ExtendedPoint=g,g.BASE=new g(s.Gx,s.Gy,u,M(s.Gx*s.Gy)),g.ZERO=new g(r,u,u,r);class w{constructor(n){this.ep=n}static calcElligatorRistrettoMap(n){const{d:t}=s,e=M(c*n*n),l=M((e+u)*f);let r=BigInt(-1);const i=M((r-t*e)*M(e+t));let{isValid:o,value:a}=N(l,i),d=M(a*n);B(d)||(d=M(-d)),o||(a=d),o||(r=e);const y=M(r*(e-u)*p-i),m=a*a,b=M((a+a)*i),w=M(y*h),v=M(u-m),k=M(u+m);return new g(M(b*k),M(v*w),M(w*k),M(b*v))}static hashToCurve(n){const t=O((n=D(n,64)).slice(0,32)),e=this.calcElligatorRistrettoMap(t),l=O(n.slice(32,64)),r=this.calcElligatorRistrettoMap(l);return new w(e.add(r))}static fromHex(n){n=D(n,32);const{a:t,d:e}=s,l="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",i=O(n);if(!function(n,t){if(n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}(x(i),n)||B(i))throw new Error(l);const o=M(i*i),a=M(u+t*o),c=M(u-t*o),h=M(a*a),d=M(c*c),f=M(t*e*h-d),{isValid:p,value:y}=z(M(f*d)),m=M(y*c),b=M(y*m*f);let v=M((i+i)*m);B(v)&&(v=M(-v));const k=M(a*b),I=M(v*k);if(!p||B(I)||k===r)throw new Error(l);return new w(new g(v,k,u,I))}toRawBytes(){let{x:n,y:t,z:e,t:l}=this.ep;const r=M(M(e+t)*M(e-t)),u=M(n*t),i=M(u*u),{value:o}=z(M(r*i)),s=M(o*r),a=M(o*u),h=M(s*a*l);let f;if(B(l*h)){let e=M(t*c),l=M(n*c);n=e,t=l,f=M(s*d)}else f=a;B(n*h)&&(t=M(-t));let p=M((e-t)*f);return B(p)&&(p=M(-p)),x(p)}toHex(){return E(this.toRawBytes())}toString(){return this.toHex()}equals(n){m(n);const t=this.ep,e=n.ep,l=M(t.x*e.y)===M(t.y*e.x),r=M(t.y*e.y)===M(t.x*e.x);return l||r}add(n){return m(n),new w(this.ep.add(n.ep))}subtract(n){return m(n),new w(this.ep.subtract(n.ep))}multiply(n){return new w(this.ep.multiply(n))}multiplyUnsafe(n){return new w(this.ep.multiplyUnsafe(n))}}t.RistrettoPoint=w,w.BASE=new w(g.BASE),w.ZERO=new w(g.ZERO);const v=new WeakMap;class k{constructor(n,t){this.x=n,this.y=t}_setWindowSize(n){this._WINDOW_SIZE=n,v.delete(this)}static fromHex(n,t=!0){const{d:e,P:l}=s,r=(n=D(n,32)).slice();r[31]=-129&n[31];const i=P(r);if(t&&i>=l)throw new Error("Expected 0 < hex < P");if(!t&&i>=a)throw new Error("Expected 0 < hex < 2**256");const o=M(i*i),c=M(o-u),h=M(e*o+u);let{isValid:d,value:f}=N(c,h);if(!d)throw new Error("Point.fromHex: invalid y coordinate");const p=(f&u)===u;return 0!=(128&n[31])!==p&&(f=M(-f)),new k(f,i)}static async fromPrivateKey(n){return(await $(n)).point}toRawBytes(){const n=x(this.y);return n[31]|=this.x&u?128:0,n}toHex(){return E(this.toRawBytes())}toX25519(){const{y:n}=this;return x(M((u+n)*C(u-n)))}isTorsionFree(){return g.fromAffine(this).isTorsionFree()}equals(n){return this.x===n.x&&this.y===n.y}negate(){return new k(M(-this.x),this.y)}add(n){return g.fromAffine(this).add(g.fromAffine(n)).toAffine()}subtract(n){return this.add(n.negate())}multiply(n){return g.fromAffine(this).multiply(n,this).toAffine()}}t.Point=k,k.BASE=new k(s.Gx,s.Gy),k.ZERO=new k(r,u);class I{constructor(n,t){this.r=n,this.s=t,this.assertValidity()}static fromHex(n){const t=D(n,64),e=k.fromHex(t.slice(0,32),!1),l=P(t.slice(32,64));return new I(e,l)}assertValidity(){const{r:n,s:t}=this;if(!(n instanceof k))throw new Error("Expected Point instance");return W(t,s.l,!1),this}toRawBytes(){const n=new Uint8Array(64);return n.set(this.r.toRawBytes()),n.set(x(this.s),32),n}toHex(){return E(this.toRawBytes())}}function A(...n){if(!n.every((n=>n instanceof Uint8Array)))throw new Error("Expected Uint8Array list");if(1===n.length)return n[0];const t=n.reduce(((n,t)=>n+t.length),0),e=new Uint8Array(t);for(let l=0,r=0;l<n.length;l++){const t=n[l];e.set(t,r),r+=t.length}return e}t.Signature=I;const _=Array.from({length:256},((n,t)=>t.toString(16).padStart(2,"0")));function E(n){if(!(n instanceof Uint8Array))throw new Error("Uint8Array expected");let t="";for(let e=0;e<n.length;e++)t+=_[n[e]];return t}function S(n){if("string"!=typeof n)throw new TypeError("hexToBytes: expected string, got "+typeof n);if(n.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(n.length/2);for(let e=0;e<t.length;e++){const l=2*e,r=n.slice(l,l+2),u=Number.parseInt(r,16);if(Number.isNaN(u)||u<0)throw new Error("Invalid byte sequence");t[e]=u}return t}function T(n){return S(n.toString(16).padStart(64,"0"))}function x(n){return T(n).reverse()}function B(n){return(M(n)&u)===u}function P(n){if(!(n instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+E(Uint8Array.from(n).reverse()))}const R=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function O(n){return M(P(n)&R)}function M(n,t=s.P){const e=n%t;return e>=r?e:t+e}function C(n,t=s.P){if(n===r||t<=r)throw new Error(`invert: expected positive integers, got n=${n} mod=${t}`);let e=M(n,t),l=t,i=r,o=u,a=u,c=r;for(;e!==r;){const n=l/e,t=l%e,r=i-a*n,u=o-c*n;l=e,e=t,i=a,o=c,a=r,c=u}if(l!==u)throw new Error("invert: does not exist");return M(i,t)}function U(n,t){const{P:e}=s;let l=n;for(;t-- >r;)l*=l,l%=e;return l}function L(n){const{P:t}=s,e=BigInt(5),l=BigInt(10),r=BigInt(20),o=BigInt(40),a=BigInt(80),c=n*n%t*n%t,h=U(c,i)*c%t,d=U(h,u)*n%t,f=U(d,e)*d%t,p=U(f,l)*f%t,g=U(p,r)*p%t,y=U(g,o)*g%t,m=U(y,a)*y%t,b=U(m,a)*y%t,w=U(b,l)*f%t;return{pow_p_5_8:U(w,i)*n%t,b2:c}}function N(n,t){const e=M(t*t*t),l=M(e*e*t);let r=M(n*e*L(n*l).pow_p_5_8);const u=M(t*r*r),i=r,o=M(r*c),s=u===n,a=u===M(-n),h=u===M(-n*c);return s&&(r=i),(a||h)&&(r=o),B(r)&&(r=M(-r)),{isValid:s||a,value:r}}function z(n){return N(u,n)}function K(n){return M(P(n),s.l)}function D(n,t){const e=n instanceof Uint8Array?Uint8Array.from(n):S(n);if("number"==typeof t&&e.length!==t)throw new Error(`Expected ${t} bytes`);return e}function W(n,t,e=!0){if(!t)throw new TypeError("Specify max value");if("number"==typeof n&&Number.isSafeInteger(n)&&(n=BigInt(n)),"bigint"==typeof n&&n<t)if(e){if(r<n)return n}else if(r<=n)return n;throw new TypeError("Expected valid scalar: 0 < scalar < max")}function j(n){return n[0]&=248,n[31]&=127,n[31]|=64,n}function F(n){if(32!==(n="bigint"==typeof n||"number"==typeof n?T(W(n,a)):D(n)).length)throw new Error("Expected 32 bytes");return n}function q(n){const t=j(n.slice(0,32)),e=n.slice(32,64),l=K(t),r=k.BASE.multiply(l),u=r.toRawBytes();return{head:t,prefix:e,scalar:l,point:r,pointBytes:u}}let H;function G(...n){if("function"!=typeof H)throw new Error("utils.sha512Sync must be set to use sync methods");return H(...n)}async function $(n){return q(await t.utils.sha512(F(n)))}function Z(n){return q(G(F(n)))}function V(n,t,e){t=D(t),e instanceof k||(e=k.fromHex(e,!1));const{r:l,s:r}=n instanceof I?n.assertValidity():I.fromHex(n);return{r:l,s:r,SB:g.BASE.multiplyUnsafe(r),pub:e,msg:t}}function X(n,t,e,l){const r=K(l),u=g.fromAffine(n).multiplyUnsafe(r);return g.fromAffine(t).add(u).subtract(e).multiplyUnsafe(s.h).equals(g.ZERO)}function Y(n,t,e){const l=M(n*(t-e));return[t=M(t-l),e=M(e+l)]}t.getPublicKey=async function(n){return(await $(n)).pointBytes},t.sign=async function(n,e){n=D(n);const{prefix:l,scalar:r,pointBytes:u}=await $(e),i=K(await t.utils.sha512(l,n)),o=k.BASE.multiply(i),a=M(i+K(await t.utils.sha512(o.toRawBytes(),u,n))*r,s.l);return new I(o,a).toRawBytes()},t.verify=async function(n,e,l){const{r,SB:u,msg:i,pub:o}=V(n,e,l),s=await t.utils.sha512(r.toRawBytes(),o.toRawBytes(),i);return X(o,r,u,s)},t.sync={getExtendedPublicKey:Z,getPublicKey:function(n){return Z(n).pointBytes},sign:function(n,t){n=D(n);const{prefix:e,scalar:l,pointBytes:r}=Z(t),u=K(G(e,n)),i=k.BASE.multiply(u),o=M(u+K(G(i.toRawBytes(),r,n))*l,s.l);return new I(i,o).toRawBytes()},verify:function(n,t,e){const{r:l,SB:r,msg:u,pub:i}=V(n,t,e),o=G(l.toRawBytes(),i.toRawBytes(),u);return X(i,l,r,o)}},t.getSharedSecret=async function(n,e){const{head:l}=await $(n),r=k.fromHex(e).toX25519();return t.curve25519.scalarMult(l,r)},k.BASE._setWindowSize(8),t.curve25519={BASE_POINT_U:"0900000000000000000000000000000000000000000000000000000000000000",scalarMult(n,t){const e=function(n,t){const{P:e}=s,l=W(n,e),i=W(t,e),o=BigInt(121665),a=l;let c,h=u,d=r,f=l,p=u,g=r;for(let s=BigInt(254);s>=r;s--){const n=i>>s&u;g^=n,c=Y(g,h,f),h=c[0],f=c[1],c=Y(g,d,p),d=c[0],p=c[1],g=n;const t=h+d,e=M(t*t),l=h-d,r=M(l*l),y=e-r,m=f+p,b=M((f-p)*t),w=M(m*l),v=b+w,k=b-w;f=M(v*v),p=M(a*M(k*k)),h=M(e*r),d=M(y*(e+M(o*y)))}c=Y(g,h,f),h=c[0],f=c[1],c=Y(g,d,p),d=c[0],p=c[1];const{pow_p_5_8:y,b2:m}=L(d),b=M(U(y,BigInt(3))*m);return M(h*b)}(function(n){const t=D(n,32);return t[31]&=127,P(t)}(t),P(j(D(n,32))));if(e===r)throw new Error("Invalid private or public key received");return function(n){return x(M(n,s.P))}(e)},scalarMultBase:n=>t.curve25519.scalarMult(n,t.curve25519.BASE_POINT_U)};const J={node:l,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0};t.utils={bytesToHex:E,hexToBytes:S,concatBytes:A,getExtendedPublicKey:$,mod:M,invert:C,TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],hashToPrivateScalar:n=>{if((n=D(n)).length<40||n.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");return M(P(n),s.l-u)+u},randomBytes:(n=32)=>{if(J.web)return J.web.getRandomValues(new Uint8Array(n));if(J.node){const{randomBytes:t}=J.node;return new Uint8Array(t(n).buffer)}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>t.utils.randomBytes(32),sha512:async(...n)=>{const t=A(...n);if(J.web){const n=await J.web.subtle.digest("SHA-512",t.buffer);return new Uint8Array(n)}if(J.node)return Uint8Array.from(J.node.createHash("sha512").update(t).digest());throw new Error("The environment doesn't have sha512 function")},precompute(n=8,t=k.BASE){const e=t.equals(k.BASE)?t:new k(t.x,t.y);return e._setWindowSize(n),e.multiply(i),e},sha512Sync:void 0},Object.defineProperties(t.utils,{sha512Sync:{configurable:!1,get:()=>H,set(n){H||(H=n)}}})},53525:(n,t)=>{"use strict";function e(n){if(!Number.isSafeInteger(n)||n<0)throw new Error(`Wrong positive integer: ${n}`)}function l(n){if("boolean"!=typeof n)throw new Error(`Expected boolean, not ${n}`)}function r(n,...t){if(!(n instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(n.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${n.length}`)}function u(n){if("function"!=typeof n||"function"!=typeof n.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");e(n.outputLen),e(n.blockLen)}function i(n,t=!0){if(n.destroyed)throw new Error("Hash instance has been destroyed");if(t&&n.finished)throw new Error("Hash#digest() has already been called")}function o(n,t){r(n);const e=t.outputLen;if(n.length<e)throw new Error(`digestInto() expects output buffer of length at least ${e}`)}Object.defineProperty(t,"__esModule",{value:!0}),t.output=t.exists=t.hash=t.bytes=t.bool=t.number=void 0,t.number=e,t.bool=l,t.bytes=r,t.hash=u,t.exists=i,t.output=o;const s={number:e,bool:l,bytes:r,hash:u,exists:i,output:o};t.default=s},99350:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SHA2=void 0;const l=e(53525),r=e(70064);class u extends r.Hash{constructor(n,t,e,l){super(),this.blockLen=n,this.outputLen=t,this.padOffset=e,this.isLE=l,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(n),this.view=(0,r.createView)(this.buffer)}update(n){l.default.exists(this);const{view:t,buffer:e,blockLen:u}=this,i=(n=(0,r.toBytes)(n)).length;for(let l=0;l<i;){const o=Math.min(u-this.pos,i-l);if(o!==u)e.set(n.subarray(l,l+o),this.pos),this.pos+=o,l+=o,this.pos===u&&(this.process(t,0),this.pos=0);else{const t=(0,r.createView)(n);for(;u<=i-l;l+=u)this.process(t,l)}}return this.length+=n.length,this.roundClean(),this}digestInto(n){l.default.exists(this),l.default.output(n,this),this.finished=!0;const{buffer:t,view:e,blockLen:u,isLE:i}=this;let{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>u-o&&(this.process(e,0),o=0);for(let l=o;l<u;l++)t[l]=0;!function(n,t,e,l){if("function"==typeof n.setBigUint64)return n.setBigUint64(t,e,l);const r=BigInt(32),u=BigInt(4294967295),i=Number(e>>r&u),o=Number(e&u),s=l?4:0,a=l?0:4;n.setUint32(t+s,i,l),n.setUint32(t+a,o,l)}(e,u-8,BigInt(8*this.length),i),this.process(e,0);const s=(0,r.createView)(n);this.get().forEach(((n,t)=>s.setUint32(4*t,n,i)))}digest(){const{buffer:n,outputLen:t}=this;this.digestInto(n);const e=n.slice(0,t);return this.destroy(),e}_cloneInto(n){n||(n=new this.constructor),n.set(...this.get());const{blockLen:t,buffer:e,length:l,finished:r,destroyed:u,pos:i}=this;return n.length=l,n.pos=i,n.finished=r,n.destroyed=u,l%t&&n.buffer.set(e),n}}t.SHA2=u},11655:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.add=t.toBig=t.split=t.fromBig=void 0;const e=BigInt(2**32-1),l=BigInt(32);function r(n,t=!1){return t?{h:Number(n&e),l:Number(n>>l&e)}:{h:0|Number(n>>l&e),l:0|Number(n&e)}}function u(n,t=!1){let e=new Uint32Array(n.length),l=new Uint32Array(n.length);for(let u=0;u<n.length;u++){const{h:i,l:o}=r(n[u],t);[e[u],l[u]]=[i,o]}return[e,l]}t.fromBig=r,t.split=u;t.toBig=(n,t)=>BigInt(n>>>0)<<l|BigInt(t>>>0);function i(n,t,e,l){const r=(t>>>0)+(l>>>0);return{h:n+e+(r/2**32|0)|0,l:0|r}}t.add=i;const o={fromBig:r,split:u,toBig:t.toBig,shrSH:(n,t,e)=>n>>>e,shrSL:(n,t,e)=>n<<32-e|t>>>e,rotrSH:(n,t,e)=>n>>>e|t<<32-e,rotrSL:(n,t,e)=>n<<32-e|t>>>e,rotrBH:(n,t,e)=>n<<64-e|t>>>e-32,rotrBL:(n,t,e)=>n>>>e-32|t<<64-e,rotr32H:(n,t)=>t,rotr32L:(n,t)=>n,rotlSH:(n,t,e)=>n<<e|t>>>32-e,rotlSL:(n,t,e)=>t<<e|n>>>32-e,rotlBH:(n,t,e)=>t<<e-32|n>>>64-e,rotlBL:(n,t,e)=>n<<e-32|t>>>64-e,add:i,add3L:(n,t,e)=>(n>>>0)+(t>>>0)+(e>>>0),add3H:(n,t,e,l)=>t+e+l+(n/2**32|0)|0,add4L:(n,t,e,l)=>(n>>>0)+(t>>>0)+(e>>>0)+(l>>>0),add4H:(n,t,e,l,r)=>t+e+l+r+(n/2**32|0)|0,add5H:(n,t,e,l,r,u)=>t+e+l+r+u+(n/2**32|0)|0,add5L:(n,t,e,l,r)=>(n>>>0)+(t>>>0)+(e>>>0)+(l>>>0)+(r>>>0)};t.default=o},94661:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.crypto=void 0,t.crypto={node:void 0,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0}},41377:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmac=void 0;const l=e(53525),r=e(70064);class u extends r.Hash{constructor(n,t){super(),this.finished=!1,this.destroyed=!1,l.default.hash(n);const e=(0,r.toBytes)(t);if(this.iHash=n.create(),!(this.iHash instanceof r.Hash))throw new TypeError("Expected instance of class which extends utils.Hash");const u=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const i=new Uint8Array(u);i.set(e.length>this.iHash.blockLen?n.create().update(e).digest():e);for(let l=0;l<i.length;l++)i[l]^=54;this.iHash.update(i),this.oHash=n.create();for(let l=0;l<i.length;l++)i[l]^=106;this.oHash.update(i),i.fill(0)}update(n){return l.default.exists(this),this.iHash.update(n),this}digestInto(n){l.default.exists(this),l.default.bytes(n,this.outputLen),this.finished=!0,this.iHash.digestInto(n),this.oHash.update(n),this.oHash.digestInto(n),this.destroy()}digest(){const n=new Uint8Array(this.oHash.outputLen);return this.digestInto(n),n}_cloneInto(n){n||(n=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:e,finished:l,destroyed:r,blockLen:u,outputLen:i}=this;return n.finished=l,n.destroyed=r,n.blockLen=u,n.outputLen=i,n.oHash=t._cloneInto(n.oHash),n.iHash=e._cloneInto(n.iHash),n}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}t.hmac=(n,t,e)=>new u(n,t).update(e).digest(),t.hmac.create=(n,t)=>new u(n,t)},99179:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Async=t.pbkdf2=void 0;const l=e(53525),r=e(41377),u=e(70064);function i(n,t,e,i){l.default.hash(n);const o=(0,u.checkOpts)({dkLen:32,asyncTick:10},i),{c:s,dkLen:a,asyncTick:c}=o;if(l.default.number(s),l.default.number(a),l.default.number(c),s<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const h=(0,u.toBytes)(t),d=(0,u.toBytes)(e),f=new Uint8Array(a),p=r.hmac.create(n,h),g=p._cloneInto().update(d);return{c:s,dkLen:a,asyncTick:c,DK:f,PRF:p,PRFSalt:g}}function o(n,t,e,l,r){return n.destroy(),t.destroy(),l&&l.destroy(),r.fill(0),e}t.pbkdf2=function(n,t,e,l){const{c:r,dkLen:s,DK:a,PRF:c,PRFSalt:h}=i(n,t,e,l);let d;const f=new Uint8Array(4),p=(0,u.createView)(f),g=new Uint8Array(c.outputLen);for(let u=1,i=0;i<s;u++,i+=c.outputLen){const n=a.subarray(i,i+c.outputLen);p.setInt32(0,u,!1),(d=h._cloneInto(d)).update(f).digestInto(g),n.set(g.subarray(0,n.length));for(let t=1;t<r;t++){c._cloneInto(d).update(g).digestInto(g);for(let t=0;t<n.length;t++)n[t]^=g[t]}}return o(c,h,a,d,g)},t.pbkdf2Async=async function(n,t,e,l){const{c:r,dkLen:s,asyncTick:a,DK:c,PRF:h,PRFSalt:d}=i(n,t,e,l);let f;const p=new Uint8Array(4),g=(0,u.createView)(p),y=new Uint8Array(h.outputLen);for(let i=1,o=0;o<s;i++,o+=h.outputLen){const n=c.subarray(o,o+h.outputLen);g.setInt32(0,i,!1),(f=d._cloneInto(f)).update(p).digestInto(y),n.set(y.subarray(0,n.length)),await(0,u.asyncLoop)(r-1,a,(t=>{h._cloneInto(f).update(y).digestInto(y);for(let e=0;e<n.length;e++)n[e]^=y[e]}))}return o(h,d,c,f,y)}},80590:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ripemd160=t.RIPEMD160=void 0;const l=e(99350),r=e(70064),u=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),i=Uint8Array.from({length:16},((n,t)=>t)),o=i.map((n=>(9*n+5)%16));let s=[i],a=[o];for(let w=0;w<4;w++)for(let n of[s,a])n.push(n[w].map((n=>u[n])));const c=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map((n=>new Uint8Array(n))),h=s.map(((n,t)=>n.map((n=>c[t][n])))),d=a.map(((n,t)=>n.map((n=>c[t][n])))),f=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),p=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]),g=(n,t)=>n<<t|n>>>32-t;function y(n,t,e,l){return 0===n?t^e^l:1===n?t&e|~t&l:2===n?(t|~e)^l:3===n?t&l|e&~l:t^(e|~l)}const m=new Uint32Array(16);class b extends l.SHA2{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:n,h1:t,h2:e,h3:l,h4:r}=this;return[n,t,e,l,r]}set(n,t,e,l,r){this.h0=0|n,this.h1=0|t,this.h2=0|e,this.h3=0|l,this.h4=0|r}process(n,t){for(let s=0;s<16;s++,t+=4)m[s]=n.getUint32(t,!0);let e=0|this.h0,l=e,r=0|this.h1,u=r,i=0|this.h2,o=i,c=0|this.h3,b=c,w=0|this.h4,v=w;for(let k=0;k<5;k++){const n=4-k,t=f[k],I=p[k],A=s[k],_=a[k],E=h[k],S=d[k];for(let l=0;l<16;l++){const n=g(e+y(k,r,i,c)+m[A[l]]+t,E[l])+w|0;e=w,w=c,c=0|g(i,10),i=r,r=n}for(let e=0;e<16;e++){const t=g(l+y(n,u,o,b)+m[_[e]]+I,S[e])+v|0;l=v,v=b,b=0|g(o,10),o=u,u=t}}this.set(this.h1+i+b|0,this.h2+c+v|0,this.h3+w+l|0,this.h4+e+u|0,this.h0+r+o|0)}roundClean(){m.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}t.RIPEMD160=b,t.ripemd160=(0,r.wrapConstructor)((()=>new b))},96053:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha256=void 0;const l=e(99350),r=e(70064),u=(n,t,e)=>n&t^n&e^t&e,i=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),o=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),s=new Uint32Array(64);class a extends l.SHA2{constructor(){super(64,32,8,!1),this.A=0|o[0],this.B=0|o[1],this.C=0|o[2],this.D=0|o[3],this.E=0|o[4],this.F=0|o[5],this.G=0|o[6],this.H=0|o[7]}get(){const{A:n,B:t,C:e,D:l,E:r,F:u,G:i,H:o}=this;return[n,t,e,l,r,u,i,o]}set(n,t,e,l,r,u,i,o){this.A=0|n,this.B=0|t,this.C=0|e,this.D=0|l,this.E=0|r,this.F=0|u,this.G=0|i,this.H=0|o}process(n,t){for(let r=0;r<16;r++,t+=4)s[r]=n.getUint32(t,!1);for(let u=16;u<64;u++){const n=s[u-15],t=s[u-2],e=(0,r.rotr)(n,7)^(0,r.rotr)(n,18)^n>>>3,l=(0,r.rotr)(t,17)^(0,r.rotr)(t,19)^t>>>10;s[u]=l+s[u-7]+e+s[u-16]|0}let{A:e,B:l,C:o,D:a,E:c,F:h,G:d,H:f}=this;for(let g=0;g<64;g++){const n=f+((0,r.rotr)(c,6)^(0,r.rotr)(c,11)^(0,r.rotr)(c,25))+((p=c)&h^~p&d)+i[g]+s[g]|0,t=((0,r.rotr)(e,2)^(0,r.rotr)(e,13)^(0,r.rotr)(e,22))+u(e,l,o)|0;f=d,d=h,h=c,c=a+n|0,a=o,o=l,l=e,e=n+t|0}var p;e=e+this.A|0,l=l+this.B|0,o=o+this.C|0,a=a+this.D|0,c=c+this.E|0,h=h+this.F|0,d=d+this.G|0,f=f+this.H|0,this.set(e,l,o,a,c,h,d,f)}roundClean(){s.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}t.sha256=(0,r.wrapConstructor)((()=>new a))},12540:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha384=t.sha512_256=t.sha512=t.SHA512=void 0;const l=e(99350),r=e(11655),u=e(70064),[i,o]=r.default.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((n=>BigInt(n)))),s=new Uint32Array(80),a=new Uint32Array(80);class c extends l.SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:n,Al:t,Bh:e,Bl:l,Ch:r,Cl:u,Dh:i,Dl:o,Eh:s,El:a,Fh:c,Fl:h,Gh:d,Gl:f,Hh:p,Hl:g}=this;return[n,t,e,l,r,u,i,o,s,a,c,h,d,f,p,g]}set(n,t,e,l,r,u,i,o,s,a,c,h,d,f,p,g){this.Ah=0|n,this.Al=0|t,this.Bh=0|e,this.Bl=0|l,this.Ch=0|r,this.Cl=0|u,this.Dh=0|i,this.Dl=0|o,this.Eh=0|s,this.El=0|a,this.Fh=0|c,this.Fl=0|h,this.Gh=0|d,this.Gl=0|f,this.Hh=0|p,this.Hl=0|g}process(n,t){for(let r=0;r<16;r++,t+=4)s[r]=n.getUint32(t),a[r]=n.getUint32(t+=4);for(let i=16;i<80;i++){const n=0|s[i-15],t=0|a[i-15],e=r.default.rotrSH(n,t,1)^r.default.rotrSH(n,t,8)^r.default.shrSH(n,t,7),l=r.default.rotrSL(n,t,1)^r.default.rotrSL(n,t,8)^r.default.shrSL(n,t,7),u=0|s[i-2],o=0|a[i-2],c=r.default.rotrSH(u,o,19)^r.default.rotrBH(u,o,61)^r.default.shrSH(u,o,6),h=r.default.rotrSL(u,o,19)^r.default.rotrBL(u,o,61)^r.default.shrSL(u,o,6),d=r.default.add4L(l,h,a[i-7],a[i-16]),f=r.default.add4H(d,e,c,s[i-7],s[i-16]);s[i]=0|f,a[i]=0|d}let{Ah:e,Al:l,Bh:u,Bl:c,Ch:h,Cl:d,Dh:f,Dl:p,Eh:g,El:y,Fh:m,Fl:b,Gh:w,Gl:v,Hh:k,Hl:I}=this;for(let A=0;A<80;A++){const n=r.default.rotrSH(g,y,14)^r.default.rotrSH(g,y,18)^r.default.rotrBH(g,y,41),t=r.default.rotrSL(g,y,14)^r.default.rotrSL(g,y,18)^r.default.rotrBL(g,y,41),_=g&m^~g&w,E=y&b^~y&v,S=r.default.add5L(I,t,E,o[A],a[A]),T=r.default.add5H(S,k,n,_,i[A],s[A]),x=0|S,B=r.default.rotrSH(e,l,28)^r.default.rotrBH(e,l,34)^r.default.rotrBH(e,l,39),P=r.default.rotrSL(e,l,28)^r.default.rotrBL(e,l,34)^r.default.rotrBL(e,l,39),R=e&u^e&h^u&h,O=l&c^l&d^c&d;k=0|w,I=0|v,w=0|m,v=0|b,m=0|g,b=0|y,({h:g,l:y}=r.default.add(0|f,0|p,0|T,0|x)),f=0|h,p=0|d,h=0|u,d=0|c,u=0|e,c=0|l;const M=r.default.add3L(x,P,O);e=r.default.add3H(M,T,B,R),l=0|M}({h:e,l}=r.default.add(0|this.Ah,0|this.Al,0|e,0|l)),({h:u,l:c}=r.default.add(0|this.Bh,0|this.Bl,0|u,0|c)),({h,l:d}=r.default.add(0|this.Ch,0|this.Cl,0|h,0|d)),({h:f,l:p}=r.default.add(0|this.Dh,0|this.Dl,0|f,0|p)),({h:g,l:y}=r.default.add(0|this.Eh,0|this.El,0|g,0|y)),({h:m,l:b}=r.default.add(0|this.Fh,0|this.Fl,0|m,0|b)),({h:w,l:v}=r.default.add(0|this.Gh,0|this.Gl,0|w,0|v)),({h:k,l:I}=r.default.add(0|this.Hh,0|this.Hl,0|k,0|I)),this.set(e,l,u,c,h,d,f,p,g,y,m,b,w,v,k,I)}roundClean(){s.fill(0),a.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.SHA512=c;class h extends c{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class d extends c{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}t.sha512=(0,u.wrapConstructor)((()=>new c)),t.sha512_256=(0,u.wrapConstructor)((()=>new h)),t.sha384=(0,u.wrapConstructor)((()=>new d))},70064:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomBytes=t.wrapConstructorWithOpts=t.wrapConstructor=t.checkOpts=t.Hash=t.concatBytes=t.toBytes=t.utf8ToBytes=t.asyncLoop=t.nextTick=t.hexToBytes=t.bytesToHex=t.isLE=t.rotr=t.createView=t.u32=t.u8=void 0;const l=e(94661);t.u8=n=>new Uint8Array(n.buffer,n.byteOffset,n.byteLength);t.u32=n=>new Uint32Array(n.buffer,n.byteOffset,Math.floor(n.byteLength/4));t.createView=n=>new DataView(n.buffer,n.byteOffset,n.byteLength);if(t.rotr=(n,t)=>n<<32-t|n>>>t,t.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!t.isLE)throw new Error("Non little-endian hardware is not supported");const r=Array.from({length:256},((n,t)=>t.toString(16).padStart(2,"0")));t.bytesToHex=function(n){if(!(n instanceof Uint8Array))throw new Error("Uint8Array expected");let t="";for(let e=0;e<n.length;e++)t+=r[n[e]];return t},t.hexToBytes=function(n){if("string"!=typeof n)throw new TypeError("hexToBytes: expected string, got "+typeof n);if(n.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(n.length/2);for(let e=0;e<t.length;e++){const l=2*e,r=n.slice(l,l+2),u=Number.parseInt(r,16);if(Number.isNaN(u)||u<0)throw new Error("Invalid byte sequence");t[e]=u}return t};function u(n){if("string"!=typeof n)throw new TypeError("utf8ToBytes expected string, got "+typeof n);return(new TextEncoder).encode(n)}function i(n){if("string"==typeof n&&(n=u(n)),!(n instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof n})`);return n}t.nextTick=async()=>{},t.asyncLoop=async function(n,e,l){let r=Date.now();for(let u=0;u<n;u++){l(u);const n=Date.now()-r;n>=0&&n<e||(await(0,t.nextTick)(),r+=n)}},t.utf8ToBytes=u,t.toBytes=i,t.concatBytes=function(...n){if(!n.every((n=>n instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===n.length)return n[0];const t=n.reduce(((n,t)=>n+t.length),0),e=new Uint8Array(t);for(let l=0,r=0;l<n.length;l++){const t=n[l];e.set(t,r),r+=t.length}return e};t.Hash=class{clone(){return this._cloneInto()}};t.checkOpts=function(n,t){if(void 0!==t&&("object"!=typeof t||(e=t,"[object Object]"!==Object.prototype.toString.call(e)||e.constructor!==Object)))throw new TypeError("Options should be object or undefined");var e;return Object.assign(n,t)},t.wrapConstructor=function(n){const t=t=>n().update(i(t)).digest(),e=n();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>n(),t},t.wrapConstructorWithOpts=function(n){const t=(t,e)=>n(e).update(i(t)).digest(),e=n({});return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=t=>n(t),t},t.randomBytes=function(n=32){if(l.crypto.web)return l.crypto.web.getRandomValues(new Uint8Array(n));if(l.crypto.node)return new Uint8Array(l.crypto.node.randomBytes(n).buffer);throw new Error("The environment doesn't have randomBytes function")}},76333:(n,t,e)=>{"use strict";var l=e(63279),r=e(48526);window.onload=()=>{const n=e(48834).Buffer;window.Buffer=n,window.global=window,window.global.Buffer=n,document.dispatchEvent(new CustomEvent("kinetic-sdk-ready",{detail:{Keypair:l.Keypair,KineticSdk:r.KineticSdk}}))}},36237:(n,t)=>{"use strict";function e(n){if(!Number.isSafeInteger(n))throw new Error(`Wrong integer: ${n}`)}function l(...n){const t=(n,t)=>e=>n(t(e));return{encode:Array.from(n).reverse().reduce(((n,e)=>n?t(n,e.encode):e.encode),void 0),decode:n.reduce(((n,e)=>n?t(n,e.decode):e.decode),void 0)}}function r(n){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(e(t),t<0||t>=n.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${n.length})`);return n[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const e=n.indexOf(t);if(-1===e)throw new Error(`Unknown letter: "${t}". Allowed: ${n}`);return e}))}}}function u(n=""){if("string"!=typeof n)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");for(let n of t)if("string"!=typeof n)throw new Error(`join.encode: non-string input=${n}`);return t.join(n)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(n)}}}function i(n,t="="){if(e(n),"string"!=typeof t)throw new Error("padding chr should be string");return{encode(e){if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("padding.encode input should be array of strings");for(let n of e)if("string"!=typeof n)throw new Error(`padding.encode: non-string input=${n}`);for(;e.length*n%8;)e.push(t);return e},decode(e){if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("padding.encode input should be array of strings");for(let n of e)if("string"!=typeof n)throw new Error(`padding.decode: non-string input=${n}`);let l=e.length;if(l*n%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;l>0&&e[l-1]===t;l--)if(!((l-1)*n%8))throw new Error("Invalid padding: string has too much padding");return e.slice(0,l)}}}function o(n){if("function"!=typeof n)throw new Error("normalize fn should be function");return{encode:n=>n,decode:t=>n(t)}}function s(n,t,l){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(l<2)throw new Error(`convertRadix: wrong to=${l}, base cannot be less than 2`);if(!Array.isArray(n))throw new Error("convertRadix: data should be array");if(!n.length)return[];let r=0;const u=[],i=Array.from(n);for(i.forEach((n=>{if(e(n),n<0||n>=t)throw new Error(`Wrong integer: ${n}`)}));;){let n=0,e=!0;for(let u=r;u<i.length;u++){const o=i[u],s=t*n+o;if(!Number.isSafeInteger(s)||t*n/t!==n||s-o!=t*n)throw new Error("convertRadix: carry overflow");if(n=s%l,i[u]=Math.floor(s/l),!Number.isSafeInteger(i[u])||i[u]*l+n!==s)throw new Error("convertRadix: carry overflow");e&&(i[u]?e=!1:r=u)}if(u.push(n),e)break}for(let e=0;e<n.length-1&&0===n[e];e++)u.push(0);return u.reverse()}Object.defineProperty(t,"__esModule",{value:!0}),t.bytes=t.stringToBytes=t.str=t.bytesToString=t.hex=t.utf8=t.bech32m=t.bech32=t.base58check=t.base58xmr=t.base58xrp=t.base58flickr=t.base58=t.base64url=t.base64=t.base32crockford=t.base32hex=t.base32=t.base16=t.utils=t.assertNumber=void 0,t.assertNumber=e;const a=(n,t)=>t?a(t,n%t):n,c=(n,t)=>n+(t-a(n,t));function h(n,t,l,r){if(!Array.isArray(n))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(l<=0||l>32)throw new Error(`convertRadix2: wrong to=${l}`);if(c(t,l)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${l} carryBits=${c(t,l)}`);let u=0,i=0;const o=2**l-1,s=[];for(const a of n){if(e(a),a>=2**t)throw new Error(`convertRadix2: invalid data word=${a} from=${t}`);if(u=u<<t|a,i+t>32)throw new Error(`convertRadix2: carry overflow pos=${i} from=${t}`);for(i+=t;i>=l;i-=l)s.push((u>>i-l&o)>>>0);u&=2**i-1}if(u=u<<l-i&o,!r&&i>=t)throw new Error("Excess padding");if(!r&&u)throw new Error(`Non-zero padding: ${u}`);return r&&i>0&&s.push(u>>>0),s}function d(n){return e(n),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return s(Array.from(t),256,n)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(s(t,n,256))}}}function f(n,t=!1){if(e(n),n<=0||n>32)throw new Error("radix2: bits should be in (0..32]");if(c(8,n)>32||c(n,8)>32)throw new Error("radix2: carry overflow");return{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return h(Array.from(e),8,n,!t)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(h(e,n,8,t))}}}function p(n){if("function"!=typeof n)throw new Error("unsafeWrapper fn should be function");return function(...t){try{return n.apply(null,t)}catch(e){}}}function g(n,t){if(e(n),"function"!=typeof t)throw new Error("checksum fn should be function");return{encode(e){if(!(e instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const l=t(e).slice(0,n),r=new Uint8Array(e.length+n);return r.set(e),r.set(l,e.length),r},decode(e){if(!(e instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const l=e.slice(0,-n),r=t(l).slice(0,n),u=e.slice(-n);for(let t=0;t<n;t++)if(r[t]!==u[t])throw new Error("Invalid checksum");return l}}}t.utils={alphabet:r,chain:l,checksum:g,radix:d,radix2:f,join:u,padding:i},t.base16=l(f(4),r("0123456789ABCDEF"),u("")),t.base32=l(f(5),r("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),i(5),u("")),t.base32hex=l(f(5),r("0123456789ABCDEFGHIJKLMNOPQRSTUV"),i(5),u("")),t.base32crockford=l(f(5),r("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),u(""),o((n=>n.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),t.base64=l(f(6),r("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),i(6),u("")),t.base64url=l(f(6),r("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),i(6),u(""));const y=n=>l(d(58),r(n),u(""));t.base58=y("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),t.base58flickr=y("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),t.base58xrp=y("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const m=[0,2,3,5,6,7,9,10,11];t.base58xmr={encode(n){let e="";for(let l=0;l<n.length;l+=8){const r=n.subarray(l,l+8);e+=t.base58.encode(r).padStart(m[r.length],"1")}return e},decode(n){let e=[];for(let l=0;l<n.length;l+=11){const r=n.slice(l,l+11),u=m.indexOf(r.length),i=t.base58.decode(r);for(let n=0;n<i.length-u;n++)if(0!==i[n])throw new Error("base58xmr: wrong padding");e=e.concat(Array.from(i.slice(i.length-u)))}return Uint8Array.from(e)}};t.base58check=n=>l(g(4,(t=>n(n(t)))),t.base58);const b=l(r("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),u("")),w=[996825010,642813549,513874426,1027748829,705979059];function v(n){const t=n>>25;let e=(33554431&n)<<5;for(let l=0;l<w.length;l++)1==(t>>l&1)&&(e^=w[l]);return e}function k(n,t,e=1){const l=n.length;let r=1;for(let u=0;u<l;u++){const t=n.charCodeAt(u);if(t<33||t>126)throw new Error(`Invalid prefix (${n})`);r=v(r)^t>>5}r=v(r);for(let u=0;u<l;u++)r=v(r)^31&n.charCodeAt(u);for(let u of t)r=v(r)^u;for(let u=0;u<6;u++)r=v(r);return r^=e,b.encode(h([r%2**30],30,5,!1))}function I(n){const t="bech32"===n?1:734539939,e=f(5),l=e.decode,r=e.encode,u=p(l);function i(n,e=90){if("string"!=typeof n)throw new Error("bech32.decode input should be string, not "+typeof n);if(n.length<8||!1!==e&&n.length>e)throw new TypeError(`Wrong string length: ${n.length} (${n}). Expected (8..${e})`);const l=n.toLowerCase();if(n!==l&&n!==n.toUpperCase())throw new Error("String must be lowercase or uppercase");const r=(n=l).lastIndexOf("1");if(0===r||-1===r)throw new Error('Letter "1" must be present between prefix and data only');const u=n.slice(0,r),i=n.slice(r+1);if(i.length<6)throw new Error("Data must be at least 6 characters long");const o=b.decode(i).slice(0,-6),s=k(u,o,t);if(!i.endsWith(s))throw new Error(`Invalid checksum in ${n}: expected "${s}"`);return{prefix:u,words:o}}return{encode:function(n,e,l=90){if("string"!=typeof n)throw new Error("bech32.encode prefix should be string, not "+typeof n);if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof e);const r=n.length+7+e.length;if(!1!==l&&r>l)throw new TypeError(`Length ${r} exceeds limit ${l}`);return`${n=n.toLowerCase()}1${b.encode(e)}${k(n,e,t)}`},decode:i,decodeToBytes:function(n){const{prefix:t,words:e}=i(n,!1);return{prefix:t,words:e,bytes:l(e)}},decodeUnsafe:p(i),fromWords:l,fromWordsUnsafe:u,toWords:r}}t.bech32=I("bech32"),t.bech32m=I("bech32m"),t.utf8={encode:n=>(new TextDecoder).decode(n),decode:n=>(new TextEncoder).encode(n)},t.hex=l(f(4),r("0123456789abcdef"),u(""),o((n=>{if("string"!=typeof n||n.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof n} with length ${n.length}`);return n.toLowerCase()})));const A={utf8:t.utf8,hex:t.hex,base16:t.base16,base32:t.base32,base64:t.base64,base64url:t.base64url,base58:t.base58,base58xmr:t.base58xmr},_=`Invalid encoding type. Available types: ${Object.keys(A).join(", ")}`;t.bytesToString=(n,t)=>{if("string"!=typeof n||!A.hasOwnProperty(n))throw new TypeError(_);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return A[n].encode(t)},t.str=t.bytesToString;t.stringToBytes=(n,t)=>{if(!A.hasOwnProperty(n))throw new TypeError(_);if("string"!=typeof t)throw new TypeError("stringToBytes() expects string");return A[n].decode(t)},t.bytes=t.stringToBytes},55796:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToSeedSync=t.mnemonicToSeed=t.validateMnemonic=t.entropyToMnemonic=t.mnemonicToEntropy=t.generateMnemonic=void 0;const l=e(53525),r=e(99179),u=e(96053),i=e(12540),o=e(70064),s=e(36237);function a(n){if("string"!=typeof n)throw new TypeError("Invalid mnemonic type: "+typeof n);return n.normalize("NFKD")}function c(n){const t=a(n),e=t.split(" ");if(![12,15,18,21,24].includes(e.length))throw new Error("Invalid mnemonic");return{nfkd:t,words:e}}function h(n){l.default.bytes(n,16,20,24,28,32)}t.generateMnemonic=function(n,t=128){if(l.default.number(t),t%32!=0||t>256)throw new TypeError("Invalid entropy");return g((0,o.randomBytes)(t/8),n)};const d=n=>{const t=8-n.length/4;return new Uint8Array([(0,u.sha256)(n)[0]>>t<<t])};function f(n){if(!Array.isArray(n)||2048!==n.length||"string"!=typeof n[0])throw new Error("Worlist: expected array of 2048 strings");return n.forEach((n=>{if("string"!=typeof n)throw new Error(`Wordlist: non-string element: ${n}`)})),s.utils.chain(s.utils.checksum(1,d),s.utils.radix2(11,!0),s.utils.alphabet(n))}function p(n,t){const{words:e}=c(n),l=f(t).decode(e);return h(l),l}function g(n,t){h(n);return f(t).encode(n).join((n=>"\u3042\u3044\u3053\u304f\u3057\u3093"===n[0])(t)?"\u3000":" ")}t.mnemonicToEntropy=p,t.entropyToMnemonic=g,t.validateMnemonic=function(n,t){try{p(n,t)}catch(e){return!1}return!0};const y=n=>a(`mnemonic${n}`);t.mnemonicToSeed=function(n,t=""){return(0,r.pbkdf2Async)(i.sha512,c(n).nfkd,y(t),{c:2048,dkLen:64})},t.mnemonicToSeedSync=function(n,t=""){return(0,r.pbkdf2)(i.sha512,c(n).nfkd,y(t),{c:2048,dkLen:64})}},68050:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wordlist=void 0,t.wordlist="abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo".split("\n")},70841:(n,t,e)=>{"use strict";e.r(t),e.d(t,{Account:()=>U,AddressLookupTableAccount:()=>Fn,AddressLookupTableInstruction:()=>xe,AddressLookupTableProgram:()=>Be,Authorized:()=>Ke,BLOCKHASH_CACHE_TIMEOUT_MS:()=>Xn,BPF_LOADER_DEPRECATED_PROGRAM_ID:()=>L,BPF_LOADER_PROGRAM_ID:()=>Rn,BpfLoader:()=>On,COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:()=>Re,ComputeBudgetInstruction:()=>Pe,ComputeBudgetProgram:()=>Oe,Connection:()=>Ee,Ed25519Program:()=>Ce,Enum:()=>B,EpochSchedule:()=>zn,FeeCalculatorLayout:()=>vn,Keypair:()=>Se,LAMPORTS_PER_SOL:()=>sl,LOOKUP_TABLE_INSTRUCTION_LAYOUTS:()=>Te,Loader:()=>Pn,Lockup:()=>De,MAX_SEED_LENGTH:()=>R,Message:()=>Y,MessageAccountKeys:()=>j,MessageV0:()=>J,NONCE_ACCOUNT_LENGTH:()=>In,NonceAccount:()=>An,PACKET_DATA_SIZE:()=>N,PUBLIC_KEY_LENGTH:()=>O,PublicKey:()=>C,SIGNATURE_LENGTH_IN_BYTES:()=>K,SOLANA_SCHEMA:()=>P,STAKE_CONFIG_ID:()=>ze,STAKE_INSTRUCTION_LAYOUTS:()=>je,SYSTEM_INSTRUCTION_LAYOUTS:()=>Tn,SYSVAR_CLOCK_PUBKEY:()=>on,SYSVAR_EPOCH_SCHEDULE_PUBKEY:()=>sn,SYSVAR_INSTRUCTIONS_PUBKEY:()=>an,SYSVAR_RECENT_BLOCKHASHES_PUBKEY:()=>cn,SYSVAR_RENT_PUBKEY:()=>hn,SYSVAR_REWARDS_PUBKEY:()=>dn,SYSVAR_SLOT_HASHES_PUBKEY:()=>fn,SYSVAR_SLOT_HISTORY_PUBKEY:()=>pn,SYSVAR_STAKE_HISTORY_PUBKEY:()=>gn,Secp256k1Program:()=>Ne,SendTransactionError:()=>Kn,SolanaJSONRPCError:()=>Wn,SolanaJSONRPCErrorCode:()=>Dn,StakeAuthorizationLayout:()=>Fe,StakeInstruction:()=>We,StakeProgram:()=>qe,Struct:()=>x,SystemInstruction:()=>Sn,SystemProgram:()=>xn,Transaction:()=>ln,TransactionExpiredBlockheightExceededError:()=>D,TransactionExpiredTimeoutError:()=>W,TransactionInstruction:()=>en,TransactionMessage:()=>rn,TransactionStatus:()=>nn,VALIDATOR_INFO_KEY:()=>Xe,VERSION_PREFIX_MASK:()=>z,VOTE_PROGRAM_ID:()=>Qe,ValidatorInfo:()=>Je,VersionedMessage:()=>Q,VersionedTransaction:()=>un,VoteAccount:()=>tl,VoteAuthorizationLayout:()=>Ze,VoteInit:()=>He,VoteInstruction:()=>Ge,VoteProgram:()=>Ve,clusterApiUrl:()=>il,sendAndConfirmRawTransaction:()=>ol,sendAndConfirmTransaction:()=>yn});var l=e(22708),r=e(8448),u=e(21686),i=e(62197),o=e.n(i),s=e(17022),a=e.n(s),c=e(53929),h=e(83871),d=e(96346),f=e(41528),p=e(50974),g=e(50714),y=e(87414),m=e.n(y),b=e(48796),w=e(10846),v=e(89580);u.P6.sha512Sync=(...n)=>(0,r.o)(u.P6.concatBytes(...n));const k=u.P6.randomPrivateKey,I=()=>{const n=u.P6.randomPrivateKey(),t=A(n),e=new Uint8Array(64);return e.set(n),e.set(t,32),{publicKey:t,secretKey:e}},A=u.Z_.getPublicKey;function _(n){try{return u.E9.fromHex(n,!0),!0}catch{return!1}}const E=(n,t)=>u.Z_.sign(n,t.slice(0,32)),S=u.Z_.verify,T=n=>l.lW.isBuffer(n)?n:n instanceof Uint8Array?l.lW.from(n.buffer,n.byteOffset,n.byteLength):l.lW.from(n);class x{constructor(n){Object.assign(this,n)}encode(){return l.lW.from((0,h.serialize)(P,this))}static decode(n){return(0,h.deserialize)(P,this,n)}static decodeUnchecked(n){return(0,h.deserializeUnchecked)(P,this,n)}}class B extends x{constructor(n){if(super(n),this.enum="",1!==Object.keys(n).length)throw new Error("Enum can only take single value");Object.keys(n).map((n=>{this.enum=n}))}}const P=new Map,R=32,O=32;let M=1;class C extends x{constructor(n){if(super({}),this._bn=void 0,function(n){return void 0!==n._bn}(n))this._bn=n._bn;else{if("string"==typeof n){const t=a().decode(n);if(t.length!=O)throw new Error("Invalid public key input");this._bn=new(o())(t)}else this._bn=new(o())(n);if(this._bn.byteLength()>32)throw new Error("Invalid public key input")}}static unique(){const n=new C(M);return M+=1,new C(n.toBuffer())}equals(n){return this._bn.eq(n._bn)}toBase58(){return a().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){return this.toBuffer()}toBuffer(){const n=this._bn.toArrayLike(l.lW);if(n.length===O)return n;const t=l.lW.alloc(32);return n.copy(t,32-n.length),t}toString(){return this.toBase58()}static async createWithSeed(n,t,e){const r=l.lW.concat([n.toBuffer(),l.lW.from(t),e.toBuffer()]),u=(0,c.J)(r);return new C(u)}static createProgramAddressSync(n,t){let e=l.lW.alloc(0);n.forEach((function(n){if(n.length>R)throw new TypeError("Max seed length exceeded");e=l.lW.concat([e,T(n)])})),e=l.lW.concat([e,t.toBuffer(),l.lW.from("ProgramDerivedAddress")]);const r=(0,c.J)(e);if(_(r))throw new Error("Invalid seeds, address must fall off the curve");return new C(r)}static async createProgramAddress(n,t){return this.createProgramAddressSync(n,t)}static findProgramAddressSync(n,t){let e,r=255;for(;0!=r;){try{const u=n.concat(l.lW.from([r]));e=this.createProgramAddressSync(u,t)}catch(u){if(u instanceof TypeError)throw u;r--;continue}return[e,r]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(n,t){return this.findProgramAddressSync(n,t)}static isOnCurve(n){return _(new C(n).toBytes())}}C.default=new C("11111111111111111111111111111111"),P.set(C,{kind:"struct",fields:[["_bn","u256"]]});class U{constructor(n){if(this._publicKey=void 0,this._secretKey=void 0,n){const t=T(n);if(64!==n.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=T(k()),this._publicKey=T(A(this._secretKey))}get publicKey(){return new C(this._publicKey)}get secretKey(){return l.lW.concat([this._secretKey,this._publicKey],64)}}const L=new C("BPFLoader1111111111111111111111111111111111"),N=1232,z=127,K=64;class D extends Error{constructor(n){super(`Signature ${n} has expired: block height exceeded.`),this.signature=void 0,this.signature=n}}Object.defineProperty(D.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class W extends Error{constructor(n,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${n} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=n}}Object.defineProperty(W.prototype,"name",{value:"TransactionExpiredTimeoutError"});class j{constructor(n,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=n,this.accountKeysFromLookups=t}keySegments(){const n=[this.staticAccountKeys];return this.accountKeysFromLookups&&(n.push(this.accountKeysFromLookups.writable),n.push(this.accountKeysFromLookups.readonly)),n}get(n){for(const t of this.keySegments()){if(n<t.length)return t[n];n-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(n){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((n,e)=>{t.set(n.toBase58(),e)}));const e=n=>{const e=t.get(n.toBase58());if(void 0===e)throw new Error("Encountered an unknown instruction account key during compilation");return e};return n.map((n=>({programIdIndex:e(n.programId),accountKeyIndexes:n.keys.map((n=>e(n.pubkey))),data:n.data})))}}const F=(n="publicKey")=>d.blob(32,n),q=(n="signature")=>d.blob(64,n),H=(n="string")=>{const t=d.struct([d.u32("length"),d.u32("lengthPadding"),d.blob(d.offset(d.u32(),-8),"chars")],n),e=t.decode.bind(t),r=t.encode.bind(t),u=t;return u.decode=(n,t)=>e(n,t).chars.toString(),u.encode=(n,t,e)=>{const u={chars:l.lW.from(n,"utf8")};return r(u,t,e)},u.alloc=n=>d.u32().span+d.u32().span+l.lW.from(n,"utf8").length,u};function G(n,t){const e=n=>{if(n.span>=0)return n.span;if("function"==typeof n.alloc)return n.alloc(t[n.property]);if("count"in n&&"elementLayout"in n){const l=t[n.property];if(Array.isArray(l))return l.length*e(n.elementLayout)}else if("fields"in n)return G({layout:n},t[n.property]);return 0};let l=0;return n.layout.fields.forEach((n=>{l+=e(n)})),l}function $(n){let t=0,e=0;for(;;){let l=n.shift();if(t|=(127&l)<<7*e,e+=1,0==(128&l))break}return t}function Z(n,t){let e=t;for(;;){let t=127&e;if(e>>=7,0==e){n.push(t);break}t|=128,n.push(t)}}function V(n,t){if(!n)throw new Error(t||"Assertion failed")}class X{constructor(n,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=n,this.keyMetaMap=t}static compile(n,t){const e=new Map,l=n=>{const t=n.toBase58();let l=e.get(t);return void 0===l&&(l={isSigner:!1,isWritable:!1,isInvoked:!1},e.set(t,l)),l},r=l(t);r.isSigner=!0,r.isWritable=!0;for(const u of n){l(u.programId).isInvoked=!0;for(const n of u.keys){const t=l(n.pubkey);t.isSigner||(t.isSigner=n.isSigner),t.isWritable||(t.isWritable=n.isWritable)}}return new X(t,e)}getMessageComponents(){const n=[...this.keyMetaMap.entries()];V(n.length<=256,"Max static account keys length exceeded");const t=n.filter((([,n])=>n.isSigner&&n.isWritable)),e=n.filter((([,n])=>n.isSigner&&!n.isWritable)),l=n.filter((([,n])=>!n.isSigner&&n.isWritable)),r=n.filter((([,n])=>!n.isSigner&&!n.isWritable)),u={numRequiredSignatures:t.length+e.length,numReadonlySignedAccounts:e.length,numReadonlyUnsignedAccounts:r.length};{V(t.length>0,"Expected at least one writable signer key");const[n]=t[0];V(n===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[u,[...t.map((([n])=>new C(n))),...e.map((([n])=>new C(n))),...l.map((([n])=>new C(n))),...r.map((([n])=>new C(n)))]]}extractTableLookup(n){const[t,e]=this.drainKeysFoundInLookupTable(n.state.addresses,(n=>!n.isSigner&&!n.isInvoked&&n.isWritable)),[l,r]=this.drainKeysFoundInLookupTable(n.state.addresses,(n=>!n.isSigner&&!n.isInvoked&&!n.isWritable));if(0!==t.length||0!==l.length)return[{accountKey:n.key,writableIndexes:t,readonlyIndexes:l},{writable:e,readonly:r}]}drainKeysFoundInLookupTable(n,t){const e=new Array,l=new Array;for(const[r,u]of this.keyMetaMap.entries())if(t(u)){const t=new C(r),u=n.findIndex((n=>n.equals(t)));u>=0&&(V(u<256,"Max lookup table index exceeded"),e.push(u),l.push(t),this.keyMetaMap.delete(r))}return[e,l]}}class Y{constructor(n){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=n.header,this.accountKeys=n.accountKeys.map((n=>new C(n))),this.recentBlockhash=n.recentBlockhash,this.instructions=n.instructions,this.instructions.forEach((n=>this.indexToProgramIds.set(n.programIdIndex,this.accountKeys[n.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((n=>({programIdIndex:n.programIdIndex,accountKeyIndexes:n.accounts,data:a().decode(n.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new j(this.staticAccountKeys)}static compile(n){const t=X.compile(n.instructions,n.payerKey),[e,l]=t.getMessageComponents(),r=new j(l).compileInstructions(n.instructions).map((n=>({programIdIndex:n.programIdIndex,accounts:n.accountKeyIndexes,data:a().encode(n.data)})));return new Y({header:e,accountKeys:l,recentBlockhash:n.recentBlockhash,instructions:r})}isAccountSigner(n){return n<this.header.numRequiredSignatures}isAccountWritable(n){const t=this.header.numRequiredSignatures;if(n>=this.header.numRequiredSignatures){return n-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts}return n<t-this.header.numReadonlySignedAccounts}isProgramId(n){return this.indexToProgramIds.has(n)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((n,t)=>!this.isProgramId(t)))}serialize(){const n=this.accountKeys.length;let t=[];Z(t,n);const e=this.instructions.map((n=>{const{accounts:t,programIdIndex:e}=n,r=Array.from(a().decode(n.data));let u=[];Z(u,t.length);let i=[];return Z(i,r.length),{programIdIndex:e,keyIndicesCount:l.lW.from(u),keyIndices:t,dataLength:l.lW.from(i),data:r}}));let r=[];Z(r,e.length);let u=l.lW.alloc(N);l.lW.from(r).copy(u);let i=r.length;e.forEach((n=>{const t=d.struct([d.u8("programIdIndex"),d.blob(n.keyIndicesCount.length,"keyIndicesCount"),d.seq(d.u8("keyIndex"),n.keyIndices.length,"keyIndices"),d.blob(n.dataLength.length,"dataLength"),d.seq(d.u8("userdatum"),n.data.length,"data")]).encode(n,u,i);i+=t})),u=u.slice(0,i);const o=d.struct([d.blob(1,"numRequiredSignatures"),d.blob(1,"numReadonlySignedAccounts"),d.blob(1,"numReadonlyUnsignedAccounts"),d.blob(t.length,"keyCount"),d.seq(F("key"),n,"keys"),F("recentBlockhash")]),s={numRequiredSignatures:l.lW.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:l.lW.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:l.lW.from([this.header.numReadonlyUnsignedAccounts]),keyCount:l.lW.from(t),keys:this.accountKeys.map((n=>T(n.toBytes()))),recentBlockhash:a().decode(this.recentBlockhash)};let c=l.lW.alloc(2048);const h=o.encode(s,c);return u.copy(c,h),c.slice(0,h+u.length)}static from(n){let t=[...n];const e=t.shift();if(e!==(e&z))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const r=t.shift(),u=t.shift(),i=$(t);let o=[];for(let a=0;a<i;a++){const n=t.slice(0,O);t=t.slice(O),o.push(new C(l.lW.from(n)))}const s=t.slice(0,O);t=t.slice(O);const c=$(t);let h=[];for(let f=0;f<c;f++){const n=t.shift(),e=$(t),r=t.slice(0,e);t=t.slice(e);const u=$(t),i=t.slice(0,u),o=a().encode(l.lW.from(i));t=t.slice(u),h.push({programIdIndex:n,accounts:r,data:o})}const d={header:{numRequiredSignatures:e,numReadonlySignedAccounts:r,numReadonlyUnsignedAccounts:u},recentBlockhash:a().encode(l.lW.from(s)),accountKeys:o,instructions:h};return new Y(d)}}class J{constructor(n){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=n.header,this.staticAccountKeys=n.staticAccountKeys,this.recentBlockhash=n.recentBlockhash,this.compiledInstructions=n.compiledInstructions,this.addressTableLookups=n.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let n=0;for(const t of this.addressTableLookups)n+=t.readonlyIndexes.length+t.writableIndexes.length;return n}getAccountKeys(n){let t;if(n&&"accountKeysFromLookups"in n){if(this.numAccountKeysFromLookups!=n.accountKeysFromLookups.writable.length+n.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=n.accountKeysFromLookups}else if(n&&"addressLookupTableAccounts"in n)t=this.resolveAddressTableLookups(n.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new j(this.staticAccountKeys,t)}isAccountSigner(n){return n<this.header.numRequiredSignatures}isAccountWritable(n){const t=this.header.numRequiredSignatures,e=this.staticAccountKeys.length;if(n>=e){return n-e<this.addressTableLookups.reduce(((n,t)=>n+t.writableIndexes.length),0)}if(n>=this.header.numRequiredSignatures){return n-t<e-t-this.header.numReadonlyUnsignedAccounts}return n<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(n){const t={writable:[],readonly:[]};for(const e of this.addressTableLookups){const l=n.find((n=>n.key.equals(e.accountKey)));if(!l)throw new Error(`Failed to find address lookup table account for table key ${e.accountKey.toBase58()}`);for(const n of e.writableIndexes){if(!(n<l.state.addresses.length))throw new Error(`Failed to find address for index ${n} in address lookup table ${e.accountKey.toBase58()}`);t.writable.push(l.state.addresses[n])}for(const n of e.readonlyIndexes){if(!(n<l.state.addresses.length))throw new Error(`Failed to find address for index ${n} in address lookup table ${e.accountKey.toBase58()}`);t.readonly.push(l.state.addresses[n])}}return t}static compile(n){const t=X.compile(n.instructions,n.payerKey),e=new Array,l={writable:new Array,readonly:new Array},r=n.addressLookupTableAccounts||[];for(const s of r){const n=t.extractTableLookup(s);if(void 0!==n){const[t,{writable:r,readonly:u}]=n;e.push(t),l.writable.push(...r),l.readonly.push(...u)}}const[u,i]=t.getMessageComponents(),o=new j(i,l).compileInstructions(n.instructions);return new J({header:u,staticAccountKeys:i,recentBlockhash:n.recentBlockhash,compiledInstructions:o,addressTableLookups:e})}serialize(){const n=Array();Z(n,this.staticAccountKeys.length);const t=this.serializeInstructions(),e=Array();Z(e,this.compiledInstructions.length);const l=this.serializeAddressTableLookups(),r=Array();Z(r,this.addressTableLookups.length);const u=d.struct([d.u8("prefix"),d.struct([d.u8("numRequiredSignatures"),d.u8("numReadonlySignedAccounts"),d.u8("numReadonlyUnsignedAccounts")],"header"),d.blob(n.length,"staticAccountKeysLength"),d.seq(F(),this.staticAccountKeys.length,"staticAccountKeys"),F("recentBlockhash"),d.blob(e.length,"instructionsLength"),d.blob(t.length,"serializedInstructions"),d.blob(r.length,"addressTableLookupsLength"),d.blob(l.length,"serializedAddressTableLookups")]),i=new Uint8Array(N),o=u.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(n),staticAccountKeys:this.staticAccountKeys.map((n=>n.toBytes())),recentBlockhash:a().decode(this.recentBlockhash),instructionsLength:new Uint8Array(e),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(r),serializedAddressTableLookups:l},i);return i.slice(0,o)}serializeInstructions(){let n=0;const t=new Uint8Array(N);for(const e of this.compiledInstructions){const l=Array();Z(l,e.accountKeyIndexes.length);const r=Array();Z(r,e.data.length);n+=d.struct([d.u8("programIdIndex"),d.blob(l.length,"encodedAccountKeyIndexesLength"),d.seq(d.u8(),e.accountKeyIndexes.length,"accountKeyIndexes"),d.blob(r.length,"encodedDataLength"),d.blob(e.data.length,"data")]).encode({programIdIndex:e.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(l),accountKeyIndexes:e.accountKeyIndexes,encodedDataLength:new Uint8Array(r),data:e.data},t,n)}return t.slice(0,n)}serializeAddressTableLookups(){let n=0;const t=new Uint8Array(N);for(const e of this.addressTableLookups){const l=Array();Z(l,e.writableIndexes.length);const r=Array();Z(r,e.readonlyIndexes.length);n+=d.struct([F("accountKey"),d.blob(l.length,"encodedWritableIndexesLength"),d.seq(d.u8(),e.writableIndexes.length,"writableIndexes"),d.blob(r.length,"encodedReadonlyIndexesLength"),d.seq(d.u8(),e.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:e.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(l),writableIndexes:e.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(r),readonlyIndexes:e.readonlyIndexes},t,n)}return t.slice(0,n)}static deserialize(n){let t=[...n];const e=t.shift(),l=e&z;V(e!==l,"Expected versioned message but received legacy message");V(0===l,`Expected versioned message with version 0 but found version ${l}`);const r={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},u=[],i=$(t);for(let a=0;a<i;a++)u.push(new C(t.splice(0,O)));const o=a().encode(t.splice(0,O)),s=$(t),c=[];for(let a=0;a<s;a++){const n=t.shift(),e=$(t),l=t.splice(0,e),r=$(t),u=new Uint8Array(t.splice(0,r));c.push({programIdIndex:n,accountKeyIndexes:l,data:u})}const h=$(t),d=[];for(let a=0;a<h;a++){const n=new C(t.splice(0,O)),e=$(t),l=t.splice(0,e),r=$(t),u=t.splice(0,r);d.push({accountKey:n,writableIndexes:l,readonlyIndexes:u})}return new J({header:r,staticAccountKeys:u,recentBlockhash:o,compiledInstructions:c,addressTableLookups:d})}}const Q={deserializeMessageVersion(n){const t=n[0],e=t&z;return e===t?"legacy":e},deserialize:n=>{const t=Q.deserializeMessageVersion(n);if("legacy"===t)return Y.from(n);if(0===t)return J.deserialize(n);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let nn;!function(n){n[n.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",n[n.PROCESSED=1]="PROCESSED",n[n.TIMED_OUT=2]="TIMED_OUT"}(nn||(nn={}));const tn=l.lW.alloc(K).fill(0);class en{constructor(n){this.keys=void 0,this.programId=void 0,this.data=l.lW.alloc(0),this.programId=n.programId,this.keys=n.keys,n.data&&(this.data=n.data)}toJSON(){return{keys:this.keys.map((({pubkey:n,isSigner:t,isWritable:e})=>({pubkey:n.toJSON(),isSigner:t,isWritable:e}))),programId:this.programId.toJSON(),data:[...this.data]}}}class ln{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(n){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this._message=void 0,this._json=void 0,n)if(n.feePayer&&(this.feePayer=n.feePayer),n.signatures&&(this.signatures=n.signatures),Object.prototype.hasOwnProperty.call(n,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:e}=n;this.recentBlockhash=t,this.lastValidBlockHeight=e}else{const{recentBlockhash:t,nonceInfo:e}=n;e&&(this.nonceInfo=e),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((n=>n.toJSON())),signers:this.signatures.map((({publicKey:n})=>n.toJSON()))}}add(...n){if(0===n.length)throw new Error("No instructions");return n.forEach((n=>{"instructions"in n?this.instructions=this.instructions.concat(n.instructions):"data"in n&&"programId"in n&&"keys"in n?this.instructions.push(n):this.instructions.push(new en(n))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let n,t,e;if(this.nonceInfo?(n=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(n=this.recentBlockhash,t=this.instructions),!n)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)e=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");e=this.signatures[0].publicKey}for(let a=0;a<t.length;a++)if(void 0===t[a].programId)throw new Error(`Transaction instruction index ${a} has undefined program id`);const l=[],r=[];t.forEach((n=>{n.keys.forEach((n=>{r.push({...n})}));const t=n.programId.toString();l.includes(t)||l.push(t)})),l.forEach((n=>{r.push({pubkey:new C(n),isSigner:!1,isWritable:!1})}));const u=[];r.forEach((n=>{const t=n.pubkey.toString(),e=u.findIndex((n=>n.pubkey.toString()===t));e>-1?(u[e].isWritable=u[e].isWritable||n.isWritable,u[e].isSigner=u[e].isSigner||n.isSigner):u.push(n)})),u.sort((function(n,t){return n.isSigner!==t.isSigner?n.isSigner?-1:1:n.isWritable!==t.isWritable?n.isWritable?-1:1:n.pubkey.toBase58().localeCompare(t.pubkey.toBase58())}));const i=u.findIndex((n=>n.pubkey.equals(e)));if(i>-1){const[n]=u.splice(i,1);n.isSigner=!0,n.isWritable=!0,u.unshift(n)}else u.unshift({pubkey:e,isSigner:!0,isWritable:!0});for(const a of this.signatures){const n=u.findIndex((n=>n.pubkey.equals(a.publicKey)));if(!(n>-1))throw new Error(`unknown signer: ${a.publicKey.toString()}`);u[n].isSigner||(u[n].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let o=0,s=0,c=0;const h=[],d=[];u.forEach((({pubkey:n,isSigner:t,isWritable:e})=>{t?(h.push(n.toString()),o+=1,e||(s+=1)):(d.push(n.toString()),e||(c+=1))}));const f=h.concat(d),p=t.map((n=>{const{data:t,programId:e}=n;return{programIdIndex:f.indexOf(e.toString()),accounts:n.keys.map((n=>f.indexOf(n.pubkey.toString()))),data:a().encode(t)}}));return p.forEach((n=>{V(n.programIdIndex>=0),n.accounts.forEach((n=>V(n>=0)))})),new Y({header:{numRequiredSignatures:o,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:c},accountKeys:f,recentBlockhash:n,instructions:p})}_compile(){const n=this.compileMessage(),t=n.accountKeys.slice(0,n.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every(((n,e)=>t[e].equals(n.publicKey))))return n}return this.signatures=t.map((n=>({signature:null,publicKey:n}))),n}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(n){return(await n.getFeeForMessage(this.compileMessage())).value}setSigners(...n){if(0===n.length)throw new Error("No signers");const t=new Set;this.signatures=n.filter((n=>{const e=n.toString();return!t.has(e)&&(t.add(e),!0)})).map((n=>({signature:null,publicKey:n})))}sign(...n){if(0===n.length)throw new Error("No signers");const t=new Set,e=[];for(const r of n){const n=r.publicKey.toString();t.has(n)||(t.add(n),e.push(r))}this.signatures=e.map((n=>({signature:null,publicKey:n.publicKey})));const l=this._compile();this._partialSign(l,...e)}partialSign(...n){if(0===n.length)throw new Error("No signers");const t=new Set,e=[];for(const r of n){const n=r.publicKey.toString();t.has(n)||(t.add(n),e.push(r))}const l=this._compile();this._partialSign(l,...e)}_partialSign(n,...t){const e=n.serialize();t.forEach((n=>{const t=E(e,n.secretKey);this._addSignature(n.publicKey,T(t))}))}addSignature(n,t){this._compile(),this._addSignature(n,t)}_addSignature(n,t){V(64===t.length);const e=this.signatures.findIndex((t=>n.equals(t.publicKey)));if(e<0)throw new Error(`unknown signer: ${n.toString()}`);this.signatures[e].signature=l.lW.from(t)}verifySignatures(){return this._verifySignatures(this.serializeMessage(),!0)}_verifySignatures(n,t){for(const{signature:e,publicKey:l}of this.signatures)if(null===e){if(t)return!1}else if(!S(e,n,l.toBuffer()))return!1;return!0}serialize(n){const{requireAllSignatures:t,verifySignatures:e}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},n),l=this.serializeMessage();if(e&&!this._verifySignatures(l,t))throw new Error("Signature verification failed");return this._serialize(l)}_serialize(n){const{signatures:t}=this,e=[];Z(e,t.length);const r=e.length+64*t.length+n.length,u=l.lW.alloc(r);return V(t.length<256),l.lW.from(e).copy(u,0),t.forEach((({signature:n},t)=>{null!==n&&(V(64===n.length,"signature has invalid length"),l.lW.from(n).copy(u,e.length+64*t))})),n.copy(u,e.length+64*t.length),V(u.length<=N,`Transaction too large: ${u.length} > ${N}`),u}get keys(){return V(1===this.instructions.length),this.instructions[0].keys.map((n=>n.pubkey))}get programId(){return V(1===this.instructions.length),this.instructions[0].programId}get data(){return V(1===this.instructions.length),this.instructions[0].data}static from(n){let t=[...n];const e=$(t);let r=[];for(let u=0;u<e;u++){const n=t.slice(0,K);t=t.slice(K),r.push(a().encode(l.lW.from(n)))}return ln.populate(Y.from(t),r)}static populate(n,t=[]){const e=new ln;return e.recentBlockhash=n.recentBlockhash,n.header.numRequiredSignatures>0&&(e.feePayer=n.accountKeys[0]),t.forEach(((t,l)=>{const r={signature:t==a().encode(tn)?null:a().decode(t),publicKey:n.accountKeys[l]};e.signatures.push(r)})),n.instructions.forEach((t=>{const l=t.accounts.map((t=>{const l=n.accountKeys[t];return{pubkey:l,isSigner:e.signatures.some((n=>n.publicKey.toString()===l.toString()))||n.isAccountSigner(t),isWritable:n.isAccountWritable(t)}}));e.instructions.push(new en({keys:l,programId:n.accountKeys[t.programIdIndex],data:a().decode(t.data)}))})),e._message=n,e._json=e.toJSON(),e}}class rn{constructor(n){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=n.payerKey,this.instructions=n.instructions,this.recentBlockhash=n.recentBlockhash}static decompile(n,t){const{header:e,compiledInstructions:l,recentBlockhash:r}=n,{numRequiredSignatures:u,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:o}=e,s=u-i;V(s>0,"Message header is invalid");const a=n.staticAccountKeys.length-o;V(a>=0,"Message header is invalid");const c=n.getAccountKeys(t),h=c.get(0);if(void 0===h)throw new Error("Failed to decompile message because no account keys were found");const d=[];for(const f of l){const n=[];for(const l of f.accountKeyIndexes){const t=c.get(l);if(void 0===t)throw new Error(`Failed to find key for account key index ${l}`);let r;r=l<u?l<s:l<c.staticAccountKeys.length?l-u<a:l-c.staticAccountKeys.length<c.accountKeysFromLookups.writable.length,n.push({pubkey:t,isSigner:l<e.numRequiredSignatures,isWritable:r})}const t=c.get(f.programIdIndex);if(void 0===t)throw new Error(`Failed to find program id for program id index ${f.programIdIndex}`);d.push(new en({programId:t,data:T(f.data),keys:n}))}return new rn({payerKey:h,instructions:d,recentBlockhash:r})}compileToLegacyMessage(){return Y.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(n){return J.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:n})}}class un{get version(){return this.message.version}constructor(n,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)V(t.length===n.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let e=0;e<n.header.numRequiredSignatures;e++)t.push(new Uint8Array(K));this.signatures=t}this.message=n}serialize(){const n=this.message.serialize(),t=Array();Z(t,this.signatures.length);const e=d.struct([d.blob(t.length,"encodedSignaturesLength"),d.seq(q(),this.signatures.length,"signatures"),d.blob(n.length,"serializedMessage")]),l=new Uint8Array(2048),r=e.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:n},l);return l.slice(0,r)}static deserialize(n){let t=[...n];const e=[],l=$(t);for(let u=0;u<l;u++)e.push(new Uint8Array(t.splice(0,K)));const r=Q.deserialize(new Uint8Array(t));return new un(r,e)}sign(n){const t=this.message.serialize(),e=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const l of n){const n=e.findIndex((n=>n.equals(l.publicKey)));V(n>=0,`Cannot sign with non signer key ${l.publicKey.toBase58()}`),this.signatures[n]=E(t,l.secretKey)}}addSignature(n,t){V(64===t.byteLength,"Signature must be 64 bytes long");const e=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(n)));V(e>=0,`Can not add signature; \`${n.toBase58()}\` is not required to sign this transaction`),this.signatures[e]=t}}const on=new C("SysvarC1ock11111111111111111111111111111111"),sn=new C("SysvarEpochSchedu1e111111111111111111111111"),an=new C("Sysvar1nstructions1111111111111111111111111"),cn=new C("SysvarRecentB1ockHashes11111111111111111111"),hn=new C("SysvarRent111111111111111111111111111111111"),dn=new C("SysvarRewards111111111111111111111111111111"),fn=new C("SysvarS1otHashes111111111111111111111111111"),pn=new C("SysvarS1otHistory11111111111111111111111111"),gn=new C("SysvarStakeHistory1111111111111111111111111");async function yn(n,t,e,l){const r=l&&{skipPreflight:l.skipPreflight,preflightCommitment:l.preflightCommitment||l.commitment,maxRetries:l.maxRetries,minContextSlot:l.minContextSlot},u=await n.sendTransaction(t,e,r),i=null!=t.recentBlockhash&&null!=t.lastValidBlockHeight?(await n.confirmTransaction({signature:u,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},l&&l.commitment)).value:(await n.confirmTransaction(u,l&&l.commitment)).value;if(i.err)throw new Error(`Transaction ${u} failed (${JSON.stringify(i)})`);return u}function mn(n){return new Promise((t=>setTimeout(t,n)))}function bn(n,t){const e=n.layout.span>=0?n.layout.span:G(n,t),r=l.lW.alloc(e),u=Object.assign({instruction:n.index},t);return n.layout.encode(u,r),r}function wn(n,t){let e;try{e=n.layout.decode(t)}catch(l){throw new Error("invalid instruction; "+l)}if(e.instruction!==n.index)throw new Error(`invalid instruction; instruction index mismatch ${e.instruction} != ${n.index}`);return e}const vn=d.nu64("lamportsPerSignature"),kn=d.struct([d.u32("version"),d.u32("state"),F("authorizedPubkey"),F("nonce"),d.struct([vn],"feeCalculator")]),In=kn.span;class An{constructor(n){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=n.authorizedPubkey,this.nonce=n.nonce,this.feeCalculator=n.feeCalculator}static fromAccountData(n){const t=kn.decode(T(n),0);return new An({authorizedPubkey:new C(t.authorizedPubkey),nonce:new C(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const _n=(En=8,n=>{const t=(0,d.blob)(En,n),{encode:e,decode:r}=(n=>({decode:n.decode.bind(n),encode:n.encode.bind(n)}))(t),u=t;return u.decode=(n,t)=>{const e=r(n,t);return(0,f.toBigIntLE)(l.lW.from(e))},u.encode=(n,t,l)=>{const r=(0,f.toBufferLE)(n,En);return e(r,t,l)},u});var En;class Sn{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(Tn))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a SystemInstruction");return e}static decodeCreateAccount(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{lamports:t,space:e,programId:l}=wn(Tn.Create,n.data);return{fromPubkey:n.keys[0].pubkey,newAccountPubkey:n.keys[1].pubkey,lamports:t,space:e,programId:new C(l)}}static decodeTransfer(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{lamports:t}=wn(Tn.Transfer,n.data);return{fromPubkey:n.keys[0].pubkey,toPubkey:n.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{lamports:t,seed:e,programId:l}=wn(Tn.TransferWithSeed,n.data);return{fromPubkey:n.keys[0].pubkey,basePubkey:n.keys[1].pubkey,toPubkey:n.keys[2].pubkey,lamports:t,seed:e,programId:new C(l)}}static decodeAllocate(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{space:t}=wn(Tn.Allocate,n.data);return{accountPubkey:n.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{base:t,seed:e,space:l,programId:r}=wn(Tn.AllocateWithSeed,n.data);return{accountPubkey:n.keys[0].pubkey,basePubkey:new C(t),seed:e,space:l,programId:new C(r)}}static decodeAssign(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{programId:t}=wn(Tn.Assign,n.data);return{accountPubkey:n.keys[0].pubkey,programId:new C(t)}}static decodeAssignWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{base:t,seed:e,programId:l}=wn(Tn.AssignWithSeed,n.data);return{accountPubkey:n.keys[0].pubkey,basePubkey:new C(t),seed:e,programId:new C(l)}}static decodeCreateWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{base:t,seed:e,lamports:l,space:r,programId:u}=wn(Tn.CreateWithSeed,n.data);return{fromPubkey:n.keys[0].pubkey,newAccountPubkey:n.keys[1].pubkey,basePubkey:new C(t),seed:e,lamports:l,space:r,programId:new C(u)}}static decodeNonceInitialize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{authorized:t}=wn(Tn.InitializeNonceAccount,n.data);return{noncePubkey:n.keys[0].pubkey,authorizedPubkey:new C(t)}}static decodeNonceAdvance(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3),wn(Tn.AdvanceNonceAccount,n.data),{noncePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey}}static decodeNonceWithdraw(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,5);const{lamports:t}=wn(Tn.WithdrawNonceAccount,n.data);return{noncePubkey:n.keys[0].pubkey,toPubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{authorized:t}=wn(Tn.AuthorizeNonceAccount,n.data);return{noncePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[1].pubkey,newAuthorizedPubkey:new C(t)}}static checkProgramId(n){if(!n.equals(xn.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}const Tn=Object.freeze({Create:{index:0,layout:d.struct([d.u32("instruction"),d.ns64("lamports"),d.ns64("space"),F("programId")])},Assign:{index:1,layout:d.struct([d.u32("instruction"),F("programId")])},Transfer:{index:2,layout:d.struct([d.u32("instruction"),_n("lamports")])},CreateWithSeed:{index:3,layout:d.struct([d.u32("instruction"),F("base"),H("seed"),d.ns64("lamports"),d.ns64("space"),F("programId")])},AdvanceNonceAccount:{index:4,layout:d.struct([d.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:d.struct([d.u32("instruction"),F("authorized")])},AuthorizeNonceAccount:{index:7,layout:d.struct([d.u32("instruction"),F("authorized")])},Allocate:{index:8,layout:d.struct([d.u32("instruction"),d.ns64("space")])},AllocateWithSeed:{index:9,layout:d.struct([d.u32("instruction"),F("base"),H("seed"),d.ns64("space"),F("programId")])},AssignWithSeed:{index:10,layout:d.struct([d.u32("instruction"),F("base"),H("seed"),F("programId")])},TransferWithSeed:{index:11,layout:d.struct([d.u32("instruction"),_n("lamports"),H("seed"),F("programId")])},UpgradeNonceAccount:{index:12,layout:d.struct([d.u32("instruction")])}});class xn{constructor(){}static createAccount(n){const t=bn(Tn.Create,{lamports:n.lamports,space:n.space,programId:T(n.programId.toBuffer())});return new en({keys:[{pubkey:n.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:n.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(n){let t,e;if("basePubkey"in n){t=bn(Tn.TransferWithSeed,{lamports:BigInt(n.lamports),seed:n.seed,programId:T(n.programId.toBuffer())}),e=[{pubkey:n.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:n.basePubkey,isSigner:!0,isWritable:!1},{pubkey:n.toPubkey,isSigner:!1,isWritable:!0}]}else{t=bn(Tn.Transfer,{lamports:BigInt(n.lamports)}),e=[{pubkey:n.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:n.toPubkey,isSigner:!1,isWritable:!0}]}return new en({keys:e,programId:this.programId,data:t})}static assign(n){let t,e;if("basePubkey"in n){t=bn(Tn.AssignWithSeed,{base:T(n.basePubkey.toBuffer()),seed:n.seed,programId:T(n.programId.toBuffer())}),e=[{pubkey:n.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:n.basePubkey,isSigner:!0,isWritable:!1}]}else{t=bn(Tn.Assign,{programId:T(n.programId.toBuffer())}),e=[{pubkey:n.accountPubkey,isSigner:!0,isWritable:!0}]}return new en({keys:e,programId:this.programId,data:t})}static createAccountWithSeed(n){const t=bn(Tn.CreateWithSeed,{base:T(n.basePubkey.toBuffer()),seed:n.seed,lamports:n.lamports,space:n.space,programId:T(n.programId.toBuffer())});let e=[{pubkey:n.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:n.newAccountPubkey,isSigner:!1,isWritable:!0}];return n.basePubkey!=n.fromPubkey&&e.push({pubkey:n.basePubkey,isSigner:!0,isWritable:!1}),new en({keys:e,programId:this.programId,data:t})}static createNonceAccount(n){const t=new ln;"basePubkey"in n&&"seed"in n?t.add(xn.createAccountWithSeed({fromPubkey:n.fromPubkey,newAccountPubkey:n.noncePubkey,basePubkey:n.basePubkey,seed:n.seed,lamports:n.lamports,space:In,programId:this.programId})):t.add(xn.createAccount({fromPubkey:n.fromPubkey,newAccountPubkey:n.noncePubkey,lamports:n.lamports,space:In,programId:this.programId}));const e={noncePubkey:n.noncePubkey,authorizedPubkey:n.authorizedPubkey};return t.add(this.nonceInitialize(e)),t}static nonceInitialize(n){const t=bn(Tn.InitializeNonceAccount,{authorized:T(n.authorizedPubkey.toBuffer())}),e={keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:cn,isSigner:!1,isWritable:!1},{pubkey:hn,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new en(e)}static nonceAdvance(n){const t=bn(Tn.AdvanceNonceAccount),e={keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:cn,isSigner:!1,isWritable:!1},{pubkey:n.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new en(e)}static nonceWithdraw(n){const t=bn(Tn.WithdrawNonceAccount,{lamports:n.lamports});return new en({keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:n.toPubkey,isSigner:!1,isWritable:!0},{pubkey:cn,isSigner:!1,isWritable:!1},{pubkey:hn,isSigner:!1,isWritable:!1},{pubkey:n.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(n){const t=bn(Tn.AuthorizeNonceAccount,{authorized:T(n.newAuthorizedPubkey.toBuffer())});return new en({keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:n.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(n){let t,e;if("basePubkey"in n){t=bn(Tn.AllocateWithSeed,{base:T(n.basePubkey.toBuffer()),seed:n.seed,space:n.space,programId:T(n.programId.toBuffer())}),e=[{pubkey:n.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:n.basePubkey,isSigner:!0,isWritable:!1}]}else{t=bn(Tn.Allocate,{space:n.space}),e=[{pubkey:n.accountPubkey,isSigner:!0,isWritable:!0}]}return new en({keys:e,programId:this.programId,data:t})}}xn.programId=new C("11111111111111111111111111111111");const Bn=N-300;class Pn{constructor(){}static getMinNumSignatures(n){return 2*(Math.ceil(n/Pn.chunkSize)+1+1)}static async load(n,t,e,r,u){{const l=await n.getMinimumBalanceForRentExemption(u.length),i=await n.getAccountInfo(e.publicKey,"confirmed");let o=null;if(null!==i){if(i.executable)return console.error("Program load failed, account is already executable"),!1;i.data.length!==u.length&&(o=o||new ln,o.add(xn.allocate({accountPubkey:e.publicKey,space:u.length}))),i.owner.equals(r)||(o=o||new ln,o.add(xn.assign({accountPubkey:e.publicKey,programId:r}))),i.lamports<l&&(o=o||new ln,o.add(xn.transfer({fromPubkey:t.publicKey,toPubkey:e.publicKey,lamports:l-i.lamports})))}else o=(new ln).add(xn.createAccount({fromPubkey:t.publicKey,newAccountPubkey:e.publicKey,lamports:l>0?l:1,space:u.length,programId:r}));null!==o&&await yn(n,o,[t,e],{commitment:"confirmed"})}const i=d.struct([d.u32("instruction"),d.u32("offset"),d.u32("bytesLength"),d.u32("bytesLengthPadding"),d.seq(d.u8("byte"),d.offset(d.u32(),-8),"bytes")]),o=Pn.chunkSize;let s=0,a=u,c=[];for(;a.length>0;){const u=a.slice(0,o),h=l.lW.alloc(o+16);i.encode({instruction:0,offset:s,bytes:u,bytesLength:0,bytesLengthPadding:0},h);const d=(new ln).add({keys:[{pubkey:e.publicKey,isSigner:!0,isWritable:!0}],programId:r,data:h});if(c.push(yn(n,d,[t,e],{commitment:"confirmed"})),n._rpcEndpoint.includes("solana.com")){const n=4;await mn(1e3/n)}s+=o,a=a.slice(o)}await Promise.all(c);{const u=d.struct([d.u32("instruction")]),i=l.lW.alloc(u.span);u.encode({instruction:1},i);const o=(new ln).add({keys:[{pubkey:e.publicKey,isSigner:!0,isWritable:!0},{pubkey:hn,isSigner:!1,isWritable:!1}],programId:r,data:i});await yn(n,o,[t,e],{commitment:"confirmed"})}return!0}}Pn.chunkSize=Bn;const Rn=new C("BPFLoader2111111111111111111111111111111111");class On{static getMinNumSignatures(n){return Pn.getMinNumSignatures(n)}static load(n,t,e,l,r){return Pn.load(n,t,e,r,l)}}var Mn=Object.prototype.toString,Cn=Object.keys||function(n){var t=[];for(var e in n)t.push(e);return t};function Un(n,t){var e,l,r,u,i,o,s;if(!0===n)return"true";if(!1===n)return"false";switch(typeof n){case"object":if(null===n)return null;if(n.toJSON&&"function"==typeof n.toJSON)return Un(n.toJSON(),t);if("[object Array]"===(s=Mn.call(n))){for(r="[",l=n.length-1,e=0;e<l;e++)r+=Un(n[e],!0)+",";return l>-1&&(r+=Un(n[e],!0)),r+"]"}if("[object Object]"===s){for(l=(u=Cn(n).sort()).length,r="",e=0;e<l;)void 0!==(o=Un(n[i=u[e]],!1))&&(r&&(r+=","),r+=JSON.stringify(i)+":"+o),e++;return"{"+r+"}"}return JSON.stringify(n);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(n);default:return isFinite(n)?n:null}}var Ln=function(n){var t=Un(n,!1);if(void 0!==t)return""+t};function Nn(n){let t=0;for(;n>1;)n/=2,t++;return t}class zn{constructor(n,t,e,l,r){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=n,this.leaderScheduleSlotOffset=t,this.warmup=e,this.firstNormalEpoch=l,this.firstNormalSlot=r}getEpoch(n){return this.getEpochAndSlotIndex(n)[0]}getEpochAndSlotIndex(n){if(n<this.firstNormalSlot){const e=Nn(0===(t=n+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-Nn(32)-1;return[e,n-(this.getSlotsInEpoch(e)-32)]}{const t=n-this.firstNormalSlot,e=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+e,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(n){return n<=this.firstNormalEpoch?32*(Math.pow(2,n)-1):(n-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(n){return this.getFirstSlotInEpoch(n)+this.getSlotsInEpoch(n)-1}getSlotsInEpoch(n){return n<this.firstNormalEpoch?Math.pow(2,n+Nn(32)):this.slotsPerEpoch}}class Kn extends Error{constructor(n,t){super(n),this.logs=void 0,this.logs=t}}const Dn={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class Wn extends Error{constructor({code:n,message:t,data:e},l){super(null!=l?`${l}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=n,this.data=e,this.name="SolanaJSONRPCError"}}var jn=globalThis.fetch;class Fn{constructor(n){this.key=void 0,this.state=void 0,this.key=n.key,this.state=n.state}isActive(){const n=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===n}static deserialize(n){const t=function(n,t){let e;try{e=n.layout.decode(t)}catch(l){throw new Error("invalid instruction; "+l)}if(e.typeIndex!==n.index)throw new Error(`invalid account data; account type mismatch ${e.typeIndex} != ${n.index}`);return e}(qn,n),e=n.length-56;V(e>=0,"lookup table is invalid"),V(e%32==0,"lookup table is invalid");const l=e/32,{addresses:r}=d.struct([d.seq(F(),l,"addresses")]).decode(n.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new C(t.authority[0]):void 0,addresses:r.map((n=>new C(n)))}}}const qn={index:1,layout:d.struct([d.u32("typeIndex"),_n("deactivationSlot"),d.nu64("lastExtendedSlot"),d.u8("lastExtendedStartIndex"),d.u8(),d.seq(F(),d.offset(d.u8(),-1),"authority")])},Hn=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;var Gn;const $n=(0,p.oQ)((0,p.eE)(C),(0,p.Z_)(),(n=>new C(n))),Zn=(0,p.bc)([(0,p.Z_)(),(0,p.i0)("base64")]),Vn=(0,p.oQ)((0,p.eE)(l.lW),Zn,(n=>l.lW.from(n[0],"base64"))),Xn=3e4;function Yn(n){let t,e;if("string"==typeof n)t=n;else if(n){const{commitment:l,...r}=n;t=l,e=r}return{commitment:t,config:e}}function Jn(n){return(0,p.G0)([(0,p.dt)({jsonrpc:(0,p.i0)("2.0"),id:(0,p.Z_)(),result:n}),(0,p.dt)({jsonrpc:(0,p.i0)("2.0"),id:(0,p.Z_)(),error:(0,p.dt)({code:(0,p._4)(),message:(0,p.Z_)(),data:(0,p.jt)((0,p.Yj)())})})])}const Qn=Jn((0,p._4)());function nt(n){return(0,p.oQ)(Jn(n),Qn,(t=>"error"in t?t:{...t,result:(0,p.Ue)(t.result,n)}))}function tt(n){return nt((0,p.dt)({context:(0,p.dt)({slot:(0,p.Rx)()}),value:n}))}function et(n){return(0,p.dt)({context:(0,p.dt)({slot:(0,p.Rx)()}),value:n})}function lt(n,t){return 0===n?new J({header:t.header,staticAccountKeys:t.accountKeys.map((n=>new C(n))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((n=>({programIdIndex:n.programIdIndex,accountKeyIndexes:n.accounts,data:a().decode(n.data)}))),addressTableLookups:t.addressTableLookups}):new Y(t)}const rt=(0,p.dt)({foundation:(0,p.Rx)(),foundationTerm:(0,p.Rx)(),initial:(0,p.Rx)(),taper:(0,p.Rx)(),terminal:(0,p.Rx)()}),ut=nt((0,p.IX)((0,p.AG)((0,p.dt)({epoch:(0,p.Rx)(),effectiveSlot:(0,p.Rx)(),amount:(0,p.Rx)(),postBalance:(0,p.Rx)()})))),it=(0,p.dt)({epoch:(0,p.Rx)(),slotIndex:(0,p.Rx)(),slotsInEpoch:(0,p.Rx)(),absoluteSlot:(0,p.Rx)(),blockHeight:(0,p.jt)((0,p.Rx)()),transactionCount:(0,p.jt)((0,p.Rx)())}),ot=(0,p.dt)({slotsPerEpoch:(0,p.Rx)(),leaderScheduleSlotOffset:(0,p.Rx)(),warmup:(0,p.O7)(),firstNormalEpoch:(0,p.Rx)(),firstNormalSlot:(0,p.Rx)()}),st=(0,p.IM)((0,p.Z_)(),(0,p.IX)((0,p.Rx)())),at=(0,p.AG)((0,p.G0)([(0,p.dt)({}),(0,p.Z_)()])),ct=(0,p.dt)({err:at}),ht=(0,p.i0)("receivedSignature"),dt=(0,p.dt)({"solana-core":(0,p.Z_)(),"feature-set":(0,p.jt)((0,p.Rx)())}),ft=tt((0,p.dt)({err:(0,p.AG)((0,p.G0)([(0,p.dt)({}),(0,p.Z_)()])),logs:(0,p.AG)((0,p.IX)((0,p.Z_)())),accounts:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.AG)((0,p.dt)({executable:(0,p.O7)(),owner:(0,p.Z_)(),lamports:(0,p.Rx)(),data:(0,p.IX)((0,p.Z_)()),rentEpoch:(0,p.jt)((0,p.Rx)())}))))),unitsConsumed:(0,p.jt)((0,p.Rx)()),returnData:(0,p.jt)((0,p.AG)((0,p.dt)({programId:(0,p.Z_)(),data:(0,p.bc)([(0,p.Z_)(),(0,p.i0)("base64")])})))})),pt=tt((0,p.dt)({byIdentity:(0,p.IM)((0,p.Z_)(),(0,p.IX)((0,p.Rx)())),range:(0,p.dt)({firstSlot:(0,p.Rx)(),lastSlot:(0,p.Rx)()})}));const gt=nt(rt),yt=nt(it),mt=nt(ot),bt=nt(st),wt=nt((0,p.Rx)()),vt=tt((0,p.dt)({total:(0,p.Rx)(),circulating:(0,p.Rx)(),nonCirculating:(0,p.Rx)(),nonCirculatingAccounts:(0,p.IX)($n)})),kt=(0,p.dt)({amount:(0,p.Z_)(),uiAmount:(0,p.AG)((0,p.Rx)()),decimals:(0,p.Rx)(),uiAmountString:(0,p.jt)((0,p.Z_)())}),It=tt((0,p.IX)((0,p.dt)({address:$n,amount:(0,p.Z_)(),uiAmount:(0,p.AG)((0,p.Rx)()),decimals:(0,p.Rx)(),uiAmountString:(0,p.jt)((0,p.Z_)())}))),At=tt((0,p.IX)((0,p.dt)({pubkey:$n,account:(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:Vn,rentEpoch:(0,p.Rx)()})}))),_t=(0,p.dt)({program:(0,p.Z_)(),parsed:(0,p._4)(),space:(0,p.Rx)()}),Et=tt((0,p.IX)((0,p.dt)({pubkey:$n,account:(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:_t,rentEpoch:(0,p.Rx)()})}))),St=tt((0,p.IX)((0,p.dt)({lamports:(0,p.Rx)(),address:$n}))),Tt=(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:Vn,rentEpoch:(0,p.Rx)()}),xt=(0,p.dt)({pubkey:$n,account:Tt}),Bt=(0,p.oQ)((0,p.G0)([(0,p.eE)(l.lW),_t]),(0,p.G0)([Zn,_t]),(n=>Array.isArray(n)?(0,p.Ue)(n,Vn):n)),Pt=(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:Bt,rentEpoch:(0,p.Rx)()}),Rt=(0,p.dt)({pubkey:$n,account:Pt}),Ot=(0,p.dt)({state:(0,p.G0)([(0,p.i0)("active"),(0,p.i0)("inactive"),(0,p.i0)("activating"),(0,p.i0)("deactivating")]),active:(0,p.Rx)(),inactive:(0,p.Rx)()}),Mt=nt((0,p.IX)((0,p.dt)({signature:(0,p.Z_)(),slot:(0,p.Rx)(),err:at,memo:(0,p.AG)((0,p.Z_)()),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),Ct=nt((0,p.IX)((0,p.dt)({signature:(0,p.Z_)(),slot:(0,p.Rx)(),err:at,memo:(0,p.AG)((0,p.Z_)()),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),Ut=(0,p.dt)({subscription:(0,p.Rx)(),result:et(Tt)}),Lt=(0,p.dt)({pubkey:$n,account:Tt}),Nt=(0,p.dt)({subscription:(0,p.Rx)(),result:et(Lt)}),zt=(0,p.dt)({parent:(0,p.Rx)(),slot:(0,p.Rx)(),root:(0,p.Rx)()}),Kt=(0,p.dt)({subscription:(0,p.Rx)(),result:zt}),Dt=(0,p.G0)([(0,p.dt)({type:(0,p.G0)([(0,p.i0)("firstShredReceived"),(0,p.i0)("completed"),(0,p.i0)("optimisticConfirmation"),(0,p.i0)("root")]),slot:(0,p.Rx)(),timestamp:(0,p.Rx)()}),(0,p.dt)({type:(0,p.i0)("createdBank"),parent:(0,p.Rx)(),slot:(0,p.Rx)(),timestamp:(0,p.Rx)()}),(0,p.dt)({type:(0,p.i0)("frozen"),slot:(0,p.Rx)(),timestamp:(0,p.Rx)(),stats:(0,p.dt)({numTransactionEntries:(0,p.Rx)(),numSuccessfulTransactions:(0,p.Rx)(),numFailedTransactions:(0,p.Rx)(),maxTransactionsPerEntry:(0,p.Rx)()})}),(0,p.dt)({type:(0,p.i0)("dead"),slot:(0,p.Rx)(),timestamp:(0,p.Rx)(),err:(0,p.Z_)()})]),Wt=(0,p.dt)({subscription:(0,p.Rx)(),result:Dt}),jt=(0,p.dt)({subscription:(0,p.Rx)(),result:et((0,p.G0)([ct,ht]))}),Ft=(0,p.dt)({subscription:(0,p.Rx)(),result:(0,p.Rx)()}),qt=(0,p.dt)({pubkey:(0,p.Z_)(),gossip:(0,p.AG)((0,p.Z_)()),tpu:(0,p.AG)((0,p.Z_)()),rpc:(0,p.AG)((0,p.Z_)()),version:(0,p.AG)((0,p.Z_)())}),Ht=(0,p.dt)({votePubkey:(0,p.Z_)(),nodePubkey:(0,p.Z_)(),activatedStake:(0,p.Rx)(),epochVoteAccount:(0,p.O7)(),epochCredits:(0,p.IX)((0,p.bc)([(0,p.Rx)(),(0,p.Rx)(),(0,p.Rx)()])),commission:(0,p.Rx)(),lastVote:(0,p.Rx)(),rootSlot:(0,p.AG)((0,p.Rx)())}),Gt=nt((0,p.dt)({current:(0,p.IX)(Ht),delinquent:(0,p.IX)(Ht)})),$t=(0,p.G0)([(0,p.i0)("processed"),(0,p.i0)("confirmed"),(0,p.i0)("finalized")]),Zt=(0,p.dt)({slot:(0,p.Rx)(),confirmations:(0,p.AG)((0,p.Rx)()),err:at,confirmationStatus:(0,p.jt)($t)}),Vt=tt((0,p.IX)((0,p.AG)(Zt))),Xt=nt((0,p.Rx)()),Yt=(0,p.dt)({accountKey:$n,writableIndexes:(0,p.IX)((0,p.Rx)()),readonlyIndexes:(0,p.IX)((0,p.Rx)())}),Jt=(0,p.dt)({signatures:(0,p.IX)((0,p.Z_)()),message:(0,p.dt)({accountKeys:(0,p.IX)((0,p.Z_)()),header:(0,p.dt)({numRequiredSignatures:(0,p.Rx)(),numReadonlySignedAccounts:(0,p.Rx)(),numReadonlyUnsignedAccounts:(0,p.Rx)()}),instructions:(0,p.IX)((0,p.dt)({accounts:(0,p.IX)((0,p.Rx)()),data:(0,p.Z_)(),programIdIndex:(0,p.Rx)()})),recentBlockhash:(0,p.Z_)(),addressTableLookups:(0,p.jt)((0,p.IX)(Yt))})}),Qt=(0,p.dt)({parsed:(0,p._4)(),program:(0,p.Z_)(),programId:$n}),ne=(0,p.dt)({accounts:(0,p.IX)($n),data:(0,p.Z_)(),programId:$n}),te=(0,p.G0)([ne,Qt]),ee=(0,p.G0)([(0,p.dt)({parsed:(0,p._4)(),program:(0,p.Z_)(),programId:(0,p.Z_)()}),(0,p.dt)({accounts:(0,p.IX)((0,p.Z_)()),data:(0,p.Z_)(),programId:(0,p.Z_)()})]),le=(0,p.oQ)(te,ee,(n=>"accounts"in n?(0,p.Ue)(n,ne):(0,p.Ue)(n,Qt))),re=(0,p.dt)({signatures:(0,p.IX)((0,p.Z_)()),message:(0,p.dt)({accountKeys:(0,p.IX)((0,p.dt)({pubkey:$n,signer:(0,p.O7)(),writable:(0,p.O7)(),source:(0,p.jt)((0,p.G0)([(0,p.i0)("transaction"),(0,p.i0)("lookupTable")]))})),instructions:(0,p.IX)(le),recentBlockhash:(0,p.Z_)(),addressTableLookups:(0,p.jt)((0,p.AG)((0,p.IX)(Yt)))})}),ue=(0,p.dt)({accountIndex:(0,p.Rx)(),mint:(0,p.Z_)(),owner:(0,p.jt)((0,p.Z_)()),uiTokenAmount:kt}),ie=(0,p.dt)({writable:(0,p.IX)($n),readonly:(0,p.IX)($n)}),oe=(0,p.dt)({err:at,fee:(0,p.Rx)(),innerInstructions:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.dt)({index:(0,p.Rx)(),instructions:(0,p.IX)((0,p.dt)({accounts:(0,p.IX)((0,p.Rx)()),data:(0,p.Z_)(),programIdIndex:(0,p.Rx)()}))})))),preBalances:(0,p.IX)((0,p.Rx)()),postBalances:(0,p.IX)((0,p.Rx)()),logMessages:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.Z_)()))),preTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),postTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),loadedAddresses:(0,p.jt)(ie),computeUnitsConsumed:(0,p.jt)((0,p.Rx)())}),se=(0,p.dt)({err:at,fee:(0,p.Rx)(),innerInstructions:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.dt)({index:(0,p.Rx)(),instructions:(0,p.IX)(le)})))),preBalances:(0,p.IX)((0,p.Rx)()),postBalances:(0,p.IX)((0,p.Rx)()),logMessages:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.Z_)()))),preTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),postTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),loadedAddresses:(0,p.jt)(ie),computeUnitsConsumed:(0,p.jt)((0,p.Rx)())}),ae=(0,p.G0)([(0,p.i0)(0),(0,p.i0)("legacy")]),ce=nt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),transactions:(0,p.IX)((0,p.dt)({transaction:Jt,meta:(0,p.AG)(oe),version:(0,p.jt)(ae)})),rewards:(0,p.jt)((0,p.IX)((0,p.dt)({pubkey:(0,p.Z_)(),lamports:(0,p.Rx)(),postBalance:(0,p.AG)((0,p.Rx)()),rewardType:(0,p.AG)((0,p.Z_)())}))),blockTime:(0,p.AG)((0,p.Rx)()),blockHeight:(0,p.AG)((0,p.Rx)())}))),he=nt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),transactions:(0,p.IX)((0,p.dt)({transaction:Jt,meta:(0,p.AG)(oe)})),rewards:(0,p.jt)((0,p.IX)((0,p.dt)({pubkey:(0,p.Z_)(),lamports:(0,p.Rx)(),postBalance:(0,p.AG)((0,p.Rx)()),rewardType:(0,p.AG)((0,p.Z_)())}))),blockTime:(0,p.AG)((0,p.Rx)())}))),de=nt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),signatures:(0,p.IX)((0,p.Z_)()),blockTime:(0,p.AG)((0,p.Rx)())}))),fe=nt((0,p.AG)((0,p.dt)({slot:(0,p.Rx)(),meta:oe,blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)())),transaction:Jt,version:(0,p.jt)(ae)}))),pe=nt((0,p.AG)((0,p.dt)({slot:(0,p.Rx)(),transaction:re,meta:(0,p.AG)(se),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)())),version:(0,p.jt)(ae)}))),ge=tt((0,p.dt)({blockhash:(0,p.Z_)(),feeCalculator:(0,p.dt)({lamportsPerSignature:(0,p.Rx)()})})),ye=tt((0,p.dt)({blockhash:(0,p.Z_)(),lastValidBlockHeight:(0,p.Rx)()})),me=(0,p.dt)({slot:(0,p.Rx)(),numTransactions:(0,p.Rx)(),numSlots:(0,p.Rx)(),samplePeriodSecs:(0,p.Rx)()}),be=nt((0,p.IX)(me)),we=tt((0,p.AG)((0,p.dt)({feeCalculator:(0,p.dt)({lamportsPerSignature:(0,p.Rx)()})}))),ve=nt((0,p.Z_)()),ke=nt((0,p.Z_)()),Ie=(0,p.dt)({err:at,logs:(0,p.IX)((0,p.Z_)()),signature:(0,p.Z_)()}),Ae=(0,p.dt)({result:et(Ie),subscription:(0,p.Rx)()}),_e={"solana-client":`js/${null!==(Gn="0.0.0-development")?Gn:"UNKNOWN"}`};class Ee{constructor(n,t){let e,l,r,u,i;var o;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,e=t.wsEndpoint,l=t.httpHeaders,r=t.fetch,u=t.fetchMiddleware,i=t.disableRetryOnRateLimit),this._rpcEndpoint=function(n){if(!1===/^https?:/.test(n))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return n}(n),this._rpcWsEndpoint=e||function(n){const t=n.match(Hn);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${n}\``);const[e,l,r,u]=t,i=n.startsWith("https:")?"wss:":"ws:",o=null==r?null:parseInt(r.slice(1),10);return`${i}//${l}${null==o?"":`:${o+1}`}${u}`}(n),this._rpcClient=function(n,t,e,l,r){const u=e||jn;let i;return l&&(i=async(n,t)=>{const e=await new Promise(((e,r)=>{try{l(n,t,((n,t)=>e([n,t])))}catch(u){r(u)}}));return await u(...e)}),new(m())((async(e,l)=>{const o={method:"POST",body:e,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},_e)};try{let t,e=5,s=500;for(;t=i?await i(n,o):await u(n,o),429===t.status&&!0!==r&&(e-=1,0!==e);)console.log(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${s}ms delay...`),await mn(s),s*=2;const a=await t.text();t.ok?l(null,a):l(new Error(`${t.status} ${t.statusText}: ${a}`))}catch(s){s instanceof Error&&l(s)}}),{})}(n,l,r,u,i),this._rpcRequest=(o=this._rpcClient,(n,t)=>new Promise(((e,l)=>{o.request(n,t,((n,t)=>{n?l(n):e(t)}))}))),this._rpcBatchRequest=function(n){return t=>new Promise(((e,l)=>{0===t.length&&e([]);const r=t.map((t=>n.request(t.methodName,t.args)));n.request(r,((n,t)=>{n?l(n):e(t)}))}))}(this._rpcClient),this._rpcWebSocket=new g.K(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,void 0,l),u=await this._rpcRequest("getBalance",r),i=(0,p.Ue)(u,tt((0,p.Rx)()));if("error"in i)throw new Wn(i.error,`failed to get balance for ${n.toBase58()}`);return i.result}async getBalance(n,t){return await this.getBalanceAndContext(n,t).then((n=>n.value)).catch((t=>{throw new Error("failed to get balance of account "+n.toBase58()+": "+t)}))}async getBlockTime(n){const t=await this._rpcRequest("getBlockTime",[n]),e=(0,p.Ue)(t,nt((0,p.AG)((0,p.Rx)())));if("error"in e)throw new Wn(e.error,`failed to get block time for slot ${n}`);return e.result}async getMinimumLedgerSlot(){const n=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,p.Ue)(n,nt((0,p.Rx)()));if("error"in t)throw new Wn(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const n=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,p.Ue)(n,wt);if("error"in t)throw new Wn(t.error,"failed to get first available block");return t.result}async getSupply(n){let t={};t="string"==typeof n?{commitment:n}:n?{...n,commitment:n&&n.commitment||this.commitment}:{commitment:this.commitment};const e=await this._rpcRequest("getSupply",[t]),l=(0,p.Ue)(e,vt);if("error"in l)throw new Wn(l.error,"failed to get supply");return l.result}async getTokenSupply(n,t){const e=this._buildArgs([n.toBase58()],t),l=await this._rpcRequest("getTokenSupply",e),r=(0,p.Ue)(l,tt(kt));if("error"in r)throw new Wn(r.error,"failed to get token supply");return r.result}async getTokenAccountBalance(n,t){const e=this._buildArgs([n.toBase58()],t),l=await this._rpcRequest("getTokenAccountBalance",e),r=(0,p.Ue)(l,tt(kt));if("error"in r)throw new Wn(r.error,"failed to get token account balance");return r.result}async getTokenAccountsByOwner(n,t,e){const{commitment:l,config:r}=Yn(e);let u=[n.toBase58()];"mint"in t?u.push({mint:t.mint.toBase58()}):u.push({programId:t.programId.toBase58()});const i=this._buildArgs(u,l,"base64",r),o=await this._rpcRequest("getTokenAccountsByOwner",i),s=(0,p.Ue)(o,At);if("error"in s)throw new Wn(s.error,`failed to get token accounts owned by account ${n.toBase58()}`);return s.result}async getParsedTokenAccountsByOwner(n,t,e){let l=[n.toBase58()];"mint"in t?l.push({mint:t.mint.toBase58()}):l.push({programId:t.programId.toBase58()});const r=this._buildArgs(l,e,"jsonParsed"),u=await this._rpcRequest("getTokenAccountsByOwner",r),i=(0,p.Ue)(u,Et);if("error"in i)throw new Wn(i.error,`failed to get token accounts owned by account ${n.toBase58()}`);return i.result}async getLargestAccounts(n){const t={...n,commitment:n&&n.commitment||this.commitment},e=t.filter||t.commitment?[t]:[],l=await this._rpcRequest("getLargestAccounts",e),r=(0,p.Ue)(l,St);if("error"in r)throw new Wn(r.error,"failed to get largest accounts");return r.result}async getTokenLargestAccounts(n,t){const e=this._buildArgs([n.toBase58()],t),l=await this._rpcRequest("getTokenLargestAccounts",e),r=(0,p.Ue)(l,It);if("error"in r)throw new Wn(r.error,"failed to get token largest accounts");return r.result}async getAccountInfoAndContext(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,"base64",l),u=await this._rpcRequest("getAccountInfo",r),i=(0,p.Ue)(u,tt((0,p.AG)(Tt)));if("error"in i)throw new Wn(i.error,`failed to get info about account ${n.toBase58()}`);return i.result}async getParsedAccountInfo(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,"jsonParsed",l),u=await this._rpcRequest("getAccountInfo",r),i=(0,p.Ue)(u,tt((0,p.AG)(Pt)));if("error"in i)throw new Wn(i.error,`failed to get info about account ${n.toBase58()}`);return i.result}async getAccountInfo(n,t){try{return(await this.getAccountInfoAndContext(n,t)).value}catch(e){throw new Error("failed to get info about account "+n.toBase58()+": "+e)}}async getMultipleAccountsInfoAndContext(n,t){const{commitment:e,config:l}=Yn(t),r=n.map((n=>n.toBase58())),u=this._buildArgs([r],e,"base64",l),i=await this._rpcRequest("getMultipleAccounts",u),o=(0,p.Ue)(i,tt((0,p.IX)((0,p.AG)(Tt))));if("error"in o)throw new Wn(o.error,`failed to get info for accounts ${r}`);return o.result}async getMultipleAccountsInfo(n,t){return(await this.getMultipleAccountsInfoAndContext(n,t)).value}async getStakeActivation(n,t,e){const{commitment:l,config:r}=Yn(t),u=this._buildArgs([n.toBase58()],l,void 0,{...r,epoch:null!=e?e:null==r?void 0:r.epoch}),i=await this._rpcRequest("getStakeActivation",u),o=(0,p.Ue)(i,nt(Ot));if("error"in o)throw new Wn(o.error,`failed to get Stake Activation ${n.toBase58()}`);return o.result}async getProgramAccounts(n,t){const{commitment:e,config:l}=Yn(t),{encoding:r,...u}=l||{},i=this._buildArgs([n.toBase58()],e,r||"base64",u),o=await this._rpcRequest("getProgramAccounts",i),s=(0,p.Ue)(o,nt((0,p.IX)(xt)));if("error"in s)throw new Wn(s.error,`failed to get accounts owned by program ${n.toBase58()}`);return s.result}async getParsedProgramAccounts(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,"jsonParsed",l),u=await this._rpcRequest("getProgramAccounts",r),i=(0,p.Ue)(u,nt((0,p.IX)(Rt)));if("error"in i)throw new Wn(i.error,`failed to get accounts owned by program ${n.toBase58()}`);return i.result}async confirmTransaction(n,t){let e,l;if("string"==typeof n)e=n;else{e=n.signature}try{l=a().decode(e)}catch(d){throw new Error("signature must be base58 encoded: "+e)}V(64===l.length,"signature has invalid length");const r=t||this.commitment;let u,i,o=!1;const s=new Promise(((n,t)=>{try{i=this.onSignature(e,((t,e)=>{i=void 0;const l={context:e,value:t};o=!0,n({__type:nn.PROCESSED,response:l})}),r)}catch(d){t(d)}})),c=new Promise((e=>{if("string"==typeof n){let n=this._confirmTransactionInitialTimeout||6e4;switch(r){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":n=this._confirmTransactionInitialTimeout||3e4}u=setTimeout((()=>e({__type:nn.TIMED_OUT,timeoutMs:n})),n)}else{let l=n;const r=async()=>{try{return await this.getBlockHeight(t)}catch(n){return-1}};(async()=>{let n=await r();if(!o){for(;n<=l.lastValidBlockHeight;){if(await mn(1e3),o)return;if(n=await r(),o)return}e({__type:nn.BLOCKHEIGHT_EXCEEDED})}})()}}));let h;try{const n=await Promise.race([s,c]);switch(n.__type){case nn.BLOCKHEIGHT_EXCEEDED:throw new D(e);case nn.PROCESSED:h=n.response;break;case nn.TIMED_OUT:throw new W(e,n.timeoutMs/1e3)}}finally{clearTimeout(u),i&&this.removeSignatureListener(i)}return h}async getClusterNodes(){const n=await this._rpcRequest("getClusterNodes",[]),t=(0,p.Ue)(n,nt((0,p.IX)(qt)));if("error"in t)throw new Wn(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(n){const t=this._buildArgs([],n),e=await this._rpcRequest("getVoteAccounts",t),l=(0,p.Ue)(e,Gt);if("error"in l)throw new Wn(l.error,"failed to get vote accounts");return l.result}async getSlot(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getSlot",l),u=(0,p.Ue)(r,nt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get slot");return u.result}async getSlotLeader(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getSlotLeader",l),u=(0,p.Ue)(r,nt((0,p.Z_)()));if("error"in u)throw new Wn(u.error,"failed to get slot leader");return u.result}async getSlotLeaders(n,t){const e=[n,t],l=await this._rpcRequest("getSlotLeaders",e),r=(0,p.Ue)(l,nt((0,p.IX)($n)));if("error"in r)throw new Wn(r.error,"failed to get slot leaders");return r.result}async getSignatureStatus(n,t){const{context:e,value:l}=await this.getSignatureStatuses([n],t);V(1===l.length);return{context:e,value:l[0]}}async getSignatureStatuses(n,t){const e=[n];t&&e.push(t);const l=await this._rpcRequest("getSignatureStatuses",e),r=(0,p.Ue)(l,Vt);if("error"in r)throw new Wn(r.error,"failed to get signature status");return r.result}async getTransactionCount(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getTransactionCount",l),u=(0,p.Ue)(r,nt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get transaction count");return u.result}async getTotalSupply(n){return(await this.getSupply({commitment:n,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(n){const t=this._buildArgs([],n),e=await this._rpcRequest("getInflationGovernor",t),l=(0,p.Ue)(e,gt);if("error"in l)throw new Wn(l.error,"failed to get inflation");return l.result}async getInflationReward(n,t,e){const{commitment:l,config:r}=Yn(e),u=this._buildArgs([n.map((n=>n.toBase58()))],l,void 0,{...r,epoch:null!=t?t:null==r?void 0:r.epoch}),i=await this._rpcRequest("getInflationReward",u),o=(0,p.Ue)(i,ut);if("error"in o)throw new Wn(o.error,"failed to get inflation reward");return o.result}async getEpochInfo(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getEpochInfo",l),u=(0,p.Ue)(r,yt);if("error"in u)throw new Wn(u.error,"failed to get epoch info");return u.result}async getEpochSchedule(){const n=await this._rpcRequest("getEpochSchedule",[]),t=(0,p.Ue)(n,mt);if("error"in t)throw new Wn(t.error,"failed to get epoch schedule");const e=t.result;return new zn(e.slotsPerEpoch,e.leaderScheduleSlotOffset,e.warmup,e.firstNormalEpoch,e.firstNormalSlot)}async getLeaderSchedule(){const n=await this._rpcRequest("getLeaderSchedule",[]),t=(0,p.Ue)(n,bt);if("error"in t)throw new Wn(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(n,t){const e=this._buildArgs([n],t),l=await this._rpcRequest("getMinimumBalanceForRentExemption",e),r=(0,p.Ue)(l,Xt);return"error"in r?(console.warn("Unable to fetch minimum balance for rent exemption"),0):r.result}async getRecentBlockhashAndContext(n){const t=this._buildArgs([],n),e=await this._rpcRequest("getRecentBlockhash",t),l=(0,p.Ue)(e,ge);if("error"in l)throw new Wn(l.error,"failed to get recent blockhash");return l.result}async getRecentPerformanceSamples(n){const t=await this._rpcRequest("getRecentPerformanceSamples",n?[n]:[]),e=(0,p.Ue)(t,be);if("error"in e)throw new Wn(e.error,"failed to get recent performance samples");return e.result}async getFeeCalculatorForBlockhash(n,t){const e=this._buildArgs([n],t),l=await this._rpcRequest("getFeeCalculatorForBlockhash",e),r=(0,p.Ue)(l,we);if("error"in r)throw new Wn(r.error,"failed to get fee calculator");const{context:u,value:i}=r.result;return{context:u,value:null!==i?i.feeCalculator:null}}async getFeeForMessage(n,t){const e=n.serialize().toString("base64"),l=this._buildArgs([e],t),r=await this._rpcRequest("getFeeForMessage",l),u=(0,p.Ue)(r,tt((0,p.AG)((0,p.Rx)())));if("error"in u)throw new Wn(u.error,"failed to get slot");if(null===u.result)throw new Error("invalid blockhash");return u.result}async getRecentBlockhash(n){try{return(await this.getRecentBlockhashAndContext(n)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhash(n){try{return(await this.getLatestBlockhashAndContext(n)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhashAndContext(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getLatestBlockhash",l),u=(0,p.Ue)(r,ye);if("error"in u)throw new Wn(u.error,"failed to get latest blockhash");return u.result}async getVersion(){const n=await this._rpcRequest("getVersion",[]),t=(0,p.Ue)(n,nt(dt));if("error"in t)throw new Wn(t.error,"failed to get version");return t.result}async getGenesisHash(){const n=await this._rpcRequest("getGenesisHash",[]),t=(0,p.Ue)(n,nt((0,p.Z_)()));if("error"in t)throw new Wn(t.error,"failed to get genesis hash");return t.result}async getBlock(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgsAtLeastConfirmed([n],e,void 0,l),u=await this._rpcRequest("getBlock",r),i=(0,p.Ue)(u,ce);if("error"in i)throw new Wn(i.error,"failed to get confirmed block");const o=i.result;return o?{...o,transactions:o.transactions.map((({transaction:n,meta:t,version:e})=>({meta:t,transaction:{...n,message:lt(e,n.message)},version:e})))}:o}async getBlockHeight(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getBlockHeight",l),u=(0,p.Ue)(r,nt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get block height information");return u.result}async getBlockProduction(n){let t,e;if("string"==typeof n)e=n;else if(n){const{commitment:l,...r}=n;e=l,t=r}const l=this._buildArgs([],e,"base64",t),r=await this._rpcRequest("getBlockProduction",l),u=(0,p.Ue)(r,pt);if("error"in u)throw new Wn(u.error,"failed to get block production information");return u.result}async getTransaction(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgsAtLeastConfirmed([n],e,void 0,l),u=await this._rpcRequest("getTransaction",r),i=(0,p.Ue)(u,fe);if("error"in i)throw new Wn(i.error,"failed to get transaction");const o=i.result;return o?{...o,transaction:{...o.transaction,message:lt(o.version,o.transaction.message)}}:o}async getParsedTransaction(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgsAtLeastConfirmed([n],e,"jsonParsed",l),u=await this._rpcRequest("getTransaction",r),i=(0,p.Ue)(u,pe);if("error"in i)throw new Wn(i.error,"failed to get transaction");return i.result}async getParsedTransactions(n,t){const{commitment:e,config:l}=Yn(t),r=n.map((n=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([n],e,"jsonParsed",l)})));return(await this._rpcBatchRequest(r)).map((n=>{const t=(0,p.Ue)(n,pe);if("error"in t)throw new Wn(t.error,"failed to get transactions");return t.result}))}async getTransactions(n,t){const{commitment:e,config:l}=Yn(t),r=n.map((n=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([n],e,void 0,l)})));return(await this._rpcBatchRequest(r)).map((n=>{const t=(0,p.Ue)(n,fe);if("error"in t)throw new Wn(t.error,"failed to get transactions");const e=t.result;return e?{...e,transaction:{...e.transaction,message:lt(e.version,e.transaction.message)}}:e}))}async getConfirmedBlock(n,t){const e=this._buildArgsAtLeastConfirmed([n],t),l=await this._rpcRequest("getConfirmedBlock",e),r=(0,p.Ue)(l,he);if("error"in r)throw new Wn(r.error,"failed to get confirmed block");const u=r.result;if(!u)throw new Error("Confirmed block "+n+" not found");const i={...u,transactions:u.transactions.map((({transaction:n,meta:t})=>{const e=new Y(n.message);return{meta:t,transaction:{...n,message:e}}}))};return{...i,transactions:i.transactions.map((({transaction:n,meta:t})=>({meta:t,transaction:ln.populate(n.message,n.signatures)})))}}async getBlocks(n,t,e){const l=this._buildArgsAtLeastConfirmed(void 0!==t?[n,t]:[n],e),r=await this._rpcRequest("getBlocks",l),u=(0,p.Ue)(r,nt((0,p.IX)((0,p.Rx)())));if("error"in u)throw new Wn(u.error,"failed to get blocks");return u.result}async getBlockSignatures(n,t){const e=this._buildArgsAtLeastConfirmed([n],t,void 0,{transactionDetails:"signatures",rewards:!1}),l=await this._rpcRequest("getBlock",e),r=(0,p.Ue)(l,de);if("error"in r)throw new Wn(r.error,"failed to get block");const u=r.result;if(!u)throw new Error("Block "+n+" not found");return u}async getConfirmedBlockSignatures(n,t){const e=this._buildArgsAtLeastConfirmed([n],t,void 0,{transactionDetails:"signatures",rewards:!1}),l=await this._rpcRequest("getConfirmedBlock",e),r=(0,p.Ue)(l,de);if("error"in r)throw new Wn(r.error,"failed to get confirmed block");const u=r.result;if(!u)throw new Error("Confirmed block "+n+" not found");return u}async getConfirmedTransaction(n,t){const e=this._buildArgsAtLeastConfirmed([n],t),l=await this._rpcRequest("getConfirmedTransaction",e),r=(0,p.Ue)(l,fe);if("error"in r)throw new Wn(r.error,"failed to get transaction");const u=r.result;if(!u)return u;const i=new Y(u.transaction.message),o=u.transaction.signatures;return{...u,transaction:ln.populate(i,o)}}async getParsedConfirmedTransaction(n,t){const e=this._buildArgsAtLeastConfirmed([n],t,"jsonParsed"),l=await this._rpcRequest("getConfirmedTransaction",e),r=(0,p.Ue)(l,pe);if("error"in r)throw new Wn(r.error,"failed to get confirmed transaction");return r.result}async getParsedConfirmedTransactions(n,t){const e=n.map((n=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([n],t,"jsonParsed")})));return(await this._rpcBatchRequest(e)).map((n=>{const t=(0,p.Ue)(n,pe);if("error"in t)throw new Wn(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(n,t,e){let l={},r=await this.getFirstAvailableBlock();for(;!("until"in l)&&!(--t<=0||t<r);)try{const n=await this.getConfirmedBlockSignatures(t,"finalized");n.signatures.length>0&&(l.until=n.signatures[n.signatures.length-1].toString())}catch(i){if(i instanceof Error&&i.message.includes("skipped"))continue;throw i}let u=await this.getSlot("finalized");for(;!("before"in l||++e>u);)try{const n=await this.getConfirmedBlockSignatures(e);n.signatures.length>0&&(l.before=n.signatures[n.signatures.length-1].toString())}catch(i){if(i instanceof Error&&i.message.includes("skipped"))continue;throw i}return(await this.getConfirmedSignaturesForAddress2(n,l)).map((n=>n.signature))}async getConfirmedSignaturesForAddress2(n,t,e){const l=this._buildArgsAtLeastConfirmed([n.toBase58()],e,void 0,t),r=await this._rpcRequest("getConfirmedSignaturesForAddress2",l),u=(0,p.Ue)(r,Mt);if("error"in u)throw new Wn(u.error,"failed to get confirmed signatures for address");return u.result}async getSignaturesForAddress(n,t,e){const l=this._buildArgsAtLeastConfirmed([n.toBase58()],e,void 0,t),r=await this._rpcRequest("getSignaturesForAddress",l),u=(0,p.Ue)(r,Ct);if("error"in u)throw new Wn(u.error,"failed to get signatures for address");return u.result}async getAddressLookupTable(n,t){const{context:e,value:l}=await this.getAccountInfoAndContext(n,t);let r=null;return null!==l&&(r=new Fn({key:n,state:Fn.deserialize(l.data)})),{context:e,value:r}}async getNonceAndContext(n,t){const{context:e,value:l}=await this.getAccountInfoAndContext(n,t);let r=null;return null!==l&&(r=An.fromAccountData(l.data)),{context:e,value:r}}async getNonce(n,t){return await this.getNonceAndContext(n,t).then((n=>n.value)).catch((t=>{throw new Error("failed to get nonce for account "+n.toBase58()+": "+t)}))}async requestAirdrop(n,t){const e=await this._rpcRequest("requestAirdrop",[n.toBase58(),t]),l=(0,p.Ue)(e,ve);if("error"in l)throw new Wn(l.error,`airdrop to ${n.toBase58()} failed`);return l.result}async _blockhashWithExpiryBlockHeight(n){if(!n){for(;this._pollingBlockhash;)await mn(100);const n=Date.now()-this._blockhashInfo.lastFetch>=Xn;if(null!==this._blockhashInfo.latestBlockhash&&!n)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const n=Date.now(),t=this._blockhashInfo.latestBlockhash,e=t?t.blockhash:null;for(let l=0;l<50;l++){const n=await this.getLatestBlockhash("finalized");if(e!==n.blockhash)return this._blockhashInfo={latestBlockhash:n,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},n;await mn(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-n}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,"base64",e),r=await this._rpcRequest("getStakeMinimumDelegation",l),u=(0,p.Ue)(r,tt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get stake minimum delegation");return u.result}async simulateTransaction(n,t,e){if("message"in n){const r=n.serialize(),u=l.lW.from(r).toString("base64");if(Array.isArray(t)||void 0!==e)throw new Error("Invalid arguments");const i=t||{};i.encoding="base64","commitment"in i||(i.commitment=this.commitment);const o=[u,i],s=await this._rpcRequest("simulateTransaction",o),a=(0,p.Ue)(s,ft);if("error"in a)throw new Error("failed to simulate transaction: "+a.error.message);return a.result}let r;if(n instanceof ln){let t=n;r=new ln,r.feePayer=t.feePayer,r.instructions=n.instructions,r.nonceInfo=t.nonceInfo,r.signatures=t.signatures}else r=ln.populate(n),r._message=r._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const u=t;if(r.nonceInfo&&u)r.sign(...u);else{let n=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(n);if(r.lastValidBlockHeight=t.lastValidBlockHeight,r.recentBlockhash=t.blockhash,!u)break;if(r.sign(...u),!r.signature)throw new Error("!signature");const e=r.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(e)&&!this._blockhashInfo.transactionSignatures.includes(e)){this._blockhashInfo.simulatedSignatures.push(e);break}n=!0}}const i=r._compile(),o=i.serialize(),s=r._serialize(o).toString("base64"),a={encoding:"base64",commitment:this.commitment};if(e){const n=(Array.isArray(e)?e:i.nonProgramIds()).map((n=>n.toBase58()));a.accounts={encoding:"base64",addresses:n}}u&&(a.sigVerify=!0);const c=[s,a],h=await this._rpcRequest("simulateTransaction",c),d=(0,p.Ue)(h,ft);if("error"in d){let n;if("data"in d.error&&(n=d.error.data.logs,n&&Array.isArray(n))){const t="\n    ",e=t+n.join(t);console.error(d.error.message,e)}throw new Kn("failed to simulate transaction: "+d.error.message,n)}return d.result}async sendTransaction(n,t,e){if("version"in n){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const l=n.serialize();return await this.sendRawTransaction(l,e)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const l=t;if(n.nonceInfo)n.sign(...l);else{let t=this._disableBlockhashCaching;for(;;){const e=await this._blockhashWithExpiryBlockHeight(t);if(n.lastValidBlockHeight=e.lastValidBlockHeight,n.recentBlockhash=e.blockhash,n.sign(...l),!n.signature)throw new Error("!signature");const r=n.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.transactionSignatures.push(r);break}t=!0}}const r=n.serialize();return await this.sendRawTransaction(r,e)}async sendRawTransaction(n,t){const e=T(n).toString("base64");return await this.sendEncodedTransaction(e,t)}async sendEncodedTransaction(n,t){const e={encoding:"base64"},l=t&&t.skipPreflight,r=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(e.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(e.minContextSlot=t.minContextSlot),l&&(e.skipPreflight=l),r&&(e.preflightCommitment=r);const u=[n,e],i=await this._rpcRequest("sendTransaction",u),o=(0,p.Ue)(i,ke);if("error"in o){let n;throw"data"in o.error&&(n=o.error.data.logs),new Kn("failed to send transaction: "+o.error.message,n)}return o.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{this._rpcWebSocket.notify("ping").catch((()=>{}))}),5e3),this._updateSubscriptions()}_wsOnError(n){this._rpcWebSocketConnected=!1,console.error("ws error:",n.message)}_wsOnClose(n){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration++,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==n?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([n,t])=>{this._subscriptionsByHash[n]={...t,state:"pending"}}))):this._updateSubscriptions()}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(n){n instanceof Error&&console.log(`Error when closing socket connection: ${n.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const n=this._rpcWebSocketGeneration,t=()=>n===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async n=>{const e=this._subscriptionsByHash[n];if(void 0!==e)switch(e.state){case"pending":case"unsubscribed":if(0===e.callbacks.size)return delete this._subscriptionsByHash[n],"unsubscribed"===e.state&&delete this._subscriptionCallbacksByServerSubscriptionId[e.serverSubscriptionId],void(await this._updateSubscriptions());await(async()=>{const{args:l,method:r}=e;try{this._subscriptionsByHash[n]={...e,state:"subscribing"};const t=await this._rpcWebSocket.call(r,l);this._subscriptionsByHash[n]={...e,serverSubscriptionId:t,state:"subscribed"},this._subscriptionCallbacksByServerSubscriptionId[t]=e.callbacks,await this._updateSubscriptions()}catch(u){if(u instanceof Error&&console.error(`${r} error for argument`,l,u.message),!t())return;this._subscriptionsByHash[n]={...e,state:"pending"},await this._updateSubscriptions()}})();break;case"subscribed":0===e.callbacks.size&&await(async()=>{const{serverSubscriptionId:l,unsubscribeMethod:r}=e;if(this._subscriptionsAutoDisposedByRpc.has(l))this._subscriptionsAutoDisposedByRpc.delete(l);else{this._subscriptionsByHash[n]={...e,state:"unsubscribing"};try{await this._rpcWebSocket.call(r,[l])}catch(u){if(u instanceof Error&&console.error(`${r} error:`,u.message),!t())return;return this._subscriptionsByHash[n]={...e,state:"subscribed"},void(await this._updateSubscriptions())}}this._subscriptionsByHash[n]={...e,state:"unsubscribed"},await this._updateSubscriptions()})()}})))}_handleServerNotification(n,t){const e=this._subscriptionCallbacksByServerSubscriptionId[n];void 0!==e&&e.forEach((n=>{try{n(...t)}catch(e){console.error(e)}}))}_wsOnAccountNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Ut);this._handleServerNotification(e,[t.value,t.context])}_makeSubscription(n,t){const e=this._nextClientSubscriptionId++,l=Ln([n.method,t],!0),r=this._subscriptionsByHash[l];return void 0===r?this._subscriptionsByHash[l]={...n,args:t,callbacks:new Set([n.callback]),state:"pending"}:r.callbacks.add(n.callback),this._subscriptionDisposeFunctionsByClientSubscriptionId[e]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[e];const t=this._subscriptionsByHash[l];V(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${e}`),t.callbacks.delete(n.callback),await this._updateSubscriptions()},this._updateSubscriptions(),e}onAccountChange(n,t,e){const l=this._buildArgs([n.toBase58()],e||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},l)}async removeAccountChangeListener(n){await this._unsubscribeClientSubscription(n,"account change")}_wsOnProgramAccountNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Nt);this._handleServerNotification(e,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(n,t,e,l){const r=this._buildArgs([n.toBase58()],e||this._commitment||"finalized","base64",l?{filters:l}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},r)}async removeProgramAccountChangeListener(n){await this._unsubscribeClientSubscription(n,"program account change")}onLogs(n,t,e){const l=this._buildArgs(["object"==typeof n?{mentions:[n.toString()]}:n],e||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},l)}async removeOnLogsListener(n){await this._unsubscribeClientSubscription(n,"logs")}_wsOnLogsNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Ae);this._handleServerNotification(e,[t.value,t.context])}_wsOnSlotNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Kt);this._handleServerNotification(e,[t])}onSlotChange(n){return this._makeSubscription({callback:n,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(n){await this._unsubscribeClientSubscription(n,"slot change")}_wsOnSlotUpdatesNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Wt);this._handleServerNotification(e,[t])}onSlotUpdate(n){return this._makeSubscription({callback:n,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(n){await this._unsubscribeClientSubscription(n,"slot update")}async _unsubscribeClientSubscription(n,t){const e=this._subscriptionDisposeFunctionsByClientSubscriptionId[n];e?await e():console.warn(`Ignored unsubscribe request because an active subscription with id \`${n}\` for '${t}' events could not be found.`)}_buildArgs(n,t,e,l){const r=t||this._commitment;if(r||e||l){let t={};e&&(t.encoding=e),r&&(t.commitment=r),l&&(t=Object.assign(t,l)),n.push(t)}return n}_buildArgsAtLeastConfirmed(n,t,e,l){const r=t||this._commitment;if(r&&!["confirmed","finalized"].includes(r))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(n,t,e,l)}_wsOnSignatureNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,jt);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(e),this._handleServerNotification(e,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(n,t,e){const l=this._buildArgs([n],e||this._commitment||"finalized"),r=this._makeSubscription({callback:(n,e)=>{if("status"===n.type){t(n.result,e);try{this.removeSignatureListener(r)}catch(l){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},l);return r}onSignatureWithOptions(n,t,e){const{commitment:l,...r}={...e,commitment:e&&e.commitment||this._commitment||"finalized"},u=this._buildArgs([n],l,void 0,r),i=this._makeSubscription({callback:(n,e)=>{t(n,e);try{this.removeSignatureListener(i)}catch(l){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},u);return i}async removeSignatureListener(n){await this._unsubscribeClientSubscription(n,"signature result")}_wsOnRootNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Ft);this._handleServerNotification(e,[t])}onRootChange(n){return this._makeSubscription({callback:n,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(n){await this._unsubscribeClientSubscription(n,"root change")}}class Se{constructor(n){this._keypair=void 0,this._keypair=null!=n?n:I()}static generate(){return new Se(I())}static fromSecretKey(n,t){if(64!==n.byteLength)throw new Error("bad secret key size");const e=n.slice(32,64);if(!t||!t.skipValidation){const t=n.slice(0,32),l=A(t);for(let n=0;n<32;n++)if(e[n]!==l[n])throw new Error("provided secretKey is invalid")}return new Se({publicKey:e,secretKey:n})}static fromSeed(n){const t=A(n),e=new Uint8Array(64);return e.set(n),e.set(t,32),new Se({publicKey:t,secretKey:e})}get publicKey(){return new C(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Te=Object.freeze({CreateLookupTable:{index:0,layout:d.struct([d.u32("instruction"),_n("recentSlot"),d.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:d.struct([d.u32("instruction")])},ExtendLookupTable:{index:2,layout:d.struct([d.u32("instruction"),_n(),d.seq(F(),d.offset(d.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:d.struct([d.u32("instruction")])},CloseLookupTable:{index:4,layout:d.struct([d.u32("instruction")])}});class xe{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(Te))if(r.index==t){e=l;break}if(!e)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return e}static decodeCreateLookupTable(n){this.checkProgramId(n.programId),this.checkKeysLength(n.keys,4);const{recentSlot:t}=wn(Te.CreateLookupTable,n.data);return{authority:n.keys[1].pubkey,payer:n.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(n){if(this.checkProgramId(n.programId),n.keys.length<2)throw new Error(`invalid instruction; found ${n.keys.length} keys, expected at least 2`);const{addresses:t}=wn(Te.ExtendLookupTable,n.data);return{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey,payer:n.keys.length>2?n.keys[2].pubkey:void 0,addresses:t.map((n=>new C(n)))}}static decodeCloseLookupTable(n){return this.checkProgramId(n.programId),this.checkKeysLength(n.keys,3),{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey,recipient:n.keys[2].pubkey}}static decodeFreezeLookupTable(n){return this.checkProgramId(n.programId),this.checkKeysLength(n.keys,2),{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey}}static decodeDeactivateLookupTable(n){return this.checkProgramId(n.programId),this.checkKeysLength(n.keys,2),{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey}}static checkProgramId(n){if(!n.equals(Be.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}class Be{constructor(){}static createLookupTable(n){const[t,e]=C.findProgramAddressSync([n.authority.toBuffer(),(0,f.toBufferLE)(BigInt(n.recentSlot),8)],this.programId),l=bn(Te.CreateLookupTable,{recentSlot:BigInt(n.recentSlot),bumpSeed:e}),r=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1},{pubkey:n.payer,isSigner:!0,isWritable:!0},{pubkey:xn.programId,isSigner:!1,isWritable:!1}];return[new en({programId:this.programId,keys:r,data:l}),t]}static freezeLookupTable(n){const t=bn(Te.FreezeLookupTable),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1}];return new en({programId:this.programId,keys:e,data:t})}static extendLookupTable(n){const t=bn(Te.ExtendLookupTable,{addresses:n.addresses.map((n=>n.toBytes()))}),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1}];return n.payer&&e.push({pubkey:n.payer,isSigner:!0,isWritable:!0},{pubkey:xn.programId,isSigner:!1,isWritable:!1}),new en({programId:this.programId,keys:e,data:t})}static deactivateLookupTable(n){const t=bn(Te.DeactivateLookupTable),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1}];return new en({programId:this.programId,keys:e,data:t})}static closeLookupTable(n){const t=bn(Te.CloseLookupTable),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1},{pubkey:n.recipient,isSigner:!1,isWritable:!0}];return new en({programId:this.programId,keys:e,data:t})}}Be.programId=new C("AddressLookupTab1e1111111111111111111111111");class Pe{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u8("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(Re))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return e}static decodeRequestUnits(n){this.checkProgramId(n.programId);const{units:t,additionalFee:e}=wn(Re.RequestUnits,n.data);return{units:t,additionalFee:e}}static decodeRequestHeapFrame(n){this.checkProgramId(n.programId);const{bytes:t}=wn(Re.RequestHeapFrame,n.data);return{bytes:t}}static decodeSetComputeUnitLimit(n){this.checkProgramId(n.programId);const{units:t}=wn(Re.SetComputeUnitLimit,n.data);return{units:t}}static decodeSetComputeUnitPrice(n){this.checkProgramId(n.programId);const{microLamports:t}=wn(Re.SetComputeUnitPrice,n.data);return{microLamports:t}}static checkProgramId(n){if(!n.equals(Oe.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Re=Object.freeze({RequestUnits:{index:0,layout:d.struct([d.u8("instruction"),d.u32("units"),d.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:d.struct([d.u8("instruction"),d.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:d.struct([d.u8("instruction"),d.u32("units")])},SetComputeUnitPrice:{index:3,layout:d.struct([d.u8("instruction"),_n("microLamports")])}});class Oe{constructor(){}static requestUnits(n){const t=bn(Re.RequestUnits,n);return new en({keys:[],programId:this.programId,data:t})}static requestHeapFrame(n){const t=bn(Re.RequestHeapFrame,n);return new en({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(n){const t=bn(Re.SetComputeUnitLimit,n);return new en({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(n){const t=bn(Re.SetComputeUnitPrice,{microLamports:BigInt(n.microLamports)});return new en({keys:[],programId:this.programId,data:t})}}Oe.programId=new C("ComputeBudget111111111111111111111111111111");const Me=d.struct([d.u8("numSignatures"),d.u8("padding"),d.u16("signatureOffset"),d.u16("signatureInstructionIndex"),d.u16("publicKeyOffset"),d.u16("publicKeyInstructionIndex"),d.u16("messageDataOffset"),d.u16("messageDataSize"),d.u16("messageInstructionIndex")]);class Ce{constructor(){}static createInstructionWithPublicKey(n){const{publicKey:t,message:e,signature:r,instructionIndex:u}=n;V(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),V(64===r.length,`Signature must be 64 bytes but received ${r.length} bytes`);const i=Me.span,o=i+t.length,s=o+r.length,a=l.lW.alloc(s+e.length),c=null==u?65535:u;return Me.encode({numSignatures:1,padding:0,signatureOffset:o,signatureInstructionIndex:c,publicKeyOffset:i,publicKeyInstructionIndex:c,messageDataOffset:s,messageDataSize:e.length,messageInstructionIndex:c},a),a.fill(t,i),a.fill(r,o),a.fill(e,s),new en({keys:[],programId:Ce.programId,data:a})}static createInstructionWithPrivateKey(n){const{privateKey:t,message:e,instructionIndex:l}=n;V(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const n=Se.fromSecretKey(t),r=n.publicKey.toBytes(),u=E(e,n.secretKey);return this.createInstructionWithPublicKey({publicKey:r,message:e,signature:u,instructionIndex:l})}catch(r){throw new Error(`Error creating instruction; ${r}`)}}}Ce.programId=new C("Ed25519SigVerify111111111111111111111111111"),v.P6.hmacSha256Sync=(n,...t)=>{const e=w.b.create(c.J,n);return t.forEach((n=>e.update(n))),e.digest()};v.P6.isValidPrivateKey;const Ue=v.$3,Le=d.struct([d.u8("numSignatures"),d.u16("signatureOffset"),d.u8("signatureInstructionIndex"),d.u16("ethAddressOffset"),d.u8("ethAddressInstructionIndex"),d.u16("messageDataOffset"),d.u16("messageDataSize"),d.u8("messageInstructionIndex"),d.blob(20,"ethAddress"),d.blob(64,"signature"),d.u8("recoveryId")]);class Ne{constructor(){}static publicKeyToEthAddress(n){V(64===n.length,`Public key must be 64 bytes but received ${n.length} bytes`);try{return l.lW.from((0,b.fr)(T(n))).slice(-20)}catch(t){throw new Error(`Error constructing Ethereum address: ${t}`)}}static createInstructionWithPublicKey(n){const{publicKey:t,message:e,signature:l,recoveryId:r,instructionIndex:u}=n;return Ne.createInstructionWithEthAddress({ethAddress:Ne.publicKeyToEthAddress(t),message:e,signature:l,recoveryId:r,instructionIndex:u})}static createInstructionWithEthAddress(n){const{ethAddress:t,message:e,signature:r,recoveryId:u,instructionIndex:i=0}=n;let o;o="string"==typeof t?t.startsWith("0x")?l.lW.from(t.substr(2),"hex"):l.lW.from(t,"hex"):t,V(20===o.length,`Address must be 20 bytes but received ${o.length} bytes`);const s=12+o.length,a=s+r.length+1,c=l.lW.alloc(Le.span+e.length);return Le.encode({numSignatures:1,signatureOffset:s,signatureInstructionIndex:i,ethAddressOffset:12,ethAddressInstructionIndex:i,messageDataOffset:a,messageDataSize:e.length,messageInstructionIndex:i,signature:T(r),ethAddress:T(o),recoveryId:u},c),c.fill(T(e),Le.span),new en({keys:[],programId:Ne.programId,data:c})}static createInstructionWithPrivateKey(n){const{privateKey:t,message:e,instructionIndex:r}=n;V(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const n=T(t),o=Ue(n,!1).slice(1),s=l.lW.from((0,b.fr)(T(e))),[a,c]=(u=s,i=n,v.kS(u,i,{der:!1,recovered:!0}));return this.createInstructionWithPublicKey({publicKey:o,message:e,signature:a,recoveryId:c,instructionIndex:r})}catch(o){throw new Error(`Error creating instruction; ${o}`)}var u,i}}Ne.programId=new C("KeccakSecp256k11111111111111111111111111111");const ze=new C("StakeConfig11111111111111111111111111111111");class Ke{constructor(n,t){this.staker=void 0,this.withdrawer=void 0,this.staker=n,this.withdrawer=t}}class De{constructor(n,t,e){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=n,this.epoch=t,this.custodian=e}}De.default=new De(0,0,C.default);class We{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(je))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a StakeInstruction");return e}static decodeInitialize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{authorized:t,lockup:e}=wn(je.Initialize,n.data);return{stakePubkey:n.keys[0].pubkey,authorized:new Ke(new C(t.staker),new C(t.withdrawer)),lockup:new De(e.unixTimestamp,e.epoch,new C(e.custodian))}}static decodeDelegate(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,6),wn(je.Delegate,n.data),{stakePubkey:n.keys[0].pubkey,votePubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[5].pubkey}}static decodeAuthorize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{newAuthorized:t,stakeAuthorizationType:e}=wn(je.Authorize,n.data),l={stakePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey,newAuthorizedPubkey:new C(t),stakeAuthorizationType:{index:e}};return n.keys.length>3&&(l.custodianPubkey=n.keys[3].pubkey),l}static decodeAuthorizeWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{newAuthorized:t,stakeAuthorizationType:e,authoritySeed:l,authorityOwner:r}=wn(je.AuthorizeWithSeed,n.data),u={stakePubkey:n.keys[0].pubkey,authorityBase:n.keys[1].pubkey,authoritySeed:l,authorityOwner:new C(r),newAuthorizedPubkey:new C(t),stakeAuthorizationType:{index:e}};return n.keys.length>3&&(u.custodianPubkey=n.keys[3].pubkey),u}static decodeSplit(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{lamports:t}=wn(je.Split,n.data);return{stakePubkey:n.keys[0].pubkey,splitStakePubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[2].pubkey,lamports:t}}static decodeMerge(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3),wn(je.Merge,n.data),{stakePubkey:n.keys[0].pubkey,sourceStakePubKey:n.keys[1].pubkey,authorizedPubkey:n.keys[4].pubkey}}static decodeWithdraw(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,5);const{lamports:t}=wn(je.Withdraw,n.data),e={stakePubkey:n.keys[0].pubkey,toPubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[4].pubkey,lamports:t};return n.keys.length>5&&(e.custodianPubkey=n.keys[5].pubkey),e}static decodeDeactivate(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3),wn(je.Deactivate,n.data),{stakePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey}}static checkProgramId(n){if(!n.equals(qe.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}const je=Object.freeze({Initialize:{index:0,layout:d.struct([d.u32("instruction"),((n="authorized")=>d.struct([F("staker"),F("withdrawer")],n))(),((n="lockup")=>d.struct([d.ns64("unixTimestamp"),d.ns64("epoch"),F("custodian")],n))()])},Authorize:{index:1,layout:d.struct([d.u32("instruction"),F("newAuthorized"),d.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:d.struct([d.u32("instruction")])},Split:{index:3,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},Withdraw:{index:4,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},Deactivate:{index:5,layout:d.struct([d.u32("instruction")])},Merge:{index:7,layout:d.struct([d.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:d.struct([d.u32("instruction"),F("newAuthorized"),d.u32("stakeAuthorizationType"),H("authoritySeed"),F("authorityOwner")])}}),Fe=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class qe{constructor(){}static initialize(n){const{stakePubkey:t,authorized:e,lockup:l}=n,r=l||De.default,u=bn(je.Initialize,{authorized:{staker:T(e.staker.toBuffer()),withdrawer:T(e.withdrawer.toBuffer())},lockup:{unixTimestamp:r.unixTimestamp,epoch:r.epoch,custodian:T(r.custodian.toBuffer())}}),i={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:hn,isSigner:!1,isWritable:!1}],programId:this.programId,data:u};return new en(i)}static createAccountWithSeed(n){const t=new ln;t.add(xn.createAccountWithSeed({fromPubkey:n.fromPubkey,newAccountPubkey:n.stakePubkey,basePubkey:n.basePubkey,seed:n.seed,lamports:n.lamports,space:this.space,programId:this.programId}));const{stakePubkey:e,authorized:l,lockup:r}=n;return t.add(this.initialize({stakePubkey:e,authorized:l,lockup:r}))}static createAccount(n){const t=new ln;t.add(xn.createAccount({fromPubkey:n.fromPubkey,newAccountPubkey:n.stakePubkey,lamports:n.lamports,space:this.space,programId:this.programId}));const{stakePubkey:e,authorized:l,lockup:r}=n;return t.add(this.initialize({stakePubkey:e,authorized:l,lockup:r}))}static delegate(n){const{stakePubkey:t,authorizedPubkey:e,votePubkey:l}=n,r=bn(je.Delegate);return(new ln).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:gn,isSigner:!1,isWritable:!1},{pubkey:ze,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static authorize(n){const{stakePubkey:t,authorizedPubkey:e,newAuthorizedPubkey:l,stakeAuthorizationType:r,custodianPubkey:u}=n,i=bn(je.Authorize,{newAuthorized:T(l.toBuffer()),stakeAuthorizationType:r.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1}];return u&&o.push({pubkey:u,isSigner:!1,isWritable:!1}),(new ln).add({keys:o,programId:this.programId,data:i})}static authorizeWithSeed(n){const{stakePubkey:t,authorityBase:e,authoritySeed:l,authorityOwner:r,newAuthorizedPubkey:u,stakeAuthorizationType:i,custodianPubkey:o}=n,s=bn(je.AuthorizeWithSeed,{newAuthorized:T(u.toBuffer()),stakeAuthorizationType:i.index,authoritySeed:l,authorityOwner:T(r.toBuffer())}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1}];return o&&a.push({pubkey:o,isSigner:!1,isWritable:!1}),(new ln).add({keys:a,programId:this.programId,data:s})}static splitInstruction(n){const{stakePubkey:t,authorizedPubkey:e,splitStakePubkey:l,lamports:r}=n,u=bn(je.Split,{lamports:r});return new en({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:u})}static split(n){const t=new ln;return t.add(xn.createAccount({fromPubkey:n.authorizedPubkey,newAccountPubkey:n.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(n))}static splitWithSeed(n){const{stakePubkey:t,authorizedPubkey:e,splitStakePubkey:l,basePubkey:r,seed:u,lamports:i}=n,o=new ln;return o.add(xn.allocate({accountPubkey:l,basePubkey:r,seed:u,space:this.space,programId:this.programId})),o.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:e,splitStakePubkey:l,lamports:i}))}static merge(n){const{stakePubkey:t,sourceStakePubKey:e,authorizedPubkey:l}=n,r=bn(je.Merge);return(new ln).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:gn,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static withdraw(n){const{stakePubkey:t,authorizedPubkey:e,toPubkey:l,lamports:r,custodianPubkey:u}=n,i=bn(je.Withdraw,{lamports:r}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:gn,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}];return u&&o.push({pubkey:u,isSigner:!1,isWritable:!1}),(new ln).add({keys:o,programId:this.programId,data:i})}static deactivate(n){const{stakePubkey:t,authorizedPubkey:e}=n,l=bn(je.Deactivate);return(new ln).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:l})}}qe.programId=new C("Stake11111111111111111111111111111111111111"),qe.space=200;class He{constructor(n,t,e,l){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=n,this.authorizedVoter=t,this.authorizedWithdrawer=e,this.commission=l}}class Ge{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries($e))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a VoteInstruction");return e}static decodeInitializeAccount(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,4);const{voteInit:t}=wn($e.InitializeAccount,n.data);return{votePubkey:n.keys[0].pubkey,nodePubkey:n.keys[3].pubkey,voteInit:new He(new C(t.nodePubkey),new C(t.authorizedVoter),new C(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{newAuthorized:t,voteAuthorizationType:e}=wn($e.Authorize,n.data);return{votePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey,newAuthorizedPubkey:new C(t),voteAuthorizationType:{index:e}}}static decodeAuthorizeWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:e,newAuthorized:l,voteAuthorizationType:r}}=wn($e.AuthorizeWithSeed,n.data);return{currentAuthorityDerivedKeyBasePubkey:n.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new C(t),currentAuthorityDerivedKeySeed:e,newAuthorizedPubkey:new C(l),voteAuthorizationType:{index:r},votePubkey:n.keys[0].pubkey}}static decodeWithdraw(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{lamports:t}=wn($e.Withdraw,n.data);return{votePubkey:n.keys[0].pubkey,authorizedWithdrawerPubkey:n.keys[2].pubkey,lamports:t,toPubkey:n.keys[1].pubkey}}static checkProgramId(n){if(!n.equals(Ve.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}const $e=Object.freeze({InitializeAccount:{index:0,layout:d.struct([d.u32("instruction"),((n="voteInit")=>d.struct([F("nodePubkey"),F("authorizedVoter"),F("authorizedWithdrawer"),d.u8("commission")],n))()])},Authorize:{index:1,layout:d.struct([d.u32("instruction"),F("newAuthorized"),d.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},AuthorizeWithSeed:{index:10,layout:d.struct([d.u32("instruction"),((n="voteAuthorizeWithSeedArgs")=>d.struct([d.u32("voteAuthorizationType"),F("currentAuthorityDerivedKeyOwnerPubkey"),H("currentAuthorityDerivedKeySeed"),F("newAuthorized")],n))()])}}),Ze=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class Ve{constructor(){}static initializeAccount(n){const{votePubkey:t,nodePubkey:e,voteInit:l}=n,r=bn($e.InitializeAccount,{voteInit:{nodePubkey:T(l.nodePubkey.toBuffer()),authorizedVoter:T(l.authorizedVoter.toBuffer()),authorizedWithdrawer:T(l.authorizedWithdrawer.toBuffer()),commission:l.commission}}),u={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:hn,isSigner:!1,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:r};return new en(u)}static createAccount(n){const t=new ln;return t.add(xn.createAccount({fromPubkey:n.fromPubkey,newAccountPubkey:n.votePubkey,lamports:n.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:n.votePubkey,nodePubkey:n.voteInit.nodePubkey,voteInit:n.voteInit}))}static authorize(n){const{votePubkey:t,authorizedPubkey:e,newAuthorizedPubkey:l,voteAuthorizationType:r}=n,u=bn($e.Authorize,{newAuthorized:T(l.toBuffer()),voteAuthorizationType:r.index}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}];return(new ln).add({keys:i,programId:this.programId,data:u})}static authorizeWithSeed(n){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:e,currentAuthorityDerivedKeySeed:l,newAuthorizedPubkey:r,voteAuthorizationType:u,votePubkey:i}=n,o=bn($e.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:T(e.toBuffer()),currentAuthorityDerivedKeySeed:l,newAuthorized:T(r.toBuffer()),voteAuthorizationType:u.index}}),s=[{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new ln).add({keys:s,programId:this.programId,data:o})}static withdraw(n){const{votePubkey:t,authorizedWithdrawerPubkey:e,lamports:l,toPubkey:r}=n,u=bn($e.Withdraw,{lamports:l}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1}];return(new ln).add({keys:i,programId:this.programId,data:u})}static safeWithdraw(n,t,e){if(n.lamports>t-e)throw new Error("Withdraw will leave vote account with insuffcient funds.");return Ve.withdraw(n)}}Ve.programId=new C("Vote111111111111111111111111111111111111111"),Ve.space=3731;const Xe=new C("Va1idator1nfo111111111111111111111111111111"),Ye=(0,p.dt)({name:(0,p.Z_)(),website:(0,p.jt)((0,p.Z_)()),details:(0,p.jt)((0,p.Z_)()),keybaseUsername:(0,p.jt)((0,p.Z_)())});class Je{constructor(n,t){this.key=void 0,this.info=void 0,this.key=n,this.info=t}static fromConfigData(n){let t=[...n];if(2!==$(t))return null;const e=[];for(let l=0;l<2;l++){const n=new C(t.slice(0,O));t=t.slice(O);const l=1===t.slice(0,1)[0];t=t.slice(1),e.push({publicKey:n,isSigner:l})}if(e[0].publicKey.equals(Xe)&&e[1].isSigner){const n=H().decode(l.lW.from(t)),r=JSON.parse(n);return(0,p.hu)(r,Ye),new Je(e[1].publicKey,r)}return null}}const Qe=new C("Vote111111111111111111111111111111111111111"),nl=d.struct([F("nodePubkey"),F("authorizedWithdrawer"),d.u8("commission"),d.nu64(),d.seq(d.struct([d.nu64("slot"),d.u32("confirmationCount")]),d.offset(d.u32(),-8),"votes"),d.u8("rootSlotValid"),d.nu64("rootSlot"),d.nu64(),d.seq(d.struct([d.nu64("epoch"),F("authorizedVoter")]),d.offset(d.u32(),-8),"authorizedVoters"),d.struct([d.seq(d.struct([F("authorizedPubkey"),d.nu64("epochOfLastAuthorizedSwitch"),d.nu64("targetEpoch")]),32,"buf"),d.nu64("idx"),d.u8("isEmpty")],"priorVoters"),d.nu64(),d.seq(d.struct([d.nu64("epoch"),d.nu64("credits"),d.nu64("prevCredits")]),d.offset(d.u32(),-8),"epochCredits"),d.struct([d.nu64("slot"),d.nu64("timestamp")],"lastTimestamp")]);class tl{constructor(n){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=n.nodePubkey,this.authorizedWithdrawer=n.authorizedWithdrawer,this.commission=n.commission,this.rootSlot=n.rootSlot,this.votes=n.votes,this.authorizedVoters=n.authorizedVoters,this.priorVoters=n.priorVoters,this.epochCredits=n.epochCredits,this.lastTimestamp=n.lastTimestamp}static fromAccountData(n){const t=nl.decode(T(n),4);let e=t.rootSlot;return t.rootSlotValid||(e=null),new tl({nodePubkey:new C(t.nodePubkey),authorizedWithdrawer:new C(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:e,authorizedVoters:t.authorizedVoters.map(el),priorVoters:rl(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function el({authorizedVoter:n,epoch:t}){return{epoch:t,authorizedVoter:new C(n)}}function ll({authorizedPubkey:n,epochOfLastAuthorizedSwitch:t,targetEpoch:e}){return{authorizedPubkey:new C(n),epochOfLastAuthorizedSwitch:t,targetEpoch:e}}function rl({buf:n,idx:t,isEmpty:e}){return e?[]:[...n.slice(t+1).map(ll),...n.slice(0,t).map(ll)]}const ul={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function il(n,t){const e=!1===t?"http":"https";if(!n)return ul[e].devnet;const l=ul[e][n];if(!l)throw new Error(`Unknown ${e} cluster: ${n}`);return l}async function ol(n,t,e,l){let r,u;e&&Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")?(r=e,u=l):u=e;const i=u&&{skipPreflight:u.skipPreflight,preflightCommitment:u.preflightCommitment||u.commitment,minContextSlot:u.minContextSlot},o=await n.sendRawTransaction(t,i),s=u&&u.commitment,a=r?n.confirmTransaction(r,s):n.confirmTransaction(o,s),c=(await a).value;if(c.err)throw new Error(`Raw transaction ${o} failed (${JSON.stringify(c)})`);return o}const sl=1e9},22708:(n,t,e)=>{"use strict";const l=e(95766),r=e(62333),u="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.lW=s,t.h2=50;const i=2147483647;function o(n){if(n>i)throw new RangeError('The value "'+n+'" is invalid for option "size"');const t=new Uint8Array(n);return Object.setPrototypeOf(t,s.prototype),t}function s(n,t,e){if("number"==typeof n){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(n)}return a(n,t,e)}function a(n,t,e){if("string"==typeof n)return function(n,t){"string"==typeof t&&""!==t||(t="utf8");if(!s.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const e=0|g(n,t);let l=o(e);const r=l.write(n,t);r!==e&&(l=l.slice(0,r));return l}(n,t);if(ArrayBuffer.isView(n))return function(n){if(V(n,Uint8Array)){const t=new Uint8Array(n);return f(t.buffer,t.byteOffset,t.byteLength)}return d(n)}(n);if(null==n)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n);if(V(n,ArrayBuffer)||n&&V(n.buffer,ArrayBuffer))return f(n,t,e);if("undefined"!=typeof SharedArrayBuffer&&(V(n,SharedArrayBuffer)||n&&V(n.buffer,SharedArrayBuffer)))return f(n,t,e);if("number"==typeof n)throw new TypeError('The "value" argument must not be of type number. Received type number');const l=n.valueOf&&n.valueOf();if(null!=l&&l!==n)return s.from(l,t,e);const r=function(n){if(s.isBuffer(n)){const t=0|p(n.length),e=o(t);return 0===e.length||n.copy(e,0,0,t),e}if(void 0!==n.length)return"number"!=typeof n.length||X(n.length)?o(0):d(n);if("Buffer"===n.type&&Array.isArray(n.data))return d(n.data)}(n);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof n[Symbol.toPrimitive])return s.from(n[Symbol.toPrimitive]("string"),t,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n)}function c(n){if("number"!=typeof n)throw new TypeError('"size" argument must be of type number');if(n<0)throw new RangeError('The value "'+n+'" is invalid for option "size"')}function h(n){return c(n),o(n<0?0:0|p(n))}function d(n){const t=n.length<0?0:0|p(n.length),e=o(t);for(let l=0;l<t;l+=1)e[l]=255&n[l];return e}function f(n,t,e){if(t<0||n.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(n.byteLength<t+(e||0))throw new RangeError('"length" is outside of buffer bounds');let l;return l=void 0===t&&void 0===e?new Uint8Array(n):void 0===e?new Uint8Array(n,t):new Uint8Array(n,t,e),Object.setPrototypeOf(l,s.prototype),l}function p(n){if(n>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|n}function g(n,t){if(s.isBuffer(n))return n.length;if(ArrayBuffer.isView(n)||V(n,ArrayBuffer))return n.byteLength;if("string"!=typeof n)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof n);const e=n.length,l=arguments.length>2&&!0===arguments[2];if(!l&&0===e)return 0;let r=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return G(n).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return $(n).length;default:if(r)return l?-1:G(n).length;t=(""+t).toLowerCase(),r=!0}}function y(n,t,e){let l=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(t>>>=0))return"";for(n||(n="utf8");;)switch(n){case"hex":return P(this,t,e);case"utf8":case"utf-8":return S(this,t,e);case"ascii":return x(this,t,e);case"latin1":case"binary":return B(this,t,e);case"base64":return E(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,e);default:if(l)throw new TypeError("Unknown encoding: "+n);n=(n+"").toLowerCase(),l=!0}}function m(n,t,e){const l=n[t];n[t]=n[e],n[e]=l}function b(n,t,e,l,r){if(0===n.length)return-1;if("string"==typeof e?(l=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),X(e=+e)&&(e=r?0:n.length-1),e<0&&(e=n.length+e),e>=n.length){if(r)return-1;e=n.length-1}else if(e<0){if(!r)return-1;e=0}if("string"==typeof t&&(t=s.from(t,l)),s.isBuffer(t))return 0===t.length?-1:w(n,t,e,l,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(n,t,e):Uint8Array.prototype.lastIndexOf.call(n,t,e):w(n,[t],e,l,r);throw new TypeError("val must be string, number or Buffer")}function w(n,t,e,l,r){let u,i=1,o=n.length,s=t.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(n.length<2||t.length<2)return-1;i=2,o/=2,s/=2,e/=2}function a(n,t){return 1===i?n[t]:n.readUInt16BE(t*i)}if(r){let l=-1;for(u=e;u<o;u++)if(a(n,u)===a(t,-1===l?0:u-l)){if(-1===l&&(l=u),u-l+1===s)return l*i}else-1!==l&&(u-=u-l),l=-1}else for(e+s>o&&(e=o-s),u=e;u>=0;u--){let e=!0;for(let l=0;l<s;l++)if(a(n,u+l)!==a(t,l)){e=!1;break}if(e)return u}return-1}function v(n,t,e,l){e=Number(e)||0;const r=n.length-e;l?(l=Number(l))>r&&(l=r):l=r;const u=t.length;let i;for(l>u/2&&(l=u/2),i=0;i<l;++i){const l=parseInt(t.substr(2*i,2),16);if(X(l))return i;n[e+i]=l}return i}function k(n,t,e,l){return Z(G(t,n.length-e),n,e,l)}function I(n,t,e,l){return Z(function(n){const t=[];for(let e=0;e<n.length;++e)t.push(255&n.charCodeAt(e));return t}(t),n,e,l)}function A(n,t,e,l){return Z($(t),n,e,l)}function _(n,t,e,l){return Z(function(n,t){let e,l,r;const u=[];for(let i=0;i<n.length&&!((t-=2)<0);++i)e=n.charCodeAt(i),l=e>>8,r=e%256,u.push(r),u.push(l);return u}(t,n.length-e),n,e,l)}function E(n,t,e){return 0===t&&e===n.length?l.fromByteArray(n):l.fromByteArray(n.slice(t,e))}function S(n,t,e){e=Math.min(n.length,e);const l=[];let r=t;for(;r<e;){const t=n[r];let u=null,i=t>239?4:t>223?3:t>191?2:1;if(r+i<=e){let e,l,o,s;switch(i){case 1:t<128&&(u=t);break;case 2:e=n[r+1],128==(192&e)&&(s=(31&t)<<6|63&e,s>127&&(u=s));break;case 3:e=n[r+1],l=n[r+2],128==(192&e)&&128==(192&l)&&(s=(15&t)<<12|(63&e)<<6|63&l,s>2047&&(s<55296||s>57343)&&(u=s));break;case 4:e=n[r+1],l=n[r+2],o=n[r+3],128==(192&e)&&128==(192&l)&&128==(192&o)&&(s=(15&t)<<18|(63&e)<<12|(63&l)<<6|63&o,s>65535&&s<1114112&&(u=s))}}null===u?(u=65533,i=1):u>65535&&(u-=65536,l.push(u>>>10&1023|55296),u=56320|1023&u),l.push(u),r+=i}return function(n){const t=n.length;if(t<=T)return String.fromCharCode.apply(String,n);let e="",l=0;for(;l<t;)e+=String.fromCharCode.apply(String,n.slice(l,l+=T));return e}(l)}s.TYPED_ARRAY_SUPPORT=function(){try{const n=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(n,t),42===n.foo()}catch(n){return!1}}(),s.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(s.prototype,"parent",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.buffer}}),Object.defineProperty(s.prototype,"offset",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.byteOffset}}),s.poolSize=8192,s.from=function(n,t,e){return a(n,t,e)},Object.setPrototypeOf(s.prototype,Uint8Array.prototype),Object.setPrototypeOf(s,Uint8Array),s.alloc=function(n,t,e){return function(n,t,e){return c(n),n<=0?o(n):void 0!==t?"string"==typeof e?o(n).fill(t,e):o(n).fill(t):o(n)}(n,t,e)},s.allocUnsafe=function(n){return h(n)},s.allocUnsafeSlow=function(n){return h(n)},s.isBuffer=function(n){return null!=n&&!0===n._isBuffer&&n!==s.prototype},s.compare=function(n,t){if(V(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),V(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(n)||!s.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(n===t)return 0;let e=n.length,l=t.length;for(let r=0,u=Math.min(e,l);r<u;++r)if(n[r]!==t[r]){e=n[r],l=t[r];break}return e<l?-1:l<e?1:0},s.isEncoding=function(n){switch(String(n).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(n,t){if(!Array.isArray(n))throw new TypeError('"list" argument must be an Array of Buffers');if(0===n.length)return s.alloc(0);let e;if(void 0===t)for(t=0,e=0;e<n.length;++e)t+=n[e].length;const l=s.allocUnsafe(t);let r=0;for(e=0;e<n.length;++e){let t=n[e];if(V(t,Uint8Array))r+t.length>l.length?(s.isBuffer(t)||(t=s.from(t)),t.copy(l,r)):Uint8Array.prototype.set.call(l,t,r);else{if(!s.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(l,r)}r+=t.length}return l},s.byteLength=g,s.prototype._isBuffer=!0,s.prototype.swap16=function(){const n=this.length;if(n%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<n;t+=2)m(this,t,t+1);return this},s.prototype.swap32=function(){const n=this.length;if(n%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<n;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},s.prototype.swap64=function(){const n=this.length;if(n%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<n;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},s.prototype.toString=function(){const n=this.length;return 0===n?"":0===arguments.length?S(this,0,n):y.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(n){if(!s.isBuffer(n))throw new TypeError("Argument must be a Buffer");return this===n||0===s.compare(this,n)},s.prototype.inspect=function(){let n="";const e=t.h2;return n=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(n+=" ... "),"<Buffer "+n+">"},u&&(s.prototype[u]=s.prototype.inspect),s.prototype.compare=function(n,t,e,l,r){if(V(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),!s.isBuffer(n))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof n);if(void 0===t&&(t=0),void 0===e&&(e=n?n.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),t<0||e>n.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&t>=e)return 0;if(l>=r)return-1;if(t>=e)return 1;if(this===n)return 0;let u=(r>>>=0)-(l>>>=0),i=(e>>>=0)-(t>>>=0);const o=Math.min(u,i),a=this.slice(l,r),c=n.slice(t,e);for(let s=0;s<o;++s)if(a[s]!==c[s]){u=a[s],i=c[s];break}return u<i?-1:i<u?1:0},s.prototype.includes=function(n,t,e){return-1!==this.indexOf(n,t,e)},s.prototype.indexOf=function(n,t,e){return b(this,n,t,e,!0)},s.prototype.lastIndexOf=function(n,t,e){return b(this,n,t,e,!1)},s.prototype.write=function(n,t,e,l){if(void 0===t)l="utf8",e=this.length,t=0;else if(void 0===e&&"string"==typeof t)l=t,e=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(e)?(e>>>=0,void 0===l&&(l="utf8")):(l=e,e=void 0)}const r=this.length-t;if((void 0===e||e>r)&&(e=r),n.length>0&&(e<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");let u=!1;for(;;)switch(l){case"hex":return v(this,n,t,e);case"utf8":case"utf-8":return k(this,n,t,e);case"ascii":case"latin1":case"binary":return I(this,n,t,e);case"base64":return A(this,n,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,n,t,e);default:if(u)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),u=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function x(n,t,e){let l="";e=Math.min(n.length,e);for(let r=t;r<e;++r)l+=String.fromCharCode(127&n[r]);return l}function B(n,t,e){let l="";e=Math.min(n.length,e);for(let r=t;r<e;++r)l+=String.fromCharCode(n[r]);return l}function P(n,t,e){const l=n.length;(!t||t<0)&&(t=0),(!e||e<0||e>l)&&(e=l);let r="";for(let u=t;u<e;++u)r+=Y[n[u]];return r}function R(n,t,e){const l=n.slice(t,e);let r="";for(let u=0;u<l.length-1;u+=2)r+=String.fromCharCode(l[u]+256*l[u+1]);return r}function O(n,t,e){if(n%1!=0||n<0)throw new RangeError("offset is not uint");if(n+t>e)throw new RangeError("Trying to access beyond buffer length")}function M(n,t,e,l,r,u){if(!s.isBuffer(n))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<u)throw new RangeError('"value" argument is out of bounds');if(e+l>n.length)throw new RangeError("Index out of range")}function C(n,t,e,l,r){j(t,l,r,n,e,7);let u=Number(t&BigInt(4294967295));n[e++]=u,u>>=8,n[e++]=u,u>>=8,n[e++]=u,u>>=8,n[e++]=u;let i=Number(t>>BigInt(32)&BigInt(4294967295));return n[e++]=i,i>>=8,n[e++]=i,i>>=8,n[e++]=i,i>>=8,n[e++]=i,e}function U(n,t,e,l,r){j(t,l,r,n,e,7);let u=Number(t&BigInt(4294967295));n[e+7]=u,u>>=8,n[e+6]=u,u>>=8,n[e+5]=u,u>>=8,n[e+4]=u;let i=Number(t>>BigInt(32)&BigInt(4294967295));return n[e+3]=i,i>>=8,n[e+2]=i,i>>=8,n[e+1]=i,i>>=8,n[e]=i,e+8}function L(n,t,e,l,r,u){if(e+l>n.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function N(n,t,e,l,u){return t=+t,e>>>=0,u||L(n,0,e,4),r.write(n,t,e,l,23,4),e+4}function z(n,t,e,l,u){return t=+t,e>>>=0,u||L(n,0,e,8),r.write(n,t,e,l,52,8),e+8}s.prototype.slice=function(n,t){const e=this.length;(n=~~n)<0?(n+=e)<0&&(n=0):n>e&&(n=e),(t=void 0===t?e:~~t)<0?(t+=e)<0&&(t=0):t>e&&(t=e),t<n&&(t=n);const l=this.subarray(n,t);return Object.setPrototypeOf(l,s.prototype),l},s.prototype.readUintLE=s.prototype.readUIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n],r=1,u=0;for(;++u<t&&(r*=256);)l+=this[n+u]*r;return l},s.prototype.readUintBE=s.prototype.readUIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n+--t],r=1;for(;t>0&&(r*=256);)l+=this[n+--t]*r;return l},s.prototype.readUint8=s.prototype.readUInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),this[n]},s.prototype.readUint16LE=s.prototype.readUInt16LE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]|this[n+1]<<8},s.prototype.readUint16BE=s.prototype.readUInt16BE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]<<8|this[n+1]},s.prototype.readUint32LE=s.prototype.readUInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),(this[n]|this[n+1]<<8|this[n+2]<<16)+16777216*this[n+3]},s.prototype.readUint32BE=s.prototype.readUInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),16777216*this[n]+(this[n+1]<<16|this[n+2]<<8|this[n+3])},s.prototype.readBigUInt64LE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=t+256*this[++n]+65536*this[++n]+this[++n]*2**24,r=this[++n]+256*this[++n]+65536*this[++n]+e*2**24;return BigInt(l)+(BigInt(r)<<BigInt(32))})),s.prototype.readBigUInt64BE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=t*2**24+65536*this[++n]+256*this[++n]+this[++n],r=this[++n]*2**24+65536*this[++n]+256*this[++n]+e;return(BigInt(l)<<BigInt(32))+BigInt(r)})),s.prototype.readIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n],r=1,u=0;for(;++u<t&&(r*=256);)l+=this[n+u]*r;return r*=128,l>=r&&(l-=Math.pow(2,8*t)),l},s.prototype.readIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=t,r=1,u=this[n+--l];for(;l>0&&(r*=256);)u+=this[n+--l]*r;return r*=128,u>=r&&(u-=Math.pow(2,8*t)),u},s.prototype.readInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),128&this[n]?-1*(255-this[n]+1):this[n]},s.prototype.readInt16LE=function(n,t){n>>>=0,t||O(n,2,this.length);const e=this[n]|this[n+1]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt16BE=function(n,t){n>>>=0,t||O(n,2,this.length);const e=this[n+1]|this[n]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]|this[n+1]<<8|this[n+2]<<16|this[n+3]<<24},s.prototype.readInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]<<24|this[n+1]<<16|this[n+2]<<8|this[n+3]},s.prototype.readBigInt64LE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=this[n+4]+256*this[n+5]+65536*this[n+6]+(e<<24);return(BigInt(l)<<BigInt(32))+BigInt(t+256*this[++n]+65536*this[++n]+this[++n]*2**24)})),s.prototype.readBigInt64BE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=(t<<24)+65536*this[++n]+256*this[++n]+this[++n];return(BigInt(l)<<BigInt(32))+BigInt(this[++n]*2**24+65536*this[++n]+256*this[++n]+e)})),s.prototype.readFloatLE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!0,23,4)},s.prototype.readFloatBE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!1,23,4)},s.prototype.readDoubleLE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!0,52,8)},s.prototype.readDoubleBE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!1,52,8)},s.prototype.writeUintLE=s.prototype.writeUIntLE=function(n,t,e,l){if(n=+n,t>>>=0,e>>>=0,!l){M(this,n,t,e,Math.pow(2,8*e)-1,0)}let r=1,u=0;for(this[t]=255&n;++u<e&&(r*=256);)this[t+u]=n/r&255;return t+e},s.prototype.writeUintBE=s.prototype.writeUIntBE=function(n,t,e,l){if(n=+n,t>>>=0,e>>>=0,!l){M(this,n,t,e,Math.pow(2,8*e)-1,0)}let r=e-1,u=1;for(this[t+r]=255&n;--r>=0&&(u*=256);)this[t+r]=n/u&255;return t+e},s.prototype.writeUint8=s.prototype.writeUInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,255,0),this[t]=255&n,t+1},s.prototype.writeUint16LE=s.prototype.writeUInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeUint16BE=s.prototype.writeUInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeUint32LE=s.prototype.writeUInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t+3]=n>>>24,this[t+2]=n>>>16,this[t+1]=n>>>8,this[t]=255&n,t+4},s.prototype.writeUint32BE=s.prototype.writeUInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeBigUInt64LE=J((function(n,t=0){return C(this,n,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeBigUInt64BE=J((function(n,t=0){return U(this,n,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeIntLE=function(n,t,e,l){if(n=+n,t>>>=0,!l){const l=Math.pow(2,8*e-1);M(this,n,t,e,l-1,-l)}let r=0,u=1,i=0;for(this[t]=255&n;++r<e&&(u*=256);)n<0&&0===i&&0!==this[t+r-1]&&(i=1),this[t+r]=(n/u>>0)-i&255;return t+e},s.prototype.writeIntBE=function(n,t,e,l){if(n=+n,t>>>=0,!l){const l=Math.pow(2,8*e-1);M(this,n,t,e,l-1,-l)}let r=e-1,u=1,i=0;for(this[t+r]=255&n;--r>=0&&(u*=256);)n<0&&0===i&&0!==this[t+r+1]&&(i=1),this[t+r]=(n/u>>0)-i&255;return t+e},s.prototype.writeInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,127,-128),n<0&&(n=255+n+1),this[t]=255&n,t+1},s.prototype.writeInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),this[t]=255&n,this[t+1]=n>>>8,this[t+2]=n>>>16,this[t+3]=n>>>24,t+4},s.prototype.writeInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),n<0&&(n=4294967295+n+1),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeBigInt64LE=J((function(n,t=0){return C(this,n,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeBigInt64BE=J((function(n,t=0){return U(this,n,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeFloatLE=function(n,t,e){return N(this,n,t,!0,e)},s.prototype.writeFloatBE=function(n,t,e){return N(this,n,t,!1,e)},s.prototype.writeDoubleLE=function(n,t,e){return z(this,n,t,!0,e)},s.prototype.writeDoubleBE=function(n,t,e){return z(this,n,t,!1,e)},s.prototype.copy=function(n,t,e,l){if(!s.isBuffer(n))throw new TypeError("argument should be a Buffer");if(e||(e=0),l||0===l||(l=this.length),t>=n.length&&(t=n.length),t||(t=0),l>0&&l<e&&(l=e),l===e)return 0;if(0===n.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),n.length-t<l-e&&(l=n.length-t+e);const r=l-e;return this===n&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,e,l):Uint8Array.prototype.set.call(n,this.subarray(e,l),t),r},s.prototype.fill=function(n,t,e,l){if("string"==typeof n){if("string"==typeof t?(l=t,t=0,e=this.length):"string"==typeof e&&(l=e,e=this.length),void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!s.isEncoding(l))throw new TypeError("Unknown encoding: "+l);if(1===n.length){const t=n.charCodeAt(0);("utf8"===l&&t<128||"latin1"===l)&&(n=t)}}else"number"==typeof n?n&=255:"boolean"==typeof n&&(n=Number(n));if(t<0||this.length<t||this.length<e)throw new RangeError("Out of range index");if(e<=t)return this;let r;if(t>>>=0,e=void 0===e?this.length:e>>>0,n||(n=0),"number"==typeof n)for(r=t;r<e;++r)this[r]=n;else{const u=s.isBuffer(n)?n:s.from(n,l),i=u.length;if(0===i)throw new TypeError('The value "'+n+'" is invalid for argument "value"');for(r=0;r<e-t;++r)this[r+t]=u[r%i]}return this};const K={};function D(n,t,e){K[n]=class extends e{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${n}]`,this.stack,delete this.name}get code(){return n}set code(n){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:n,writable:!0})}toString(){return`${this.name} [${n}]: ${this.message}`}}}function W(n){let t="",e=n.length;const l="-"===n[0]?1:0;for(;e>=l+4;e-=3)t=`_${n.slice(e-3,e)}${t}`;return`${n.slice(0,e)}${t}`}function j(n,t,e,l,r,u){if(n>e||n<t){const l="bigint"==typeof t?"n":"";let r;throw r=u>3?0===t||t===BigInt(0)?`>= 0${l} and < 2${l} ** ${8*(u+1)}${l}`:`>= -(2${l} ** ${8*(u+1)-1}${l}) and < 2 ** ${8*(u+1)-1}${l}`:`>= ${t}${l} and <= ${e}${l}`,new K.ERR_OUT_OF_RANGE("value",r,n)}!function(n,t,e){F(t,"offset"),void 0!==n[t]&&void 0!==n[t+e]||q(t,n.length-(e+1))}(l,r,u)}function F(n,t){if("number"!=typeof n)throw new K.ERR_INVALID_ARG_TYPE(t,"number",n)}function q(n,t,e){if(Math.floor(n)!==n)throw F(n,e),new K.ERR_OUT_OF_RANGE(e||"offset","an integer",n);if(t<0)throw new K.ERR_BUFFER_OUT_OF_BOUNDS;throw new K.ERR_OUT_OF_RANGE(e||"offset",`>= ${e?1:0} and <= ${t}`,n)}D("ERR_BUFFER_OUT_OF_BOUNDS",(function(n){return n?`${n} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),D("ERR_INVALID_ARG_TYPE",(function(n,t){return`The "${n}" argument must be of type number. Received type ${typeof t}`}),TypeError),D("ERR_OUT_OF_RANGE",(function(n,t,e){let l=`The value of "${n}" is out of range.`,r=e;return Number.isInteger(e)&&Math.abs(e)>2**32?r=W(String(e)):"bigint"==typeof e&&(r=String(e),(e>BigInt(2)**BigInt(32)||e<-(BigInt(2)**BigInt(32)))&&(r=W(r)),r+="n"),l+=` It must be ${t}. Received ${r}`,l}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function G(n,t){let e;t=t||1/0;const l=n.length;let r=null;const u=[];for(let i=0;i<l;++i){if(e=n.charCodeAt(i),e>55295&&e<57344){if(!r){if(e>56319){(t-=3)>-1&&u.push(239,191,189);continue}if(i+1===l){(t-=3)>-1&&u.push(239,191,189);continue}r=e;continue}if(e<56320){(t-=3)>-1&&u.push(239,191,189),r=e;continue}e=65536+(r-55296<<10|e-56320)}else r&&(t-=3)>-1&&u.push(239,191,189);if(r=null,e<128){if((t-=1)<0)break;u.push(e)}else if(e<2048){if((t-=2)<0)break;u.push(e>>6|192,63&e|128)}else if(e<65536){if((t-=3)<0)break;u.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;u.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return u}function $(n){return l.toByteArray(function(n){if((n=(n=n.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;n.length%4!=0;)n+="=";return n}(n))}function Z(n,t,e,l){let r;for(r=0;r<l&&!(r+e>=t.length||r>=n.length);++r)t[r+e]=n[r];return r}function V(n,t){return n instanceof t||null!=n&&null!=n.constructor&&null!=n.constructor.name&&n.constructor.name===t.name}function X(n){return n!=n}const Y=function(){const n="0123456789abcdef",t=new Array(256);for(let e=0;e<16;++e){const l=16*e;for(let r=0;r<16;++r)t[l+r]=n[e]+n[r]}return t}();function J(n){return"undefined"==typeof BigInt?Q:n}function Q(){throw new Error("BigInt not supported")}},96346:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.s16=t.s8=t.nu64be=t.u48be=t.u40be=t.u32be=t.u24be=t.u16be=t.nu64=t.u48=t.u40=t.u32=t.u24=t.u16=t.u8=t.offset=t.greedy=t.Constant=t.UTF8=t.CString=t.Blob=t.Boolean=t.BitField=t.BitStructure=t.VariantLayout=t.Union=t.UnionLayoutDiscriminator=t.UnionDiscriminator=t.Structure=t.Sequence=t.DoubleBE=t.Double=t.FloatBE=t.Float=t.NearInt64BE=t.NearInt64=t.NearUInt64BE=t.NearUInt64=t.IntBE=t.Int=t.UIntBE=t.UInt=t.OffsetLayout=t.GreedyCount=t.ExternalLayout=t.bindConstructorLayout=t.nameWithProperty=t.Layout=t.uint8ArrayToBuffer=t.checkUint8Array=void 0,t.constant=t.utf8=t.cstr=t.blob=t.unionLayoutDiscriminator=t.union=t.seq=t.bits=t.struct=t.f64be=t.f64=t.f32be=t.f32=t.ns64be=t.s48be=t.s40be=t.s32be=t.s24be=t.s16be=t.ns64=t.s48=t.s40=t.s32=t.s24=void 0;const l=e(72753);function r(n){if(!(n instanceof Uint8Array))throw new TypeError("b must be a Uint8Array")}function u(n){return r(n),l.Buffer.from(n.buffer,n.byteOffset,n.length)}t.checkUint8Array=r,t.uint8ArrayToBuffer=u;class i{constructor(n,t){if(!Number.isInteger(n))throw new TypeError("span must be an integer");this.span=n,this.property=t}makeDestinationObject(){return{}}getSpan(n,t){if(0>this.span)throw new RangeError("indeterminate span");return this.span}replicate(n){const t=Object.create(this.constructor.prototype);return Object.assign(t,this),t.property=n,t}fromArray(n){}}function o(n,t){return t.property?n+"["+t.property+"]":n}t.Layout=i,t.nameWithProperty=o,t.bindConstructorLayout=function(n,t){if("function"!=typeof n)throw new TypeError("Class must be constructor");if(Object.prototype.hasOwnProperty.call(n,"layout_"))throw new Error("Class is already bound to a layout");if(!(t&&t instanceof i))throw new TypeError("layout must be a Layout");if(Object.prototype.hasOwnProperty.call(t,"boundConstructor_"))throw new Error("layout is already bound to a constructor");n.layout_=t,t.boundConstructor_=n,t.makeDestinationObject=()=>new n,Object.defineProperty(n.prototype,"encode",{value(n,e){return t.encode(this,n,e)},writable:!0}),Object.defineProperty(n,"decode",{value:(n,e)=>t.decode(n,e),writable:!0})};class s extends i{isCount(){throw new Error("ExternalLayout is abstract")}}t.ExternalLayout=s;class a extends s{constructor(n=1,t){if(!Number.isInteger(n)||0>=n)throw new TypeError("elementSpan must be a (positive) integer");super(-1,t),this.elementSpan=n}isCount(){return!0}decode(n,t=0){r(n);const e=n.length-t;return Math.floor(e/this.elementSpan)}encode(n,t,e){return 0}}t.GreedyCount=a;class c extends s{constructor(n,t=0,e){if(!(n instanceof i))throw new TypeError("layout must be a Layout");if(!Number.isInteger(t))throw new TypeError("offset must be integer or undefined");super(n.span,e||n.property),this.layout=n,this.offset=t}isCount(){return this.layout instanceof h||this.layout instanceof d}decode(n,t=0){return this.layout.decode(n,t+this.offset)}encode(n,t,e=0){return this.layout.encode(n,t,e+this.offset)}}t.OffsetLayout=c;class h extends i{constructor(n,t){if(super(n,t),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(n,t=0){return u(n).readUIntLE(t,this.span)}encode(n,t,e=0){return u(t).writeUIntLE(n,e,this.span),this.span}}t.UInt=h;class d extends i{constructor(n,t){if(super(n,t),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(n,t=0){return u(n).readUIntBE(t,this.span)}encode(n,t,e=0){return u(t).writeUIntBE(n,e,this.span),this.span}}t.UIntBE=d;class f extends i{constructor(n,t){if(super(n,t),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(n,t=0){return u(n).readIntLE(t,this.span)}encode(n,t,e=0){return u(t).writeIntLE(n,e,this.span),this.span}}t.Int=f;class p extends i{constructor(n,t){if(super(n,t),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(n,t=0){return u(n).readIntBE(t,this.span)}encode(n,t,e=0){return u(t).writeIntBE(n,e,this.span),this.span}}t.IntBE=p;const g=Math.pow(2,32);function y(n){const t=Math.floor(n/g);return{hi32:t,lo32:n-t*g}}function m(n,t){return n*g+t}class b extends i{constructor(n){super(8,n)}decode(n,t=0){const e=u(n),l=e.readUInt32LE(t);return m(e.readUInt32LE(t+4),l)}encode(n,t,e=0){const l=y(n),r=u(t);return r.writeUInt32LE(l.lo32,e),r.writeUInt32LE(l.hi32,e+4),8}}t.NearUInt64=b;class w extends i{constructor(n){super(8,n)}decode(n,t=0){const e=u(n);return m(e.readUInt32BE(t),e.readUInt32BE(t+4))}encode(n,t,e=0){const l=y(n),r=u(t);return r.writeUInt32BE(l.hi32,e),r.writeUInt32BE(l.lo32,e+4),8}}t.NearUInt64BE=w;class v extends i{constructor(n){super(8,n)}decode(n,t=0){const e=u(n),l=e.readUInt32LE(t);return m(e.readInt32LE(t+4),l)}encode(n,t,e=0){const l=y(n),r=u(t);return r.writeUInt32LE(l.lo32,e),r.writeInt32LE(l.hi32,e+4),8}}t.NearInt64=v;class k extends i{constructor(n){super(8,n)}decode(n,t=0){const e=u(n);return m(e.readInt32BE(t),e.readUInt32BE(t+4))}encode(n,t,e=0){const l=y(n),r=u(t);return r.writeInt32BE(l.hi32,e),r.writeUInt32BE(l.lo32,e+4),8}}t.NearInt64BE=k;class I extends i{constructor(n){super(4,n)}decode(n,t=0){return u(n).readFloatLE(t)}encode(n,t,e=0){return u(t).writeFloatLE(n,e),4}}t.Float=I;class A extends i{constructor(n){super(4,n)}decode(n,t=0){return u(n).readFloatBE(t)}encode(n,t,e=0){return u(t).writeFloatBE(n,e),4}}t.FloatBE=A;class _ extends i{constructor(n){super(8,n)}decode(n,t=0){return u(n).readDoubleLE(t)}encode(n,t,e=0){return u(t).writeDoubleLE(n,e),8}}t.Double=_;class E extends i{constructor(n){super(8,n)}decode(n,t=0){return u(n).readDoubleBE(t)}encode(n,t,e=0){return u(t).writeDoubleBE(n,e),8}}t.DoubleBE=E;class S extends i{constructor(n,t,e){if(!(n instanceof i))throw new TypeError("elementLayout must be a Layout");if(!(t instanceof s&&t.isCount()||Number.isInteger(t)&&0<=t))throw new TypeError("count must be non-negative integer or an unsigned integer ExternalLayout");let l=-1;!(t instanceof s)&&0<n.span&&(l=t*n.span),super(l,e),this.elementLayout=n,this.count=t}getSpan(n,t=0){if(0<=this.span)return this.span;let e=0,l=this.count;if(l instanceof s&&(l=l.decode(n,t)),0<this.elementLayout.span)e=l*this.elementLayout.span;else{let r=0;for(;r<l;)e+=this.elementLayout.getSpan(n,t+e),++r}return e}decode(n,t=0){const e=[];let l=0,r=this.count;for(r instanceof s&&(r=r.decode(n,t));l<r;)e.push(this.elementLayout.decode(n,t)),t+=this.elementLayout.getSpan(n,t),l+=1;return e}encode(n,t,e=0){const l=this.elementLayout,r=n.reduce(((n,r)=>n+l.encode(r,t,e+n)),0);return this.count instanceof s&&this.count.encode(n.length,t,e),r}}t.Sequence=S;class T extends i{constructor(n,t,e){if(!Array.isArray(n)||!n.reduce(((n,t)=>n&&t instanceof i),!0))throw new TypeError("fields must be array of Layout instances");"boolean"==typeof t&&void 0===e&&(e=t,t=void 0);for(const u of n)if(0>u.span&&void 0===u.property)throw new Error("fields cannot contain unnamed variable-length layout");let l=-1;try{l=n.reduce(((n,t)=>n+t.getSpan()),0)}catch(r){}super(l,t),this.fields=n,this.decodePrefixes=!!e}getSpan(n,t=0){if(0<=this.span)return this.span;let e=0;try{e=this.fields.reduce(((e,l)=>{const r=l.getSpan(n,t);return t+=r,e+r}),0)}catch(l){throw new RangeError("indeterminate span")}return e}decode(n,t=0){r(n);const e=this.makeDestinationObject();for(const l of this.fields)if(void 0!==l.property&&(e[l.property]=l.decode(n,t)),t+=l.getSpan(n,t),this.decodePrefixes&&n.length===t)break;return e}encode(n,t,e=0){const l=e;let r=0,u=0;for(const i of this.fields){let l=i.span;if(u=0<l?l:0,void 0!==i.property){const r=n[i.property];void 0!==r&&(u=i.encode(r,t,e),0>l&&(l=i.getSpan(t,e)))}r=e,e+=l}return r+u-l}fromArray(n){const t=this.makeDestinationObject();for(const e of this.fields)void 0!==e.property&&0<n.length&&(t[e.property]=n.shift());return t}layoutFor(n){if("string"!=typeof n)throw new TypeError("property must be string");for(const t of this.fields)if(t.property===n)return t}offsetOf(n){if("string"!=typeof n)throw new TypeError("property must be string");let t=0;for(const e of this.fields){if(e.property===n)return t;0>e.span?t=-1:0<=t&&(t+=e.span)}}}t.Structure=T;class x{constructor(n){this.property=n}decode(n,t){throw new Error("UnionDiscriminator is abstract")}encode(n,t,e){throw new Error("UnionDiscriminator is abstract")}}t.UnionDiscriminator=x;class B extends x{constructor(n,t){if(!(n instanceof s&&n.isCount()))throw new TypeError("layout must be an unsigned integer ExternalLayout");super(t||n.property||"variant"),this.layout=n}decode(n,t){return this.layout.decode(n,t)}encode(n,t,e){return this.layout.encode(n,t,e)}}t.UnionLayoutDiscriminator=B;class P extends i{constructor(n,t,e){let l;if(n instanceof h||n instanceof d)l=new B(new c(n));else if(n instanceof s&&n.isCount())l=new B(n);else{if(!(n instanceof x))throw new TypeError("discr must be a UnionDiscriminator or an unsigned integer layout");l=n}if(void 0===t&&(t=null),!(null===t||t instanceof i))throw new TypeError("defaultLayout must be null or a Layout");if(null!==t){if(0>t.span)throw new Error("defaultLayout must have constant span");void 0===t.property&&(t=t.replicate("content"))}let r=-1;t&&(r=t.span,0<=r&&(n instanceof h||n instanceof d)&&(r+=l.layout.span)),super(r,e),this.discriminator=l,this.usesPrefixDiscriminator=n instanceof h||n instanceof d,this.defaultLayout=t,this.registry={};let u=this.defaultGetSourceVariant.bind(this);this.getSourceVariant=function(n){return u(n)},this.configGetSourceVariant=function(n){u=n.bind(this)}}getSpan(n,t=0){if(0<=this.span)return this.span;const e=this.getVariant(n,t);if(!e)throw new Error("unable to determine span for unrecognized variant");return e.getSpan(n,t)}defaultGetSourceVariant(n){if(Object.prototype.hasOwnProperty.call(n,this.discriminator.property)){if(this.defaultLayout&&this.defaultLayout.property&&Object.prototype.hasOwnProperty.call(n,this.defaultLayout.property))return;const t=this.registry[n[this.discriminator.property]];if(t&&(!t.layout||t.property&&Object.prototype.hasOwnProperty.call(n,t.property)))return t}else for(const t in this.registry){const e=this.registry[t];if(e.property&&Object.prototype.hasOwnProperty.call(n,e.property))return e}throw new Error("unable to infer src variant")}decode(n,t=0){let e;const l=this.discriminator,r=l.decode(n,t),u=this.registry[r];if(void 0===u){const u=this.defaultLayout;let i=0;this.usesPrefixDiscriminator&&(i=l.layout.span),e=this.makeDestinationObject(),e[l.property]=r,e[u.property]=u.decode(n,t+i)}else e=u.decode(n,t);return e}encode(n,t,e=0){const l=this.getSourceVariant(n);if(void 0===l){const l=this.discriminator,r=this.defaultLayout;let u=0;return this.usesPrefixDiscriminator&&(u=l.layout.span),l.encode(n[l.property],t,e),u+r.encode(n[r.property],t,e+u)}return l.encode(n,t,e)}addVariant(n,t,e){const l=new R(this,n,t,e);return this.registry[n]=l,l}getVariant(n,t=0){let e;return e=n instanceof Uint8Array?this.discriminator.decode(n,t):n,this.registry[e]}}t.Union=P;class R extends i{constructor(n,t,e,l){if(!(n instanceof P))throw new TypeError("union must be a Union");if(!Number.isInteger(t)||0>t)throw new TypeError("variant must be a (non-negative) integer");if("string"==typeof e&&void 0===l&&(l=e,e=null),e){if(!(e instanceof i))throw new TypeError("layout must be a Layout");if(null!==n.defaultLayout&&0<=e.span&&e.span>n.defaultLayout.span)throw new Error("variant span exceeds span of containing union");if("string"!=typeof l)throw new TypeError("variant must have a String property")}let r=n.span;0>n.span&&(r=e?e.span:0,0<=r&&n.usesPrefixDiscriminator&&(r+=n.discriminator.layout.span)),super(r,l),this.union=n,this.variant=t,this.layout=e||null}getSpan(n,t=0){if(0<=this.span)return this.span;let e=0;this.union.usesPrefixDiscriminator&&(e=this.union.discriminator.layout.span);let l=0;return this.layout&&(l=this.layout.getSpan(n,t+e)),e+l}decode(n,t=0){const e=this.makeDestinationObject();if(this!==this.union.getVariant(n,t))throw new Error("variant mismatch");let l=0;return this.union.usesPrefixDiscriminator&&(l=this.union.discriminator.layout.span),this.layout?e[this.property]=this.layout.decode(n,t+l):this.property?e[this.property]=!0:this.union.usesPrefixDiscriminator&&(e[this.union.discriminator.property]=this.variant),e}encode(n,t,e=0){let l=0;if(this.union.usesPrefixDiscriminator&&(l=this.union.discriminator.layout.span),this.layout&&!Object.prototype.hasOwnProperty.call(n,this.property))throw new TypeError("variant lacks property "+this.property);this.union.discriminator.encode(this.variant,t,e);let r=l;if(this.layout&&(this.layout.encode(n[this.property],t,e+l),r+=this.layout.getSpan(t,e+l),0<=this.union.span&&r>this.union.span))throw new Error("encoded variant overruns containing union");return r}fromArray(n){if(this.layout)return this.layout.fromArray(n)}}function O(n){return 0>n&&(n+=4294967296),n}t.VariantLayout=R;class M extends i{constructor(n,t,e){if(!(n instanceof h||n instanceof d))throw new TypeError("word must be a UInt or UIntBE layout");if("string"==typeof t&&void 0===e&&(e=t,t=!1),4<n.span)throw new RangeError("word cannot exceed 32 bits");super(n.span,e),this.word=n,this.msb=!!t,this.fields=[];let l=0;this._packedSetValue=function(n){return l=O(n),this},this._packedGetValue=function(){return l}}decode(n,t=0){const e=this.makeDestinationObject(),l=this.word.decode(n,t);this._packedSetValue(l);for(const r of this.fields)void 0!==r.property&&(e[r.property]=r.decode(n));return e}encode(n,t,e=0){const l=this.word.decode(t,e);this._packedSetValue(l);for(const r of this.fields)if(void 0!==r.property){const t=n[r.property];void 0!==t&&r.encode(t)}return this.word.encode(this._packedGetValue(),t,e)}addField(n,t){const e=new C(this,n,t);return this.fields.push(e),e}addBoolean(n){const t=new U(this,n);return this.fields.push(t),t}fieldFor(n){if("string"!=typeof n)throw new TypeError("property must be string");for(const t of this.fields)if(t.property===n)return t}}t.BitStructure=M;class C{constructor(n,t,e){if(!(n instanceof M))throw new TypeError("container must be a BitStructure");if(!Number.isInteger(t)||0>=t)throw new TypeError("bits must be positive integer");const l=8*n.span,r=n.fields.reduce(((n,t)=>n+t.bits),0);if(t+r>l)throw new Error("bits too long for span remainder ("+(l-r)+" of "+l+" remain)");this.container=n,this.bits=t,this.valueMask=(1<<t)-1,32===t&&(this.valueMask=4294967295),this.start=r,this.container.msb&&(this.start=l-r-t),this.wordMask=O(this.valueMask<<this.start),this.property=e}decode(n,t){return O(this.container._packedGetValue()&this.wordMask)>>>this.start}encode(n){if("number"!=typeof n||!Number.isInteger(n)||n!==O(n&this.valueMask))throw new TypeError(o("BitField.encode",this)+" value must be integer not exceeding "+this.valueMask);const t=this.container._packedGetValue(),e=O(n<<this.start);this.container._packedSetValue(O(t&~this.wordMask)|e)}}t.BitField=C;class U extends C{constructor(n,t){super(n,1,t)}decode(n,t){return!!super.decode(n,t)}encode(n){"boolean"==typeof n&&(n=+n),super.encode(n)}}t.Boolean=U;class L extends i{constructor(n,t){if(!(n instanceof s&&n.isCount()||Number.isInteger(n)&&0<=n))throw new TypeError("length must be positive integer or an unsigned integer ExternalLayout");let e=-1;n instanceof s||(e=n),super(e,t),this.length=n}getSpan(n,t){let e=this.span;return 0>e&&(e=this.length.decode(n,t)),e}decode(n,t=0){let e=this.span;return 0>e&&(e=this.length.decode(n,t)),u(n).slice(t,t+e)}encode(n,t,e){let l=this.length;if(this.length instanceof s&&(l=n.length),!(n instanceof Uint8Array&&l===n.length))throw new TypeError(o("Blob.encode",this)+" requires (length "+l+") Uint8Array as src");if(e+l>t.length)throw new RangeError("encoding overruns Uint8Array");const r=u(n);return u(t).write(r.toString("hex"),e,l,"hex"),this.length instanceof s&&this.length.encode(l,t,e),l}}t.Blob=L;class N extends i{constructor(n){super(-1,n)}getSpan(n,t=0){r(n);let e=t;for(;e<n.length&&0!==n[e];)e+=1;return 1+e-t}decode(n,t=0){const e=this.getSpan(n,t);return u(n).slice(t,t+e-1).toString("utf-8")}encode(n,t,e=0){"string"!=typeof n&&(n=String(n));const r=l.Buffer.from(n,"utf8"),i=r.length;if(e+i>t.length)throw new RangeError("encoding overruns Buffer");const o=u(t);return r.copy(o,e),o[e+i]=0,i+1}}t.CString=N;class z extends i{constructor(n,t){if("string"==typeof n&&void 0===t&&(t=n,n=void 0),void 0===n)n=-1;else if(!Number.isInteger(n))throw new TypeError("maxSpan must be an integer");super(-1,t),this.maxSpan=n}getSpan(n,t=0){return r(n),n.length-t}decode(n,t=0){const e=this.getSpan(n,t);if(0<=this.maxSpan&&this.maxSpan<e)throw new RangeError("text length exceeds maxSpan");return u(n).slice(t,t+e).toString("utf-8")}encode(n,t,e=0){"string"!=typeof n&&(n=String(n));const r=l.Buffer.from(n,"utf8"),i=r.length;if(0<=this.maxSpan&&this.maxSpan<i)throw new RangeError("text length exceeds maxSpan");if(e+i>t.length)throw new RangeError("encoding overruns Buffer");return r.copy(u(t),e),i}}t.UTF8=z;class K extends i{constructor(n,t){super(0,t),this.value=n}decode(n,t){return this.value}encode(n,t,e){return 0}}t.Constant=K,t.greedy=(n,t)=>new a(n,t),t.offset=(n,t,e)=>new c(n,t,e),t.u8=n=>new h(1,n),t.u16=n=>new h(2,n),t.u24=n=>new h(3,n),t.u32=n=>new h(4,n),t.u40=n=>new h(5,n),t.u48=n=>new h(6,n),t.nu64=n=>new b(n),t.u16be=n=>new d(2,n),t.u24be=n=>new d(3,n),t.u32be=n=>new d(4,n),t.u40be=n=>new d(5,n),t.u48be=n=>new d(6,n),t.nu64be=n=>new w(n),t.s8=n=>new f(1,n),t.s16=n=>new f(2,n),t.s24=n=>new f(3,n),t.s32=n=>new f(4,n),t.s40=n=>new f(5,n),t.s48=n=>new f(6,n),t.ns64=n=>new v(n),t.s16be=n=>new p(2,n),t.s24be=n=>new p(3,n),t.s32be=n=>new p(4,n),t.s40be=n=>new p(5,n),t.s48be=n=>new p(6,n),t.ns64be=n=>new k(n),t.f32=n=>new I(n),t.f32be=n=>new A(n),t.f64=n=>new _(n),t.f64be=n=>new E(n),t.struct=(n,t,e)=>new T(n,t,e),t.bits=(n,t,e)=>new M(n,t,e),t.seq=(n,t,e)=>new S(n,t,e),t.union=(n,t,e)=>new P(n,t,e),t.unionLayoutDiscriminator=(n,t)=>new B(n,t),t.blob=(n,t)=>new L(n,t),t.cstr=n=>new N(n),t.utf8=(n,t)=>new z(n,t),t.constant=(n,t)=>new K(n,t)},72753:(n,t,e)=>{"use strict";const l=e(95766),r=e(62333),u="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=s,t.SlowBuffer=function(n){+n!=n&&(n=0);return s.alloc(+n)},t.INSPECT_MAX_BYTES=50;const i=2147483647;function o(n){if(n>i)throw new RangeError('The value "'+n+'" is invalid for option "size"');const t=new Uint8Array(n);return Object.setPrototypeOf(t,s.prototype),t}function s(n,t,e){if("number"==typeof n){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(n)}return a(n,t,e)}function a(n,t,e){if("string"==typeof n)return function(n,t){"string"==typeof t&&""!==t||(t="utf8");if(!s.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const e=0|g(n,t);let l=o(e);const r=l.write(n,t);r!==e&&(l=l.slice(0,r));return l}(n,t);if(ArrayBuffer.isView(n))return function(n){if(V(n,Uint8Array)){const t=new Uint8Array(n);return f(t.buffer,t.byteOffset,t.byteLength)}return d(n)}(n);if(null==n)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n);if(V(n,ArrayBuffer)||n&&V(n.buffer,ArrayBuffer))return f(n,t,e);if("undefined"!=typeof SharedArrayBuffer&&(V(n,SharedArrayBuffer)||n&&V(n.buffer,SharedArrayBuffer)))return f(n,t,e);if("number"==typeof n)throw new TypeError('The "value" argument must not be of type number. Received type number');const l=n.valueOf&&n.valueOf();if(null!=l&&l!==n)return s.from(l,t,e);const r=function(n){if(s.isBuffer(n)){const t=0|p(n.length),e=o(t);return 0===e.length||n.copy(e,0,0,t),e}if(void 0!==n.length)return"number"!=typeof n.length||X(n.length)?o(0):d(n);if("Buffer"===n.type&&Array.isArray(n.data))return d(n.data)}(n);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof n[Symbol.toPrimitive])return s.from(n[Symbol.toPrimitive]("string"),t,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n)}function c(n){if("number"!=typeof n)throw new TypeError('"size" argument must be of type number');if(n<0)throw new RangeError('The value "'+n+'" is invalid for option "size"')}function h(n){return c(n),o(n<0?0:0|p(n))}function d(n){const t=n.length<0?0:0|p(n.length),e=o(t);for(let l=0;l<t;l+=1)e[l]=255&n[l];return e}function f(n,t,e){if(t<0||n.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(n.byteLength<t+(e||0))throw new RangeError('"length" is outside of buffer bounds');let l;return l=void 0===t&&void 0===e?new Uint8Array(n):void 0===e?new Uint8Array(n,t):new Uint8Array(n,t,e),Object.setPrototypeOf(l,s.prototype),l}function p(n){if(n>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|n}function g(n,t){if(s.isBuffer(n))return n.length;if(ArrayBuffer.isView(n)||V(n,ArrayBuffer))return n.byteLength;if("string"!=typeof n)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof n);const e=n.length,l=arguments.length>2&&!0===arguments[2];if(!l&&0===e)return 0;let r=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return G(n).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return $(n).length;default:if(r)return l?-1:G(n).length;t=(""+t).toLowerCase(),r=!0}}function y(n,t,e){let l=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(t>>>=0))return"";for(n||(n="utf8");;)switch(n){case"hex":return P(this,t,e);case"utf8":case"utf-8":return S(this,t,e);case"ascii":return x(this,t,e);case"latin1":case"binary":return B(this,t,e);case"base64":return E(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,e);default:if(l)throw new TypeError("Unknown encoding: "+n);n=(n+"").toLowerCase(),l=!0}}function m(n,t,e){const l=n[t];n[t]=n[e],n[e]=l}function b(n,t,e,l,r){if(0===n.length)return-1;if("string"==typeof e?(l=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),X(e=+e)&&(e=r?0:n.length-1),e<0&&(e=n.length+e),e>=n.length){if(r)return-1;e=n.length-1}else if(e<0){if(!r)return-1;e=0}if("string"==typeof t&&(t=s.from(t,l)),s.isBuffer(t))return 0===t.length?-1:w(n,t,e,l,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(n,t,e):Uint8Array.prototype.lastIndexOf.call(n,t,e):w(n,[t],e,l,r);throw new TypeError("val must be string, number or Buffer")}function w(n,t,e,l,r){let u,i=1,o=n.length,s=t.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(n.length<2||t.length<2)return-1;i=2,o/=2,s/=2,e/=2}function a(n,t){return 1===i?n[t]:n.readUInt16BE(t*i)}if(r){let l=-1;for(u=e;u<o;u++)if(a(n,u)===a(t,-1===l?0:u-l)){if(-1===l&&(l=u),u-l+1===s)return l*i}else-1!==l&&(u-=u-l),l=-1}else for(e+s>o&&(e=o-s),u=e;u>=0;u--){let e=!0;for(let l=0;l<s;l++)if(a(n,u+l)!==a(t,l)){e=!1;break}if(e)return u}return-1}function v(n,t,e,l){e=Number(e)||0;const r=n.length-e;l?(l=Number(l))>r&&(l=r):l=r;const u=t.length;let i;for(l>u/2&&(l=u/2),i=0;i<l;++i){const l=parseInt(t.substr(2*i,2),16);if(X(l))return i;n[e+i]=l}return i}function k(n,t,e,l){return Z(G(t,n.length-e),n,e,l)}function I(n,t,e,l){return Z(function(n){const t=[];for(let e=0;e<n.length;++e)t.push(255&n.charCodeAt(e));return t}(t),n,e,l)}function A(n,t,e,l){return Z($(t),n,e,l)}function _(n,t,e,l){return Z(function(n,t){let e,l,r;const u=[];for(let i=0;i<n.length&&!((t-=2)<0);++i)e=n.charCodeAt(i),l=e>>8,r=e%256,u.push(r),u.push(l);return u}(t,n.length-e),n,e,l)}function E(n,t,e){return 0===t&&e===n.length?l.fromByteArray(n):l.fromByteArray(n.slice(t,e))}function S(n,t,e){e=Math.min(n.length,e);const l=[];let r=t;for(;r<e;){const t=n[r];let u=null,i=t>239?4:t>223?3:t>191?2:1;if(r+i<=e){let e,l,o,s;switch(i){case 1:t<128&&(u=t);break;case 2:e=n[r+1],128==(192&e)&&(s=(31&t)<<6|63&e,s>127&&(u=s));break;case 3:e=n[r+1],l=n[r+2],128==(192&e)&&128==(192&l)&&(s=(15&t)<<12|(63&e)<<6|63&l,s>2047&&(s<55296||s>57343)&&(u=s));break;case 4:e=n[r+1],l=n[r+2],o=n[r+3],128==(192&e)&&128==(192&l)&&128==(192&o)&&(s=(15&t)<<18|(63&e)<<12|(63&l)<<6|63&o,s>65535&&s<1114112&&(u=s))}}null===u?(u=65533,i=1):u>65535&&(u-=65536,l.push(u>>>10&1023|55296),u=56320|1023&u),l.push(u),r+=i}return function(n){const t=n.length;if(t<=T)return String.fromCharCode.apply(String,n);let e="",l=0;for(;l<t;)e+=String.fromCharCode.apply(String,n.slice(l,l+=T));return e}(l)}t.kMaxLength=i,s.TYPED_ARRAY_SUPPORT=function(){try{const n=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(n,t),42===n.foo()}catch(n){return!1}}(),s.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(s.prototype,"parent",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.buffer}}),Object.defineProperty(s.prototype,"offset",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.byteOffset}}),s.poolSize=8192,s.from=function(n,t,e){return a(n,t,e)},Object.setPrototypeOf(s.prototype,Uint8Array.prototype),Object.setPrototypeOf(s,Uint8Array),s.alloc=function(n,t,e){return function(n,t,e){return c(n),n<=0?o(n):void 0!==t?"string"==typeof e?o(n).fill(t,e):o(n).fill(t):o(n)}(n,t,e)},s.allocUnsafe=function(n){return h(n)},s.allocUnsafeSlow=function(n){return h(n)},s.isBuffer=function(n){return null!=n&&!0===n._isBuffer&&n!==s.prototype},s.compare=function(n,t){if(V(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),V(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(n)||!s.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(n===t)return 0;let e=n.length,l=t.length;for(let r=0,u=Math.min(e,l);r<u;++r)if(n[r]!==t[r]){e=n[r],l=t[r];break}return e<l?-1:l<e?1:0},s.isEncoding=function(n){switch(String(n).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(n,t){if(!Array.isArray(n))throw new TypeError('"list" argument must be an Array of Buffers');if(0===n.length)return s.alloc(0);let e;if(void 0===t)for(t=0,e=0;e<n.length;++e)t+=n[e].length;const l=s.allocUnsafe(t);let r=0;for(e=0;e<n.length;++e){let t=n[e];if(V(t,Uint8Array))r+t.length>l.length?(s.isBuffer(t)||(t=s.from(t)),t.copy(l,r)):Uint8Array.prototype.set.call(l,t,r);else{if(!s.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(l,r)}r+=t.length}return l},s.byteLength=g,s.prototype._isBuffer=!0,s.prototype.swap16=function(){const n=this.length;if(n%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<n;t+=2)m(this,t,t+1);return this},s.prototype.swap32=function(){const n=this.length;if(n%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<n;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},s.prototype.swap64=function(){const n=this.length;if(n%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<n;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},s.prototype.toString=function(){const n=this.length;return 0===n?"":0===arguments.length?S(this,0,n):y.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(n){if(!s.isBuffer(n))throw new TypeError("Argument must be a Buffer");return this===n||0===s.compare(this,n)},s.prototype.inspect=function(){let n="";const e=t.INSPECT_MAX_BYTES;return n=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(n+=" ... "),"<Buffer "+n+">"},u&&(s.prototype[u]=s.prototype.inspect),s.prototype.compare=function(n,t,e,l,r){if(V(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),!s.isBuffer(n))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof n);if(void 0===t&&(t=0),void 0===e&&(e=n?n.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),t<0||e>n.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&t>=e)return 0;if(l>=r)return-1;if(t>=e)return 1;if(this===n)return 0;let u=(r>>>=0)-(l>>>=0),i=(e>>>=0)-(t>>>=0);const o=Math.min(u,i),a=this.slice(l,r),c=n.slice(t,e);for(let s=0;s<o;++s)if(a[s]!==c[s]){u=a[s],i=c[s];break}return u<i?-1:i<u?1:0},s.prototype.includes=function(n,t,e){return-1!==this.indexOf(n,t,e)},s.prototype.indexOf=function(n,t,e){return b(this,n,t,e,!0)},s.prototype.lastIndexOf=function(n,t,e){return b(this,n,t,e,!1)},s.prototype.write=function(n,t,e,l){if(void 0===t)l="utf8",e=this.length,t=0;else if(void 0===e&&"string"==typeof t)l=t,e=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(e)?(e>>>=0,void 0===l&&(l="utf8")):(l=e,e=void 0)}const r=this.length-t;if((void 0===e||e>r)&&(e=r),n.length>0&&(e<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");let u=!1;for(;;)switch(l){case"hex":return v(this,n,t,e);case"utf8":case"utf-8":return k(this,n,t,e);case"ascii":case"latin1":case"binary":return I(this,n,t,e);case"base64":return A(this,n,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,n,t,e);default:if(u)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),u=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function x(n,t,e){let l="";e=Math.min(n.length,e);for(let r=t;r<e;++r)l+=String.fromCharCode(127&n[r]);return l}function B(n,t,e){let l="";e=Math.min(n.length,e);for(let r=t;r<e;++r)l+=String.fromCharCode(n[r]);return l}function P(n,t,e){const l=n.length;(!t||t<0)&&(t=0),(!e||e<0||e>l)&&(e=l);let r="";for(let u=t;u<e;++u)r+=Y[n[u]];return r}function R(n,t,e){const l=n.slice(t,e);let r="";for(let u=0;u<l.length-1;u+=2)r+=String.fromCharCode(l[u]+256*l[u+1]);return r}function O(n,t,e){if(n%1!=0||n<0)throw new RangeError("offset is not uint");if(n+t>e)throw new RangeError("Trying to access beyond buffer length")}function M(n,t,e,l,r,u){if(!s.isBuffer(n))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<u)throw new RangeError('"value" argument is out of bounds');if(e+l>n.length)throw new RangeError("Index out of range")}function C(n,t,e,l,r){j(t,l,r,n,e,7);let u=Number(t&BigInt(4294967295));n[e++]=u,u>>=8,n[e++]=u,u>>=8,n[e++]=u,u>>=8,n[e++]=u;let i=Number(t>>BigInt(32)&BigInt(4294967295));return n[e++]=i,i>>=8,n[e++]=i,i>>=8,n[e++]=i,i>>=8,n[e++]=i,e}function U(n,t,e,l,r){j(t,l,r,n,e,7);let u=Number(t&BigInt(4294967295));n[e+7]=u,u>>=8,n[e+6]=u,u>>=8,n[e+5]=u,u>>=8,n[e+4]=u;let i=Number(t>>BigInt(32)&BigInt(4294967295));return n[e+3]=i,i>>=8,n[e+2]=i,i>>=8,n[e+1]=i,i>>=8,n[e]=i,e+8}function L(n,t,e,l,r,u){if(e+l>n.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function N(n,t,e,l,u){return t=+t,e>>>=0,u||L(n,0,e,4),r.write(n,t,e,l,23,4),e+4}function z(n,t,e,l,u){return t=+t,e>>>=0,u||L(n,0,e,8),r.write(n,t,e,l,52,8),e+8}s.prototype.slice=function(n,t){const e=this.length;(n=~~n)<0?(n+=e)<0&&(n=0):n>e&&(n=e),(t=void 0===t?e:~~t)<0?(t+=e)<0&&(t=0):t>e&&(t=e),t<n&&(t=n);const l=this.subarray(n,t);return Object.setPrototypeOf(l,s.prototype),l},s.prototype.readUintLE=s.prototype.readUIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n],r=1,u=0;for(;++u<t&&(r*=256);)l+=this[n+u]*r;return l},s.prototype.readUintBE=s.prototype.readUIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n+--t],r=1;for(;t>0&&(r*=256);)l+=this[n+--t]*r;return l},s.prototype.readUint8=s.prototype.readUInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),this[n]},s.prototype.readUint16LE=s.prototype.readUInt16LE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]|this[n+1]<<8},s.prototype.readUint16BE=s.prototype.readUInt16BE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]<<8|this[n+1]},s.prototype.readUint32LE=s.prototype.readUInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),(this[n]|this[n+1]<<8|this[n+2]<<16)+16777216*this[n+3]},s.prototype.readUint32BE=s.prototype.readUInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),16777216*this[n]+(this[n+1]<<16|this[n+2]<<8|this[n+3])},s.prototype.readBigUInt64LE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=t+256*this[++n]+65536*this[++n]+this[++n]*2**24,r=this[++n]+256*this[++n]+65536*this[++n]+e*2**24;return BigInt(l)+(BigInt(r)<<BigInt(32))})),s.prototype.readBigUInt64BE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=t*2**24+65536*this[++n]+256*this[++n]+this[++n],r=this[++n]*2**24+65536*this[++n]+256*this[++n]+e;return(BigInt(l)<<BigInt(32))+BigInt(r)})),s.prototype.readIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n],r=1,u=0;for(;++u<t&&(r*=256);)l+=this[n+u]*r;return r*=128,l>=r&&(l-=Math.pow(2,8*t)),l},s.prototype.readIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=t,r=1,u=this[n+--l];for(;l>0&&(r*=256);)u+=this[n+--l]*r;return r*=128,u>=r&&(u-=Math.pow(2,8*t)),u},s.prototype.readInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),128&this[n]?-1*(255-this[n]+1):this[n]},s.prototype.readInt16LE=function(n,t){n>>>=0,t||O(n,2,this.length);const e=this[n]|this[n+1]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt16BE=function(n,t){n>>>=0,t||O(n,2,this.length);const e=this[n+1]|this[n]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]|this[n+1]<<8|this[n+2]<<16|this[n+3]<<24},s.prototype.readInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]<<24|this[n+1]<<16|this[n+2]<<8|this[n+3]},s.prototype.readBigInt64LE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=this[n+4]+256*this[n+5]+65536*this[n+6]+(e<<24);return(BigInt(l)<<BigInt(32))+BigInt(t+256*this[++n]+65536*this[++n]+this[++n]*2**24)})),s.prototype.readBigInt64BE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=(t<<24)+65536*this[++n]+256*this[++n]+this[++n];return(BigInt(l)<<BigInt(32))+BigInt(this[++n]*2**24+65536*this[++n]+256*this[++n]+e)})),s.prototype.readFloatLE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!0,23,4)},s.prototype.readFloatBE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!1,23,4)},s.prototype.readDoubleLE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!0,52,8)},s.prototype.readDoubleBE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!1,52,8)},s.prototype.writeUintLE=s.prototype.writeUIntLE=function(n,t,e,l){if(n=+n,t>>>=0,e>>>=0,!l){M(this,n,t,e,Math.pow(2,8*e)-1,0)}let r=1,u=0;for(this[t]=255&n;++u<e&&(r*=256);)this[t+u]=n/r&255;return t+e},s.prototype.writeUintBE=s.prototype.writeUIntBE=function(n,t,e,l){if(n=+n,t>>>=0,e>>>=0,!l){M(this,n,t,e,Math.pow(2,8*e)-1,0)}let r=e-1,u=1;for(this[t+r]=255&n;--r>=0&&(u*=256);)this[t+r]=n/u&255;return t+e},s.prototype.writeUint8=s.prototype.writeUInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,255,0),this[t]=255&n,t+1},s.prototype.writeUint16LE=s.prototype.writeUInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeUint16BE=s.prototype.writeUInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeUint32LE=s.prototype.writeUInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t+3]=n>>>24,this[t+2]=n>>>16,this[t+1]=n>>>8,this[t]=255&n,t+4},s.prototype.writeUint32BE=s.prototype.writeUInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeBigUInt64LE=J((function(n,t=0){return C(this,n,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeBigUInt64BE=J((function(n,t=0){return U(this,n,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeIntLE=function(n,t,e,l){if(n=+n,t>>>=0,!l){const l=Math.pow(2,8*e-1);M(this,n,t,e,l-1,-l)}let r=0,u=1,i=0;for(this[t]=255&n;++r<e&&(u*=256);)n<0&&0===i&&0!==this[t+r-1]&&(i=1),this[t+r]=(n/u>>0)-i&255;return t+e},s.prototype.writeIntBE=function(n,t,e,l){if(n=+n,t>>>=0,!l){const l=Math.pow(2,8*e-1);M(this,n,t,e,l-1,-l)}let r=e-1,u=1,i=0;for(this[t+r]=255&n;--r>=0&&(u*=256);)n<0&&0===i&&0!==this[t+r+1]&&(i=1),this[t+r]=(n/u>>0)-i&255;return t+e},s.prototype.writeInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,127,-128),n<0&&(n=255+n+1),this[t]=255&n,t+1},s.prototype.writeInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),this[t]=255&n,this[t+1]=n>>>8,this[t+2]=n>>>16,this[t+3]=n>>>24,t+4},s.prototype.writeInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),n<0&&(n=4294967295+n+1),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeBigInt64LE=J((function(n,t=0){return C(this,n,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeBigInt64BE=J((function(n,t=0){return U(this,n,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeFloatLE=function(n,t,e){return N(this,n,t,!0,e)},s.prototype.writeFloatBE=function(n,t,e){return N(this,n,t,!1,e)},s.prototype.writeDoubleLE=function(n,t,e){return z(this,n,t,!0,e)},s.prototype.writeDoubleBE=function(n,t,e){return z(this,n,t,!1,e)},s.prototype.copy=function(n,t,e,l){if(!s.isBuffer(n))throw new TypeError("argument should be a Buffer");if(e||(e=0),l||0===l||(l=this.length),t>=n.length&&(t=n.length),t||(t=0),l>0&&l<e&&(l=e),l===e)return 0;if(0===n.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),n.length-t<l-e&&(l=n.length-t+e);const r=l-e;return this===n&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,e,l):Uint8Array.prototype.set.call(n,this.subarray(e,l),t),r},s.prototype.fill=function(n,t,e,l){if("string"==typeof n){if("string"==typeof t?(l=t,t=0,e=this.length):"string"==typeof e&&(l=e,e=this.length),void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!s.isEncoding(l))throw new TypeError("Unknown encoding: "+l);if(1===n.length){const t=n.charCodeAt(0);("utf8"===l&&t<128||"latin1"===l)&&(n=t)}}else"number"==typeof n?n&=255:"boolean"==typeof n&&(n=Number(n));if(t<0||this.length<t||this.length<e)throw new RangeError("Out of range index");if(e<=t)return this;let r;if(t>>>=0,e=void 0===e?this.length:e>>>0,n||(n=0),"number"==typeof n)for(r=t;r<e;++r)this[r]=n;else{const u=s.isBuffer(n)?n:s.from(n,l),i=u.length;if(0===i)throw new TypeError('The value "'+n+'" is invalid for argument "value"');for(r=0;r<e-t;++r)this[r+t]=u[r%i]}return this};const K={};function D(n,t,e){K[n]=class extends e{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${n}]`,this.stack,delete this.name}get code(){return n}set code(n){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:n,writable:!0})}toString(){return`${this.name} [${n}]: ${this.message}`}}}function W(n){let t="",e=n.length;const l="-"===n[0]?1:0;for(;e>=l+4;e-=3)t=`_${n.slice(e-3,e)}${t}`;return`${n.slice(0,e)}${t}`}function j(n,t,e,l,r,u){if(n>e||n<t){const l="bigint"==typeof t?"n":"";let r;throw r=u>3?0===t||t===BigInt(0)?`>= 0${l} and < 2${l} ** ${8*(u+1)}${l}`:`>= -(2${l} ** ${8*(u+1)-1}${l}) and < 2 ** ${8*(u+1)-1}${l}`:`>= ${t}${l} and <= ${e}${l}`,new K.ERR_OUT_OF_RANGE("value",r,n)}!function(n,t,e){F(t,"offset"),void 0!==n[t]&&void 0!==n[t+e]||q(t,n.length-(e+1))}(l,r,u)}function F(n,t){if("number"!=typeof n)throw new K.ERR_INVALID_ARG_TYPE(t,"number",n)}function q(n,t,e){if(Math.floor(n)!==n)throw F(n,e),new K.ERR_OUT_OF_RANGE(e||"offset","an integer",n);if(t<0)throw new K.ERR_BUFFER_OUT_OF_BOUNDS;throw new K.ERR_OUT_OF_RANGE(e||"offset",`>= ${e?1:0} and <= ${t}`,n)}D("ERR_BUFFER_OUT_OF_BOUNDS",(function(n){return n?`${n} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),D("ERR_INVALID_ARG_TYPE",(function(n,t){return`The "${n}" argument must be of type number. Received type ${typeof t}`}),TypeError),D("ERR_OUT_OF_RANGE",(function(n,t,e){let l=`The value of "${n}" is out of range.`,r=e;return Number.isInteger(e)&&Math.abs(e)>2**32?r=W(String(e)):"bigint"==typeof e&&(r=String(e),(e>BigInt(2)**BigInt(32)||e<-(BigInt(2)**BigInt(32)))&&(r=W(r)),r+="n"),l+=` It must be ${t}. Received ${r}`,l}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function G(n,t){let e;t=t||1/0;const l=n.length;let r=null;const u=[];for(let i=0;i<l;++i){if(e=n.charCodeAt(i),e>55295&&e<57344){if(!r){if(e>56319){(t-=3)>-1&&u.push(239,191,189);continue}if(i+1===l){(t-=3)>-1&&u.push(239,191,189);continue}r=e;continue}if(e<56320){(t-=3)>-1&&u.push(239,191,189),r=e;continue}e=65536+(r-55296<<10|e-56320)}else r&&(t-=3)>-1&&u.push(239,191,189);if(r=null,e<128){if((t-=1)<0)break;u.push(e)}else if(e<2048){if((t-=2)<0)break;u.push(e>>6|192,63&e|128)}else if(e<65536){if((t-=3)<0)break;u.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;u.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return u}function $(n){return l.toByteArray(function(n){if((n=(n=n.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;n.length%4!=0;)n+="=";return n}(n))}function Z(n,t,e,l){let r;for(r=0;r<l&&!(r+e>=t.length||r>=n.length);++r)t[r+e]=n[r];return r}function V(n,t){return n instanceof t||null!=n&&null!=n.constructor&&null!=n.constructor.name&&n.constructor.name===t.name}function X(n){return n!=n}const Y=function(){const n="0123456789abcdef",t=new Array(256);for(let e=0;e<16;++e){const l=16*e;for(let r=0;r<16;++r)t[l+r]=n[e]+n[r]}return t}();function J(n){return"undefined"==typeof BigInt?Q:n}function Q(){throw new Error("BigInt not supported")}},27158:(n,t,e)=>{"use strict";e.r(t),e.d(t,{Account:()=>U,AddressLookupTableAccount:()=>Fn,AddressLookupTableInstruction:()=>xe,AddressLookupTableProgram:()=>Be,Authorized:()=>Ke,BLOCKHASH_CACHE_TIMEOUT_MS:()=>Xn,BPF_LOADER_DEPRECATED_PROGRAM_ID:()=>L,BPF_LOADER_PROGRAM_ID:()=>Rn,BpfLoader:()=>On,COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:()=>Re,ComputeBudgetInstruction:()=>Pe,ComputeBudgetProgram:()=>Oe,Connection:()=>Ee,Ed25519Program:()=>Ce,Enum:()=>B,EpochSchedule:()=>zn,FeeCalculatorLayout:()=>vn,Keypair:()=>Se,LAMPORTS_PER_SOL:()=>sl,LOOKUP_TABLE_INSTRUCTION_LAYOUTS:()=>Te,Loader:()=>Pn,Lockup:()=>De,MAX_SEED_LENGTH:()=>R,Message:()=>Y,MessageAccountKeys:()=>j,MessageV0:()=>J,NONCE_ACCOUNT_LENGTH:()=>In,NonceAccount:()=>An,PACKET_DATA_SIZE:()=>N,PUBLIC_KEY_LENGTH:()=>O,PublicKey:()=>C,SIGNATURE_LENGTH_IN_BYTES:()=>K,SOLANA_SCHEMA:()=>P,STAKE_CONFIG_ID:()=>ze,STAKE_INSTRUCTION_LAYOUTS:()=>je,SYSTEM_INSTRUCTION_LAYOUTS:()=>Tn,SYSVAR_CLOCK_PUBKEY:()=>on,SYSVAR_EPOCH_SCHEDULE_PUBKEY:()=>sn,SYSVAR_INSTRUCTIONS_PUBKEY:()=>an,SYSVAR_RECENT_BLOCKHASHES_PUBKEY:()=>cn,SYSVAR_RENT_PUBKEY:()=>hn,SYSVAR_REWARDS_PUBKEY:()=>dn,SYSVAR_SLOT_HASHES_PUBKEY:()=>fn,SYSVAR_SLOT_HISTORY_PUBKEY:()=>pn,SYSVAR_STAKE_HISTORY_PUBKEY:()=>gn,Secp256k1Program:()=>Ne,SendTransactionError:()=>Kn,SolanaJSONRPCError:()=>Wn,SolanaJSONRPCErrorCode:()=>Dn,StakeAuthorizationLayout:()=>Fe,StakeInstruction:()=>We,StakeProgram:()=>qe,Struct:()=>x,SystemInstruction:()=>Sn,SystemProgram:()=>xn,Transaction:()=>ln,TransactionExpiredBlockheightExceededError:()=>D,TransactionExpiredTimeoutError:()=>W,TransactionInstruction:()=>en,TransactionMessage:()=>rn,TransactionStatus:()=>nn,VALIDATOR_INFO_KEY:()=>Xe,VERSION_PREFIX_MASK:()=>z,VOTE_PROGRAM_ID:()=>Qe,ValidatorInfo:()=>Je,VersionedMessage:()=>Q,VersionedTransaction:()=>un,VoteAccount:()=>tl,VoteAuthorizationLayout:()=>Ze,VoteInit:()=>He,VoteInstruction:()=>Ge,VoteProgram:()=>Ve,clusterApiUrl:()=>il,sendAndConfirmRawTransaction:()=>ol,sendAndConfirmTransaction:()=>yn});var l=e(94796),r=e(8448),u=e(21686),i=e(62197),o=e.n(i),s=e(17022),a=e.n(s),c=e(53929),h=e(83871),d=e(96346),f=e(41528),p=e(50974),g=e(50714),y=e(87414),m=e.n(y),b=e(48796),w=e(10846),v=e(89580);u.P6.sha512Sync=(...n)=>(0,r.o)(u.P6.concatBytes(...n));const k=u.P6.randomPrivateKey,I=()=>{const n=u.P6.randomPrivateKey(),t=A(n),e=new Uint8Array(64);return e.set(n),e.set(t,32),{publicKey:t,secretKey:e}},A=u.Z_.getPublicKey;function _(n){try{return u.E9.fromHex(n,!0),!0}catch{return!1}}const E=(n,t)=>u.Z_.sign(n,t.slice(0,32)),S=u.Z_.verify,T=n=>l.lW.isBuffer(n)?n:n instanceof Uint8Array?l.lW.from(n.buffer,n.byteOffset,n.byteLength):l.lW.from(n);class x{constructor(n){Object.assign(this,n)}encode(){return l.lW.from((0,h.serialize)(P,this))}static decode(n){return(0,h.deserialize)(P,this,n)}static decodeUnchecked(n){return(0,h.deserializeUnchecked)(P,this,n)}}class B extends x{constructor(n){if(super(n),this.enum="",1!==Object.keys(n).length)throw new Error("Enum can only take single value");Object.keys(n).map((n=>{this.enum=n}))}}const P=new Map,R=32,O=32;let M=1;class C extends x{constructor(n){if(super({}),this._bn=void 0,function(n){return void 0!==n._bn}(n))this._bn=n._bn;else{if("string"==typeof n){const t=a().decode(n);if(t.length!=O)throw new Error("Invalid public key input");this._bn=new(o())(t)}else this._bn=new(o())(n);if(this._bn.byteLength()>32)throw new Error("Invalid public key input")}}static unique(){const n=new C(M);return M+=1,new C(n.toBuffer())}equals(n){return this._bn.eq(n._bn)}toBase58(){return a().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){return this.toBuffer()}toBuffer(){const n=this._bn.toArrayLike(l.lW);if(n.length===O)return n;const t=l.lW.alloc(32);return n.copy(t,32-n.length),t}toString(){return this.toBase58()}static async createWithSeed(n,t,e){const r=l.lW.concat([n.toBuffer(),l.lW.from(t),e.toBuffer()]),u=(0,c.J)(r);return new C(u)}static createProgramAddressSync(n,t){let e=l.lW.alloc(0);n.forEach((function(n){if(n.length>R)throw new TypeError("Max seed length exceeded");e=l.lW.concat([e,T(n)])})),e=l.lW.concat([e,t.toBuffer(),l.lW.from("ProgramDerivedAddress")]);const r=(0,c.J)(e);if(_(r))throw new Error("Invalid seeds, address must fall off the curve");return new C(r)}static async createProgramAddress(n,t){return this.createProgramAddressSync(n,t)}static findProgramAddressSync(n,t){let e,r=255;for(;0!=r;){try{const u=n.concat(l.lW.from([r]));e=this.createProgramAddressSync(u,t)}catch(u){if(u instanceof TypeError)throw u;r--;continue}return[e,r]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(n,t){return this.findProgramAddressSync(n,t)}static isOnCurve(n){return _(new C(n).toBytes())}}C.default=new C("11111111111111111111111111111111"),P.set(C,{kind:"struct",fields:[["_bn","u256"]]});class U{constructor(n){if(this._publicKey=void 0,this._secretKey=void 0,n){const t=T(n);if(64!==n.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=T(k()),this._publicKey=T(A(this._secretKey))}get publicKey(){return new C(this._publicKey)}get secretKey(){return l.lW.concat([this._secretKey,this._publicKey],64)}}const L=new C("BPFLoader1111111111111111111111111111111111"),N=1232,z=127,K=64;class D extends Error{constructor(n){super(`Signature ${n} has expired: block height exceeded.`),this.signature=void 0,this.signature=n}}Object.defineProperty(D.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class W extends Error{constructor(n,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${n} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=n}}Object.defineProperty(W.prototype,"name",{value:"TransactionExpiredTimeoutError"});class j{constructor(n,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=n,this.accountKeysFromLookups=t}keySegments(){const n=[this.staticAccountKeys];return this.accountKeysFromLookups&&(n.push(this.accountKeysFromLookups.writable),n.push(this.accountKeysFromLookups.readonly)),n}get(n){for(const t of this.keySegments()){if(n<t.length)return t[n];n-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(n){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((n,e)=>{t.set(n.toBase58(),e)}));const e=n=>{const e=t.get(n.toBase58());if(void 0===e)throw new Error("Encountered an unknown instruction account key during compilation");return e};return n.map((n=>({programIdIndex:e(n.programId),accountKeyIndexes:n.keys.map((n=>e(n.pubkey))),data:n.data})))}}const F=(n="publicKey")=>d.blob(32,n),q=(n="signature")=>d.blob(64,n),H=(n="string")=>{const t=d.struct([d.u32("length"),d.u32("lengthPadding"),d.blob(d.offset(d.u32(),-8),"chars")],n),e=t.decode.bind(t),r=t.encode.bind(t),u=t;return u.decode=(n,t)=>e(n,t).chars.toString(),u.encode=(n,t,e)=>{const u={chars:l.lW.from(n,"utf8")};return r(u,t,e)},u.alloc=n=>d.u32().span+d.u32().span+l.lW.from(n,"utf8").length,u};function G(n,t){const e=n=>{if(n.span>=0)return n.span;if("function"==typeof n.alloc)return n.alloc(t[n.property]);if("count"in n&&"elementLayout"in n){const l=t[n.property];if(Array.isArray(l))return l.length*e(n.elementLayout)}else if("fields"in n)return G({layout:n},t[n.property]);return 0};let l=0;return n.layout.fields.forEach((n=>{l+=e(n)})),l}function $(n){let t=0,e=0;for(;;){let l=n.shift();if(t|=(127&l)<<7*e,e+=1,0==(128&l))break}return t}function Z(n,t){let e=t;for(;;){let t=127&e;if(e>>=7,0==e){n.push(t);break}t|=128,n.push(t)}}function V(n,t){if(!n)throw new Error(t||"Assertion failed")}class X{constructor(n,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=n,this.keyMetaMap=t}static compile(n,t){const e=new Map,l=n=>{const t=n.toBase58();let l=e.get(t);return void 0===l&&(l={isSigner:!1,isWritable:!1,isInvoked:!1},e.set(t,l)),l},r=l(t);r.isSigner=!0,r.isWritable=!0;for(const u of n){l(u.programId).isInvoked=!0;for(const n of u.keys){const t=l(n.pubkey);t.isSigner||(t.isSigner=n.isSigner),t.isWritable||(t.isWritable=n.isWritable)}}return new X(t,e)}getMessageComponents(){const n=[...this.keyMetaMap.entries()];V(n.length<=256,"Max static account keys length exceeded");const t=n.filter((([,n])=>n.isSigner&&n.isWritable)),e=n.filter((([,n])=>n.isSigner&&!n.isWritable)),l=n.filter((([,n])=>!n.isSigner&&n.isWritable)),r=n.filter((([,n])=>!n.isSigner&&!n.isWritable)),u={numRequiredSignatures:t.length+e.length,numReadonlySignedAccounts:e.length,numReadonlyUnsignedAccounts:r.length};{V(t.length>0,"Expected at least one writable signer key");const[n]=t[0];V(n===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[u,[...t.map((([n])=>new C(n))),...e.map((([n])=>new C(n))),...l.map((([n])=>new C(n))),...r.map((([n])=>new C(n)))]]}extractTableLookup(n){const[t,e]=this.drainKeysFoundInLookupTable(n.state.addresses,(n=>!n.isSigner&&!n.isInvoked&&n.isWritable)),[l,r]=this.drainKeysFoundInLookupTable(n.state.addresses,(n=>!n.isSigner&&!n.isInvoked&&!n.isWritable));if(0!==t.length||0!==l.length)return[{accountKey:n.key,writableIndexes:t,readonlyIndexes:l},{writable:e,readonly:r}]}drainKeysFoundInLookupTable(n,t){const e=new Array,l=new Array;for(const[r,u]of this.keyMetaMap.entries())if(t(u)){const t=new C(r),u=n.findIndex((n=>n.equals(t)));u>=0&&(V(u<256,"Max lookup table index exceeded"),e.push(u),l.push(t),this.keyMetaMap.delete(r))}return[e,l]}}class Y{constructor(n){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=n.header,this.accountKeys=n.accountKeys.map((n=>new C(n))),this.recentBlockhash=n.recentBlockhash,this.instructions=n.instructions,this.instructions.forEach((n=>this.indexToProgramIds.set(n.programIdIndex,this.accountKeys[n.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((n=>({programIdIndex:n.programIdIndex,accountKeyIndexes:n.accounts,data:a().decode(n.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new j(this.staticAccountKeys)}static compile(n){const t=X.compile(n.instructions,n.payerKey),[e,l]=t.getMessageComponents(),r=new j(l).compileInstructions(n.instructions).map((n=>({programIdIndex:n.programIdIndex,accounts:n.accountKeyIndexes,data:a().encode(n.data)})));return new Y({header:e,accountKeys:l,recentBlockhash:n.recentBlockhash,instructions:r})}isAccountSigner(n){return n<this.header.numRequiredSignatures}isAccountWritable(n){return n<this.header.numRequiredSignatures-this.header.numReadonlySignedAccounts||n>=this.header.numRequiredSignatures&&n<this.accountKeys.length-this.header.numReadonlyUnsignedAccounts}isProgramId(n){return this.indexToProgramIds.has(n)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((n,t)=>!this.isProgramId(t)))}serialize(){const n=this.accountKeys.length;let t=[];Z(t,n);const e=this.instructions.map((n=>{const{accounts:t,programIdIndex:e}=n,r=Array.from(a().decode(n.data));let u=[];Z(u,t.length);let i=[];return Z(i,r.length),{programIdIndex:e,keyIndicesCount:l.lW.from(u),keyIndices:t,dataLength:l.lW.from(i),data:r}}));let r=[];Z(r,e.length);let u=l.lW.alloc(N);l.lW.from(r).copy(u);let i=r.length;e.forEach((n=>{const t=d.struct([d.u8("programIdIndex"),d.blob(n.keyIndicesCount.length,"keyIndicesCount"),d.seq(d.u8("keyIndex"),n.keyIndices.length,"keyIndices"),d.blob(n.dataLength.length,"dataLength"),d.seq(d.u8("userdatum"),n.data.length,"data")]).encode(n,u,i);i+=t})),u=u.slice(0,i);const o=d.struct([d.blob(1,"numRequiredSignatures"),d.blob(1,"numReadonlySignedAccounts"),d.blob(1,"numReadonlyUnsignedAccounts"),d.blob(t.length,"keyCount"),d.seq(F("key"),n,"keys"),F("recentBlockhash")]),s={numRequiredSignatures:l.lW.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:l.lW.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:l.lW.from([this.header.numReadonlyUnsignedAccounts]),keyCount:l.lW.from(t),keys:this.accountKeys.map((n=>T(n.toBytes()))),recentBlockhash:a().decode(this.recentBlockhash)};let c=l.lW.alloc(2048);const h=o.encode(s,c);return u.copy(c,h),c.slice(0,h+u.length)}static from(n){let t=[...n];const e=t.shift();if(e!==(e&z))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const r=t.shift(),u=t.shift(),i=$(t);let o=[];for(let a=0;a<i;a++){const n=t.slice(0,O);t=t.slice(O),o.push(new C(l.lW.from(n)))}const s=t.slice(0,O);t=t.slice(O);const c=$(t);let h=[];for(let f=0;f<c;f++){const n=t.shift(),e=$(t),r=t.slice(0,e);t=t.slice(e);const u=$(t),i=t.slice(0,u),o=a().encode(l.lW.from(i));t=t.slice(u),h.push({programIdIndex:n,accounts:r,data:o})}const d={header:{numRequiredSignatures:e,numReadonlySignedAccounts:r,numReadonlyUnsignedAccounts:u},recentBlockhash:a().encode(l.lW.from(s)),accountKeys:o,instructions:h};return new Y(d)}}class J{constructor(n){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=n.header,this.staticAccountKeys=n.staticAccountKeys,this.recentBlockhash=n.recentBlockhash,this.compiledInstructions=n.compiledInstructions,this.addressTableLookups=n.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let n=0;for(const t of this.addressTableLookups)n+=t.readonlyIndexes.length+t.writableIndexes.length;return n}getAccountKeys(n){let t;if(n&&"accountKeysFromLookups"in n){if(this.numAccountKeysFromLookups!=n.accountKeysFromLookups.writable.length+n.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=n.accountKeysFromLookups}else if(n&&"addressLookupTableAccounts"in n)t=this.resolveAddressTableLookups(n.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new j(this.staticAccountKeys,t)}resolveAddressTableLookups(n){const t={writable:[],readonly:[]};for(const e of this.addressTableLookups){const l=n.find((n=>n.key.equals(e.accountKey)));if(!l)throw new Error(`Failed to find address lookup table account for table key ${e.accountKey.toBase58()}`);for(const n of e.writableIndexes){if(!(n<l.state.addresses.length))throw new Error(`Failed to find address for index ${n} in address lookup table ${e.accountKey.toBase58()}`);t.writable.push(l.state.addresses[n])}for(const n of e.readonlyIndexes){if(!(n<l.state.addresses.length))throw new Error(`Failed to find address for index ${n} in address lookup table ${e.accountKey.toBase58()}`);t.readonly.push(l.state.addresses[n])}}return t}static compile(n){const t=X.compile(n.instructions,n.payerKey),e=new Array,l={writable:new Array,readonly:new Array},r=n.addressLookupTableAccounts||[];for(const s of r){const n=t.extractTableLookup(s);if(void 0!==n){const[t,{writable:r,readonly:u}]=n;e.push(t),l.writable.push(...r),l.readonly.push(...u)}}const[u,i]=t.getMessageComponents(),o=new j(i,l).compileInstructions(n.instructions);return new J({header:u,staticAccountKeys:i,recentBlockhash:n.recentBlockhash,compiledInstructions:o,addressTableLookups:e})}serialize(){const n=Array();Z(n,this.staticAccountKeys.length);const t=this.serializeInstructions(),e=Array();Z(e,this.compiledInstructions.length);const l=this.serializeAddressTableLookups(),r=Array();Z(r,this.addressTableLookups.length);const u=d.struct([d.u8("prefix"),d.struct([d.u8("numRequiredSignatures"),d.u8("numReadonlySignedAccounts"),d.u8("numReadonlyUnsignedAccounts")],"header"),d.blob(n.length,"staticAccountKeysLength"),d.seq(F(),this.staticAccountKeys.length,"staticAccountKeys"),F("recentBlockhash"),d.blob(e.length,"instructionsLength"),d.blob(t.length,"serializedInstructions"),d.blob(r.length,"addressTableLookupsLength"),d.blob(l.length,"serializedAddressTableLookups")]),i=new Uint8Array(N),o=u.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(n),staticAccountKeys:this.staticAccountKeys.map((n=>n.toBytes())),recentBlockhash:a().decode(this.recentBlockhash),instructionsLength:new Uint8Array(e),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(r),serializedAddressTableLookups:l},i);return i.slice(0,o)}serializeInstructions(){let n=0;const t=new Uint8Array(N);for(const e of this.compiledInstructions){const l=Array();Z(l,e.accountKeyIndexes.length);const r=Array();Z(r,e.data.length);n+=d.struct([d.u8("programIdIndex"),d.blob(l.length,"encodedAccountKeyIndexesLength"),d.seq(d.u8(),e.accountKeyIndexes.length,"accountKeyIndexes"),d.blob(r.length,"encodedDataLength"),d.blob(e.data.length,"data")]).encode({programIdIndex:e.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(l),accountKeyIndexes:e.accountKeyIndexes,encodedDataLength:new Uint8Array(r),data:e.data},t,n)}return t.slice(0,n)}serializeAddressTableLookups(){let n=0;const t=new Uint8Array(N);for(const e of this.addressTableLookups){const l=Array();Z(l,e.writableIndexes.length);const r=Array();Z(r,e.readonlyIndexes.length);n+=d.struct([F("accountKey"),d.blob(l.length,"encodedWritableIndexesLength"),d.seq(d.u8(),e.writableIndexes.length,"writableIndexes"),d.blob(r.length,"encodedReadonlyIndexesLength"),d.seq(d.u8(),e.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:e.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(l),writableIndexes:e.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(r),readonlyIndexes:e.readonlyIndexes},t,n)}return t.slice(0,n)}static deserialize(n){let t=[...n];const e=t.shift(),l=e&z;V(e!==l,"Expected versioned message but received legacy message");V(0===l,`Expected versioned message with version 0 but found version ${l}`);const r={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},u=[],i=$(t);for(let a=0;a<i;a++)u.push(new C(t.splice(0,O)));const o=a().encode(t.splice(0,O)),s=$(t),c=[];for(let a=0;a<s;a++){const n=t.shift(),e=$(t),l=t.splice(0,e),r=$(t),u=new Uint8Array(t.splice(0,r));c.push({programIdIndex:n,accountKeyIndexes:l,data:u})}const h=$(t),d=[];for(let a=0;a<h;a++){const n=new C(t.splice(0,O)),e=$(t),l=t.splice(0,e),r=$(t),u=t.splice(0,r);d.push({accountKey:n,writableIndexes:l,readonlyIndexes:u})}return new J({header:r,staticAccountKeys:u,recentBlockhash:o,compiledInstructions:c,addressTableLookups:d})}}const Q={deserializeMessageVersion(n){const t=n[0],e=t&z;return e===t?"legacy":e},deserialize:n=>{const t=Q.deserializeMessageVersion(n);if("legacy"===t)return Y.from(n);if(0===t)return J.deserialize(n);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let nn;!function(n){n[n.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",n[n.PROCESSED=1]="PROCESSED",n[n.TIMED_OUT=2]="TIMED_OUT"}(nn||(nn={}));const tn=l.lW.alloc(K).fill(0);class en{constructor(n){this.keys=void 0,this.programId=void 0,this.data=l.lW.alloc(0),this.programId=n.programId,this.keys=n.keys,n.data&&(this.data=n.data)}toJSON(){return{keys:this.keys.map((({pubkey:n,isSigner:t,isWritable:e})=>({pubkey:n.toJSON(),isSigner:t,isWritable:e}))),programId:this.programId.toJSON(),data:[...this.data]}}}class ln{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(n){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this._message=void 0,this._json=void 0,n)if(n.feePayer&&(this.feePayer=n.feePayer),n.signatures&&(this.signatures=n.signatures),Object.prototype.hasOwnProperty.call(n,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:e}=n;this.recentBlockhash=t,this.lastValidBlockHeight=e}else{const{recentBlockhash:t,nonceInfo:e}=n;e&&(this.nonceInfo=e),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((n=>n.toJSON())),signers:this.signatures.map((({publicKey:n})=>n.toJSON()))}}add(...n){if(0===n.length)throw new Error("No instructions");return n.forEach((n=>{"instructions"in n?this.instructions=this.instructions.concat(n.instructions):"data"in n&&"programId"in n&&"keys"in n?this.instructions.push(n):this.instructions.push(new en(n))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let n,t,e;if(this.nonceInfo?(n=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(n=this.recentBlockhash,t=this.instructions),!n)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)e=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");e=this.signatures[0].publicKey}for(let a=0;a<t.length;a++)if(void 0===t[a].programId)throw new Error(`Transaction instruction index ${a} has undefined program id`);const l=[],r=[];t.forEach((n=>{n.keys.forEach((n=>{r.push({...n})}));const t=n.programId.toString();l.includes(t)||l.push(t)})),l.forEach((n=>{r.push({pubkey:new C(n),isSigner:!1,isWritable:!1})}));const u=[];r.forEach((n=>{const t=n.pubkey.toString(),e=u.findIndex((n=>n.pubkey.toString()===t));e>-1?(u[e].isWritable=u[e].isWritable||n.isWritable,u[e].isSigner=u[e].isSigner||n.isSigner):u.push(n)})),u.sort((function(n,t){return n.isSigner!==t.isSigner?n.isSigner?-1:1:n.isWritable!==t.isWritable?n.isWritable?-1:1:n.pubkey.toBase58().localeCompare(t.pubkey.toBase58())}));const i=u.findIndex((n=>n.pubkey.equals(e)));if(i>-1){const[n]=u.splice(i,1);n.isSigner=!0,n.isWritable=!0,u.unshift(n)}else u.unshift({pubkey:e,isSigner:!0,isWritable:!0});for(const a of this.signatures){const n=u.findIndex((n=>n.pubkey.equals(a.publicKey)));if(!(n>-1))throw new Error(`unknown signer: ${a.publicKey.toString()}`);u[n].isSigner||(u[n].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let o=0,s=0,c=0;const h=[],d=[];u.forEach((({pubkey:n,isSigner:t,isWritable:e})=>{t?(h.push(n.toString()),o+=1,e||(s+=1)):(d.push(n.toString()),e||(c+=1))}));const f=h.concat(d),p=t.map((n=>{const{data:t,programId:e}=n;return{programIdIndex:f.indexOf(e.toString()),accounts:n.keys.map((n=>f.indexOf(n.pubkey.toString()))),data:a().encode(t)}}));return p.forEach((n=>{V(n.programIdIndex>=0),n.accounts.forEach((n=>V(n>=0)))})),new Y({header:{numRequiredSignatures:o,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:c},accountKeys:f,recentBlockhash:n,instructions:p})}_compile(){const n=this.compileMessage(),t=n.accountKeys.slice(0,n.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every(((n,e)=>t[e].equals(n.publicKey))))return n}return this.signatures=t.map((n=>({signature:null,publicKey:n}))),n}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(n){return(await n.getFeeForMessage(this.compileMessage())).value}setSigners(...n){if(0===n.length)throw new Error("No signers");const t=new Set;this.signatures=n.filter((n=>{const e=n.toString();return!t.has(e)&&(t.add(e),!0)})).map((n=>({signature:null,publicKey:n})))}sign(...n){if(0===n.length)throw new Error("No signers");const t=new Set,e=[];for(const r of n){const n=r.publicKey.toString();t.has(n)||(t.add(n),e.push(r))}this.signatures=e.map((n=>({signature:null,publicKey:n.publicKey})));const l=this._compile();this._partialSign(l,...e)}partialSign(...n){if(0===n.length)throw new Error("No signers");const t=new Set,e=[];for(const r of n){const n=r.publicKey.toString();t.has(n)||(t.add(n),e.push(r))}const l=this._compile();this._partialSign(l,...e)}_partialSign(n,...t){const e=n.serialize();t.forEach((n=>{const t=E(e,n.secretKey);this._addSignature(n.publicKey,T(t))}))}addSignature(n,t){this._compile(),this._addSignature(n,t)}_addSignature(n,t){V(64===t.length);const e=this.signatures.findIndex((t=>n.equals(t.publicKey)));if(e<0)throw new Error(`unknown signer: ${n.toString()}`);this.signatures[e].signature=l.lW.from(t)}verifySignatures(){return this._verifySignatures(this.serializeMessage(),!0)}_verifySignatures(n,t){for(const{signature:e,publicKey:l}of this.signatures)if(null===e){if(t)return!1}else if(!S(e,n,l.toBuffer()))return!1;return!0}serialize(n){const{requireAllSignatures:t,verifySignatures:e}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},n),l=this.serializeMessage();if(e&&!this._verifySignatures(l,t))throw new Error("Signature verification failed");return this._serialize(l)}_serialize(n){const{signatures:t}=this,e=[];Z(e,t.length);const r=e.length+64*t.length+n.length,u=l.lW.alloc(r);return V(t.length<256),l.lW.from(e).copy(u,0),t.forEach((({signature:n},t)=>{null!==n&&(V(64===n.length,"signature has invalid length"),l.lW.from(n).copy(u,e.length+64*t))})),n.copy(u,e.length+64*t.length),V(u.length<=N,`Transaction too large: ${u.length} > ${N}`),u}get keys(){return V(1===this.instructions.length),this.instructions[0].keys.map((n=>n.pubkey))}get programId(){return V(1===this.instructions.length),this.instructions[0].programId}get data(){return V(1===this.instructions.length),this.instructions[0].data}static from(n){let t=[...n];const e=$(t);let r=[];for(let u=0;u<e;u++){const n=t.slice(0,K);t=t.slice(K),r.push(a().encode(l.lW.from(n)))}return ln.populate(Y.from(t),r)}static populate(n,t=[]){const e=new ln;return e.recentBlockhash=n.recentBlockhash,n.header.numRequiredSignatures>0&&(e.feePayer=n.accountKeys[0]),t.forEach(((t,l)=>{const r={signature:t==a().encode(tn)?null:a().decode(t),publicKey:n.accountKeys[l]};e.signatures.push(r)})),n.instructions.forEach((t=>{const l=t.accounts.map((t=>{const l=n.accountKeys[t];return{pubkey:l,isSigner:e.signatures.some((n=>n.publicKey.toString()===l.toString()))||n.isAccountSigner(t),isWritable:n.isAccountWritable(t)}}));e.instructions.push(new en({keys:l,programId:n.accountKeys[t.programIdIndex],data:a().decode(t.data)}))})),e._message=n,e._json=e.toJSON(),e}}class rn{constructor(n){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=n.payerKey,this.instructions=n.instructions,this.recentBlockhash=n.recentBlockhash}static decompile(n,t){const{header:e,compiledInstructions:l,recentBlockhash:r}=n,{numRequiredSignatures:u,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:o}=e,s=u-i;V(s>0,"Message header is invalid");const a=n.staticAccountKeys.length-o;V(a>=0,"Message header is invalid");const c=n.getAccountKeys(t),h=c.get(0);if(void 0===h)throw new Error("Failed to decompile message because no account keys were found");const d=[];for(const f of l){const n=[];for(const l of f.accountKeyIndexes){const t=c.get(l);if(void 0===t)throw new Error(`Failed to find key for account key index ${l}`);let r;r=l<u?l<s:l<c.staticAccountKeys.length?l-u<a:l-c.staticAccountKeys.length<c.accountKeysFromLookups.writable.length,n.push({pubkey:t,isSigner:l<e.numRequiredSignatures,isWritable:r})}const t=c.get(f.programIdIndex);if(void 0===t)throw new Error(`Failed to find program id for program id index ${f.programIdIndex}`);d.push(new en({programId:t,data:T(f.data),keys:n}))}return new rn({payerKey:h,instructions:d,recentBlockhash:r})}compileToLegacyMessage(){return Y.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(n){return J.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:n})}}class un{constructor(n,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)V(t.length===n.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let e=0;e<n.header.numRequiredSignatures;e++)t.push(new Uint8Array(K));this.signatures=t}this.message=n}serialize(){const n=this.message.serialize(),t=Array();Z(t,this.signatures.length);const e=d.struct([d.blob(t.length,"encodedSignaturesLength"),d.seq(q(),this.signatures.length,"signatures"),d.blob(n.length,"serializedMessage")]),l=new Uint8Array(2048),r=e.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:n},l);return l.slice(0,r)}static deserialize(n){let t=[...n];const e=[],l=$(t);for(let u=0;u<l;u++)e.push(new Uint8Array(t.splice(0,K)));const r=Q.deserialize(new Uint8Array(t));return new un(r,e)}sign(n){const t=this.message.serialize(),e=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const l of n){const n=e.findIndex((n=>n.equals(l.publicKey)));V(n>=0,`Cannot sign with non signer key ${l.publicKey.toBase58()}`),this.signatures[n]=E(t,l.secretKey)}}}const on=new C("SysvarC1ock11111111111111111111111111111111"),sn=new C("SysvarEpochSchedu1e111111111111111111111111"),an=new C("Sysvar1nstructions1111111111111111111111111"),cn=new C("SysvarRecentB1ockHashes11111111111111111111"),hn=new C("SysvarRent111111111111111111111111111111111"),dn=new C("SysvarRewards111111111111111111111111111111"),fn=new C("SysvarS1otHashes111111111111111111111111111"),pn=new C("SysvarS1otHistory11111111111111111111111111"),gn=new C("SysvarStakeHistory1111111111111111111111111");async function yn(n,t,e,l){const r=l&&{skipPreflight:l.skipPreflight,preflightCommitment:l.preflightCommitment||l.commitment,maxRetries:l.maxRetries,minContextSlot:l.minContextSlot},u=await n.sendTransaction(t,e,r),i=null!=t.recentBlockhash&&null!=t.lastValidBlockHeight?(await n.confirmTransaction({signature:u,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},l&&l.commitment)).value:(await n.confirmTransaction(u,l&&l.commitment)).value;if(i.err)throw new Error(`Transaction ${u} failed (${JSON.stringify(i)})`);return u}function mn(n){return new Promise((t=>setTimeout(t,n)))}function bn(n,t){const e=n.layout.span>=0?n.layout.span:G(n,t),r=l.lW.alloc(e),u=Object.assign({instruction:n.index},t);return n.layout.encode(u,r),r}function wn(n,t){let e;try{e=n.layout.decode(t)}catch(l){throw new Error("invalid instruction; "+l)}if(e.instruction!==n.index)throw new Error(`invalid instruction; instruction index mismatch ${e.instruction} != ${n.index}`);return e}const vn=d.nu64("lamportsPerSignature"),kn=d.struct([d.u32("version"),d.u32("state"),F("authorizedPubkey"),F("nonce"),d.struct([vn],"feeCalculator")]),In=kn.span;class An{constructor(n){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=n.authorizedPubkey,this.nonce=n.nonce,this.feeCalculator=n.feeCalculator}static fromAccountData(n){const t=kn.decode(T(n),0);return new An({authorizedPubkey:new C(t.authorizedPubkey),nonce:new C(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const _n=(En=8,n=>{const t=(0,d.blob)(En,n),{encode:e,decode:r}=(n=>({decode:n.decode.bind(n),encode:n.encode.bind(n)}))(t),u=t;return u.decode=(n,t)=>{const e=r(n,t);return(0,f.toBigIntLE)(l.lW.from(e))},u.encode=(n,t,l)=>{const r=(0,f.toBufferLE)(n,En);return e(r,t,l)},u});var En;class Sn{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(Tn))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a SystemInstruction");return e}static decodeCreateAccount(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{lamports:t,space:e,programId:l}=wn(Tn.Create,n.data);return{fromPubkey:n.keys[0].pubkey,newAccountPubkey:n.keys[1].pubkey,lamports:t,space:e,programId:new C(l)}}static decodeTransfer(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{lamports:t}=wn(Tn.Transfer,n.data);return{fromPubkey:n.keys[0].pubkey,toPubkey:n.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{lamports:t,seed:e,programId:l}=wn(Tn.TransferWithSeed,n.data);return{fromPubkey:n.keys[0].pubkey,basePubkey:n.keys[1].pubkey,toPubkey:n.keys[2].pubkey,lamports:t,seed:e,programId:new C(l)}}static decodeAllocate(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{space:t}=wn(Tn.Allocate,n.data);return{accountPubkey:n.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{base:t,seed:e,space:l,programId:r}=wn(Tn.AllocateWithSeed,n.data);return{accountPubkey:n.keys[0].pubkey,basePubkey:new C(t),seed:e,space:l,programId:new C(r)}}static decodeAssign(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{programId:t}=wn(Tn.Assign,n.data);return{accountPubkey:n.keys[0].pubkey,programId:new C(t)}}static decodeAssignWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,1);const{base:t,seed:e,programId:l}=wn(Tn.AssignWithSeed,n.data);return{accountPubkey:n.keys[0].pubkey,basePubkey:new C(t),seed:e,programId:new C(l)}}static decodeCreateWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{base:t,seed:e,lamports:l,space:r,programId:u}=wn(Tn.CreateWithSeed,n.data);return{fromPubkey:n.keys[0].pubkey,newAccountPubkey:n.keys[1].pubkey,basePubkey:new C(t),seed:e,lamports:l,space:r,programId:new C(u)}}static decodeNonceInitialize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{authorized:t}=wn(Tn.InitializeNonceAccount,n.data);return{noncePubkey:n.keys[0].pubkey,authorizedPubkey:new C(t)}}static decodeNonceAdvance(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3),wn(Tn.AdvanceNonceAccount,n.data),{noncePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey}}static decodeNonceWithdraw(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,5);const{lamports:t}=wn(Tn.WithdrawNonceAccount,n.data);return{noncePubkey:n.keys[0].pubkey,toPubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{authorized:t}=wn(Tn.AuthorizeNonceAccount,n.data);return{noncePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[1].pubkey,newAuthorizedPubkey:new C(t)}}static checkProgramId(n){if(!n.equals(xn.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}const Tn=Object.freeze({Create:{index:0,layout:d.struct([d.u32("instruction"),d.ns64("lamports"),d.ns64("space"),F("programId")])},Assign:{index:1,layout:d.struct([d.u32("instruction"),F("programId")])},Transfer:{index:2,layout:d.struct([d.u32("instruction"),_n("lamports")])},CreateWithSeed:{index:3,layout:d.struct([d.u32("instruction"),F("base"),H("seed"),d.ns64("lamports"),d.ns64("space"),F("programId")])},AdvanceNonceAccount:{index:4,layout:d.struct([d.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:d.struct([d.u32("instruction"),F("authorized")])},AuthorizeNonceAccount:{index:7,layout:d.struct([d.u32("instruction"),F("authorized")])},Allocate:{index:8,layout:d.struct([d.u32("instruction"),d.ns64("space")])},AllocateWithSeed:{index:9,layout:d.struct([d.u32("instruction"),F("base"),H("seed"),d.ns64("space"),F("programId")])},AssignWithSeed:{index:10,layout:d.struct([d.u32("instruction"),F("base"),H("seed"),F("programId")])},TransferWithSeed:{index:11,layout:d.struct([d.u32("instruction"),_n("lamports"),H("seed"),F("programId")])},UpgradeNonceAccount:{index:12,layout:d.struct([d.u32("instruction")])}});class xn{constructor(){}static createAccount(n){const t=bn(Tn.Create,{lamports:n.lamports,space:n.space,programId:T(n.programId.toBuffer())});return new en({keys:[{pubkey:n.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:n.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(n){let t,e;if("basePubkey"in n){t=bn(Tn.TransferWithSeed,{lamports:BigInt(n.lamports),seed:n.seed,programId:T(n.programId.toBuffer())}),e=[{pubkey:n.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:n.basePubkey,isSigner:!0,isWritable:!1},{pubkey:n.toPubkey,isSigner:!1,isWritable:!0}]}else{t=bn(Tn.Transfer,{lamports:BigInt(n.lamports)}),e=[{pubkey:n.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:n.toPubkey,isSigner:!1,isWritable:!0}]}return new en({keys:e,programId:this.programId,data:t})}static assign(n){let t,e;if("basePubkey"in n){t=bn(Tn.AssignWithSeed,{base:T(n.basePubkey.toBuffer()),seed:n.seed,programId:T(n.programId.toBuffer())}),e=[{pubkey:n.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:n.basePubkey,isSigner:!0,isWritable:!1}]}else{t=bn(Tn.Assign,{programId:T(n.programId.toBuffer())}),e=[{pubkey:n.accountPubkey,isSigner:!0,isWritable:!0}]}return new en({keys:e,programId:this.programId,data:t})}static createAccountWithSeed(n){const t=bn(Tn.CreateWithSeed,{base:T(n.basePubkey.toBuffer()),seed:n.seed,lamports:n.lamports,space:n.space,programId:T(n.programId.toBuffer())});let e=[{pubkey:n.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:n.newAccountPubkey,isSigner:!1,isWritable:!0}];return n.basePubkey!=n.fromPubkey&&e.push({pubkey:n.basePubkey,isSigner:!0,isWritable:!1}),new en({keys:e,programId:this.programId,data:t})}static createNonceAccount(n){const t=new ln;"basePubkey"in n&&"seed"in n?t.add(xn.createAccountWithSeed({fromPubkey:n.fromPubkey,newAccountPubkey:n.noncePubkey,basePubkey:n.basePubkey,seed:n.seed,lamports:n.lamports,space:In,programId:this.programId})):t.add(xn.createAccount({fromPubkey:n.fromPubkey,newAccountPubkey:n.noncePubkey,lamports:n.lamports,space:In,programId:this.programId}));const e={noncePubkey:n.noncePubkey,authorizedPubkey:n.authorizedPubkey};return t.add(this.nonceInitialize(e)),t}static nonceInitialize(n){const t=bn(Tn.InitializeNonceAccount,{authorized:T(n.authorizedPubkey.toBuffer())}),e={keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:cn,isSigner:!1,isWritable:!1},{pubkey:hn,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new en(e)}static nonceAdvance(n){const t=bn(Tn.AdvanceNonceAccount),e={keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:cn,isSigner:!1,isWritable:!1},{pubkey:n.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new en(e)}static nonceWithdraw(n){const t=bn(Tn.WithdrawNonceAccount,{lamports:n.lamports});return new en({keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:n.toPubkey,isSigner:!1,isWritable:!0},{pubkey:cn,isSigner:!1,isWritable:!1},{pubkey:hn,isSigner:!1,isWritable:!1},{pubkey:n.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(n){const t=bn(Tn.AuthorizeNonceAccount,{authorized:T(n.newAuthorizedPubkey.toBuffer())});return new en({keys:[{pubkey:n.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:n.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(n){let t,e;if("basePubkey"in n){t=bn(Tn.AllocateWithSeed,{base:T(n.basePubkey.toBuffer()),seed:n.seed,space:n.space,programId:T(n.programId.toBuffer())}),e=[{pubkey:n.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:n.basePubkey,isSigner:!0,isWritable:!1}]}else{t=bn(Tn.Allocate,{space:n.space}),e=[{pubkey:n.accountPubkey,isSigner:!0,isWritable:!0}]}return new en({keys:e,programId:this.programId,data:t})}}xn.programId=new C("11111111111111111111111111111111");const Bn=N-300;class Pn{constructor(){}static getMinNumSignatures(n){return 2*(Math.ceil(n/Pn.chunkSize)+1+1)}static async load(n,t,e,r,u){{const l=await n.getMinimumBalanceForRentExemption(u.length),i=await n.getAccountInfo(e.publicKey,"confirmed");let o=null;if(null!==i){if(i.executable)return console.error("Program load failed, account is already executable"),!1;i.data.length!==u.length&&(o=o||new ln,o.add(xn.allocate({accountPubkey:e.publicKey,space:u.length}))),i.owner.equals(r)||(o=o||new ln,o.add(xn.assign({accountPubkey:e.publicKey,programId:r}))),i.lamports<l&&(o=o||new ln,o.add(xn.transfer({fromPubkey:t.publicKey,toPubkey:e.publicKey,lamports:l-i.lamports})))}else o=(new ln).add(xn.createAccount({fromPubkey:t.publicKey,newAccountPubkey:e.publicKey,lamports:l>0?l:1,space:u.length,programId:r}));null!==o&&await yn(n,o,[t,e],{commitment:"confirmed"})}const i=d.struct([d.u32("instruction"),d.u32("offset"),d.u32("bytesLength"),d.u32("bytesLengthPadding"),d.seq(d.u8("byte"),d.offset(d.u32(),-8),"bytes")]),o=Pn.chunkSize;let s=0,a=u,c=[];for(;a.length>0;){const u=a.slice(0,o),h=l.lW.alloc(o+16);i.encode({instruction:0,offset:s,bytes:u,bytesLength:0,bytesLengthPadding:0},h);const d=(new ln).add({keys:[{pubkey:e.publicKey,isSigner:!0,isWritable:!0}],programId:r,data:h});if(c.push(yn(n,d,[t,e],{commitment:"confirmed"})),n._rpcEndpoint.includes("solana.com")){const n=4;await mn(1e3/n)}s+=o,a=a.slice(o)}await Promise.all(c);{const u=d.struct([d.u32("instruction")]),i=l.lW.alloc(u.span);u.encode({instruction:1},i);const o=(new ln).add({keys:[{pubkey:e.publicKey,isSigner:!0,isWritable:!0},{pubkey:hn,isSigner:!1,isWritable:!1}],programId:r,data:i});await yn(n,o,[t,e],{commitment:"confirmed"})}return!0}}Pn.chunkSize=Bn;const Rn=new C("BPFLoader2111111111111111111111111111111111");class On{static getMinNumSignatures(n){return Pn.getMinNumSignatures(n)}static load(n,t,e,l,r){return Pn.load(n,t,e,r,l)}}var Mn=Object.prototype.toString,Cn=Object.keys||function(n){var t=[];for(var e in n)t.push(e);return t};function Un(n,t){var e,l,r,u,i,o,s;if(!0===n)return"true";if(!1===n)return"false";switch(typeof n){case"object":if(null===n)return null;if(n.toJSON&&"function"==typeof n.toJSON)return Un(n.toJSON(),t);if("[object Array]"===(s=Mn.call(n))){for(r="[",l=n.length-1,e=0;e<l;e++)r+=Un(n[e],!0)+",";return l>-1&&(r+=Un(n[e],!0)),r+"]"}if("[object Object]"===s){for(l=(u=Cn(n).sort()).length,r="",e=0;e<l;)void 0!==(o=Un(n[i=u[e]],!1))&&(r&&(r+=","),r+=JSON.stringify(i)+":"+o),e++;return"{"+r+"}"}return JSON.stringify(n);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(n);default:return isFinite(n)?n:null}}var Ln=function(n){var t=Un(n,!1);if(void 0!==t)return""+t};function Nn(n){let t=0;for(;n>1;)n/=2,t++;return t}class zn{constructor(n,t,e,l,r){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=n,this.leaderScheduleSlotOffset=t,this.warmup=e,this.firstNormalEpoch=l,this.firstNormalSlot=r}getEpoch(n){return this.getEpochAndSlotIndex(n)[0]}getEpochAndSlotIndex(n){if(n<this.firstNormalSlot){const e=Nn(0===(t=n+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-Nn(32)-1;return[e,n-(this.getSlotsInEpoch(e)-32)]}{const t=n-this.firstNormalSlot,e=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+e,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(n){return n<=this.firstNormalEpoch?32*(Math.pow(2,n)-1):(n-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(n){return this.getFirstSlotInEpoch(n)+this.getSlotsInEpoch(n)-1}getSlotsInEpoch(n){return n<this.firstNormalEpoch?Math.pow(2,n+Nn(32)):this.slotsPerEpoch}}class Kn extends Error{constructor(n,t){super(n),this.logs=void 0,this.logs=t}}const Dn={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class Wn extends Error{constructor({code:n,message:t,data:e},l){super(null!=l?`${l}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=n,this.data=e,this.name="SolanaJSONRPCError"}}var jn=globalThis.fetch;class Fn{constructor(n){this.key=void 0,this.state=void 0,this.key=n.key,this.state=n.state}isActive(){return this.state.deactivationSlot===2n**64n-1n}static deserialize(n){const t=function(n,t){let e;try{e=n.layout.decode(t)}catch(l){throw new Error("invalid instruction; "+l)}if(e.typeIndex!==n.index)throw new Error(`invalid account data; account type mismatch ${e.typeIndex} != ${n.index}`);return e}(qn,n),e=n.length-56;V(e>=0,"lookup table is invalid"),V(e%32==0,"lookup table is invalid");const l=e/32,{addresses:r}=d.struct([d.seq(F(),l,"addresses")]).decode(n.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new C(t.authority[0]):void 0,addresses:r.map((n=>new C(n)))}}}const qn={index:1,layout:d.struct([d.u32("typeIndex"),_n("deactivationSlot"),d.nu64("lastExtendedSlot"),d.u8("lastExtendedStartIndex"),d.u8(),d.seq(F(),d.offset(d.u8(),-1),"authority")])},Hn=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;var Gn;const $n=(0,p.oQ)((0,p.eE)(C),(0,p.Z_)(),(n=>new C(n))),Zn=(0,p.bc)([(0,p.Z_)(),(0,p.i0)("base64")]),Vn=(0,p.oQ)((0,p.eE)(l.lW),Zn,(n=>l.lW.from(n[0],"base64"))),Xn=3e4;function Yn(n){let t,e;if("string"==typeof n)t=n;else if(n){const{commitment:l,...r}=n;t=l,e=r}return{commitment:t,config:e}}function Jn(n){return(0,p.G0)([(0,p.dt)({jsonrpc:(0,p.i0)("2.0"),id:(0,p.Z_)(),result:n}),(0,p.dt)({jsonrpc:(0,p.i0)("2.0"),id:(0,p.Z_)(),error:(0,p.dt)({code:(0,p._4)(),message:(0,p.Z_)(),data:(0,p.jt)((0,p.Yj)())})})])}const Qn=Jn((0,p._4)());function nt(n){return(0,p.oQ)(Jn(n),Qn,(t=>"error"in t?t:{...t,result:(0,p.Ue)(t.result,n)}))}function tt(n){return nt((0,p.dt)({context:(0,p.dt)({slot:(0,p.Rx)()}),value:n}))}function et(n){return(0,p.dt)({context:(0,p.dt)({slot:(0,p.Rx)()}),value:n})}function lt(n,t){return 0===n?new J({header:t.header,staticAccountKeys:t.accountKeys.map((n=>new C(n))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((n=>({programIdIndex:n.programIdIndex,accountKeyIndexes:n.accounts,data:a().decode(n.data)}))),addressTableLookups:t.addressTableLookups}):new Y(t)}const rt=(0,p.dt)({foundation:(0,p.Rx)(),foundationTerm:(0,p.Rx)(),initial:(0,p.Rx)(),taper:(0,p.Rx)(),terminal:(0,p.Rx)()}),ut=nt((0,p.IX)((0,p.AG)((0,p.dt)({epoch:(0,p.Rx)(),effectiveSlot:(0,p.Rx)(),amount:(0,p.Rx)(),postBalance:(0,p.Rx)()})))),it=(0,p.dt)({epoch:(0,p.Rx)(),slotIndex:(0,p.Rx)(),slotsInEpoch:(0,p.Rx)(),absoluteSlot:(0,p.Rx)(),blockHeight:(0,p.jt)((0,p.Rx)()),transactionCount:(0,p.jt)((0,p.Rx)())}),ot=(0,p.dt)({slotsPerEpoch:(0,p.Rx)(),leaderScheduleSlotOffset:(0,p.Rx)(),warmup:(0,p.O7)(),firstNormalEpoch:(0,p.Rx)(),firstNormalSlot:(0,p.Rx)()}),st=(0,p.IM)((0,p.Z_)(),(0,p.IX)((0,p.Rx)())),at=(0,p.AG)((0,p.G0)([(0,p.dt)({}),(0,p.Z_)()])),ct=(0,p.dt)({err:at}),ht=(0,p.i0)("receivedSignature"),dt=(0,p.dt)({"solana-core":(0,p.Z_)(),"feature-set":(0,p.jt)((0,p.Rx)())}),ft=tt((0,p.dt)({err:(0,p.AG)((0,p.G0)([(0,p.dt)({}),(0,p.Z_)()])),logs:(0,p.AG)((0,p.IX)((0,p.Z_)())),accounts:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.AG)((0,p.dt)({executable:(0,p.O7)(),owner:(0,p.Z_)(),lamports:(0,p.Rx)(),data:(0,p.IX)((0,p.Z_)()),rentEpoch:(0,p.jt)((0,p.Rx)())}))))),unitsConsumed:(0,p.jt)((0,p.Rx)()),returnData:(0,p.jt)((0,p.AG)((0,p.dt)({programId:(0,p.Z_)(),data:(0,p.bc)([(0,p.Z_)(),(0,p.i0)("base64")])})))})),pt=tt((0,p.dt)({byIdentity:(0,p.IM)((0,p.Z_)(),(0,p.IX)((0,p.Rx)())),range:(0,p.dt)({firstSlot:(0,p.Rx)(),lastSlot:(0,p.Rx)()})}));const gt=nt(rt),yt=nt(it),mt=nt(ot),bt=nt(st),wt=nt((0,p.Rx)()),vt=tt((0,p.dt)({total:(0,p.Rx)(),circulating:(0,p.Rx)(),nonCirculating:(0,p.Rx)(),nonCirculatingAccounts:(0,p.IX)($n)})),kt=(0,p.dt)({amount:(0,p.Z_)(),uiAmount:(0,p.AG)((0,p.Rx)()),decimals:(0,p.Rx)(),uiAmountString:(0,p.jt)((0,p.Z_)())}),It=tt((0,p.IX)((0,p.dt)({address:$n,amount:(0,p.Z_)(),uiAmount:(0,p.AG)((0,p.Rx)()),decimals:(0,p.Rx)(),uiAmountString:(0,p.jt)((0,p.Z_)())}))),At=tt((0,p.IX)((0,p.dt)({pubkey:$n,account:(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:Vn,rentEpoch:(0,p.Rx)()})}))),_t=(0,p.dt)({program:(0,p.Z_)(),parsed:(0,p._4)(),space:(0,p.Rx)()}),Et=tt((0,p.IX)((0,p.dt)({pubkey:$n,account:(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:_t,rentEpoch:(0,p.Rx)()})}))),St=tt((0,p.IX)((0,p.dt)({lamports:(0,p.Rx)(),address:$n}))),Tt=(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:Vn,rentEpoch:(0,p.Rx)()}),xt=(0,p.dt)({pubkey:$n,account:Tt}),Bt=(0,p.oQ)((0,p.G0)([(0,p.eE)(l.lW),_t]),(0,p.G0)([Zn,_t]),(n=>Array.isArray(n)?(0,p.Ue)(n,Vn):n)),Pt=(0,p.dt)({executable:(0,p.O7)(),owner:$n,lamports:(0,p.Rx)(),data:Bt,rentEpoch:(0,p.Rx)()}),Rt=(0,p.dt)({pubkey:$n,account:Pt}),Ot=(0,p.dt)({state:(0,p.G0)([(0,p.i0)("active"),(0,p.i0)("inactive"),(0,p.i0)("activating"),(0,p.i0)("deactivating")]),active:(0,p.Rx)(),inactive:(0,p.Rx)()}),Mt=nt((0,p.IX)((0,p.dt)({signature:(0,p.Z_)(),slot:(0,p.Rx)(),err:at,memo:(0,p.AG)((0,p.Z_)()),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),Ct=nt((0,p.IX)((0,p.dt)({signature:(0,p.Z_)(),slot:(0,p.Rx)(),err:at,memo:(0,p.AG)((0,p.Z_)()),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)()))}))),Ut=(0,p.dt)({subscription:(0,p.Rx)(),result:et(Tt)}),Lt=(0,p.dt)({pubkey:$n,account:Tt}),Nt=(0,p.dt)({subscription:(0,p.Rx)(),result:et(Lt)}),zt=(0,p.dt)({parent:(0,p.Rx)(),slot:(0,p.Rx)(),root:(0,p.Rx)()}),Kt=(0,p.dt)({subscription:(0,p.Rx)(),result:zt}),Dt=(0,p.G0)([(0,p.dt)({type:(0,p.G0)([(0,p.i0)("firstShredReceived"),(0,p.i0)("completed"),(0,p.i0)("optimisticConfirmation"),(0,p.i0)("root")]),slot:(0,p.Rx)(),timestamp:(0,p.Rx)()}),(0,p.dt)({type:(0,p.i0)("createdBank"),parent:(0,p.Rx)(),slot:(0,p.Rx)(),timestamp:(0,p.Rx)()}),(0,p.dt)({type:(0,p.i0)("frozen"),slot:(0,p.Rx)(),timestamp:(0,p.Rx)(),stats:(0,p.dt)({numTransactionEntries:(0,p.Rx)(),numSuccessfulTransactions:(0,p.Rx)(),numFailedTransactions:(0,p.Rx)(),maxTransactionsPerEntry:(0,p.Rx)()})}),(0,p.dt)({type:(0,p.i0)("dead"),slot:(0,p.Rx)(),timestamp:(0,p.Rx)(),err:(0,p.Z_)()})]),Wt=(0,p.dt)({subscription:(0,p.Rx)(),result:Dt}),jt=(0,p.dt)({subscription:(0,p.Rx)(),result:et((0,p.G0)([ct,ht]))}),Ft=(0,p.dt)({subscription:(0,p.Rx)(),result:(0,p.Rx)()}),qt=(0,p.dt)({pubkey:(0,p.Z_)(),gossip:(0,p.AG)((0,p.Z_)()),tpu:(0,p.AG)((0,p.Z_)()),rpc:(0,p.AG)((0,p.Z_)()),version:(0,p.AG)((0,p.Z_)())}),Ht=(0,p.dt)({votePubkey:(0,p.Z_)(),nodePubkey:(0,p.Z_)(),activatedStake:(0,p.Rx)(),epochVoteAccount:(0,p.O7)(),epochCredits:(0,p.IX)((0,p.bc)([(0,p.Rx)(),(0,p.Rx)(),(0,p.Rx)()])),commission:(0,p.Rx)(),lastVote:(0,p.Rx)(),rootSlot:(0,p.AG)((0,p.Rx)())}),Gt=nt((0,p.dt)({current:(0,p.IX)(Ht),delinquent:(0,p.IX)(Ht)})),$t=(0,p.G0)([(0,p.i0)("processed"),(0,p.i0)("confirmed"),(0,p.i0)("finalized")]),Zt=(0,p.dt)({slot:(0,p.Rx)(),confirmations:(0,p.AG)((0,p.Rx)()),err:at,confirmationStatus:(0,p.jt)($t)}),Vt=tt((0,p.IX)((0,p.AG)(Zt))),Xt=nt((0,p.Rx)()),Yt=(0,p.dt)({accountKey:$n,writableIndexes:(0,p.IX)((0,p.Rx)()),readonlyIndexes:(0,p.IX)((0,p.Rx)())}),Jt=(0,p.dt)({signatures:(0,p.IX)((0,p.Z_)()),message:(0,p.dt)({accountKeys:(0,p.IX)((0,p.Z_)()),header:(0,p.dt)({numRequiredSignatures:(0,p.Rx)(),numReadonlySignedAccounts:(0,p.Rx)(),numReadonlyUnsignedAccounts:(0,p.Rx)()}),instructions:(0,p.IX)((0,p.dt)({accounts:(0,p.IX)((0,p.Rx)()),data:(0,p.Z_)(),programIdIndex:(0,p.Rx)()})),recentBlockhash:(0,p.Z_)(),addressTableLookups:(0,p.jt)((0,p.IX)(Yt))})}),Qt=(0,p.dt)({parsed:(0,p._4)(),program:(0,p.Z_)(),programId:$n}),ne=(0,p.dt)({accounts:(0,p.IX)($n),data:(0,p.Z_)(),programId:$n}),te=(0,p.G0)([ne,Qt]),ee=(0,p.G0)([(0,p.dt)({parsed:(0,p._4)(),program:(0,p.Z_)(),programId:(0,p.Z_)()}),(0,p.dt)({accounts:(0,p.IX)((0,p.Z_)()),data:(0,p.Z_)(),programId:(0,p.Z_)()})]),le=(0,p.oQ)(te,ee,(n=>"accounts"in n?(0,p.Ue)(n,ne):(0,p.Ue)(n,Qt))),re=(0,p.dt)({signatures:(0,p.IX)((0,p.Z_)()),message:(0,p.dt)({accountKeys:(0,p.IX)((0,p.dt)({pubkey:$n,signer:(0,p.O7)(),writable:(0,p.O7)(),source:(0,p.jt)((0,p.G0)([(0,p.i0)("transaction"),(0,p.i0)("lookupTable")]))})),instructions:(0,p.IX)(le),recentBlockhash:(0,p.Z_)(),addressTableLookups:(0,p.jt)((0,p.AG)((0,p.IX)(Yt)))})}),ue=(0,p.dt)({accountIndex:(0,p.Rx)(),mint:(0,p.Z_)(),owner:(0,p.jt)((0,p.Z_)()),uiTokenAmount:kt}),ie=(0,p.dt)({writable:(0,p.IX)($n),readonly:(0,p.IX)($n)}),oe=(0,p.dt)({err:at,fee:(0,p.Rx)(),innerInstructions:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.dt)({index:(0,p.Rx)(),instructions:(0,p.IX)((0,p.dt)({accounts:(0,p.IX)((0,p.Rx)()),data:(0,p.Z_)(),programIdIndex:(0,p.Rx)()}))})))),preBalances:(0,p.IX)((0,p.Rx)()),postBalances:(0,p.IX)((0,p.Rx)()),logMessages:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.Z_)()))),preTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),postTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),loadedAddresses:(0,p.jt)(ie),computeUnitsConsumed:(0,p.jt)((0,p.Rx)())}),se=(0,p.dt)({err:at,fee:(0,p.Rx)(),innerInstructions:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.dt)({index:(0,p.Rx)(),instructions:(0,p.IX)(le)})))),preBalances:(0,p.IX)((0,p.Rx)()),postBalances:(0,p.IX)((0,p.Rx)()),logMessages:(0,p.jt)((0,p.AG)((0,p.IX)((0,p.Z_)()))),preTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),postTokenBalances:(0,p.jt)((0,p.AG)((0,p.IX)(ue))),loadedAddresses:(0,p.jt)(ie),computeUnitsConsumed:(0,p.jt)((0,p.Rx)())}),ae=(0,p.G0)([(0,p.i0)(0),(0,p.i0)("legacy")]),ce=nt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),transactions:(0,p.IX)((0,p.dt)({transaction:Jt,meta:(0,p.AG)(oe),version:(0,p.jt)(ae)})),rewards:(0,p.jt)((0,p.IX)((0,p.dt)({pubkey:(0,p.Z_)(),lamports:(0,p.Rx)(),postBalance:(0,p.AG)((0,p.Rx)()),rewardType:(0,p.AG)((0,p.Z_)())}))),blockTime:(0,p.AG)((0,p.Rx)()),blockHeight:(0,p.AG)((0,p.Rx)())}))),he=nt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),transactions:(0,p.IX)((0,p.dt)({transaction:Jt,meta:(0,p.AG)(oe)})),rewards:(0,p.jt)((0,p.IX)((0,p.dt)({pubkey:(0,p.Z_)(),lamports:(0,p.Rx)(),postBalance:(0,p.AG)((0,p.Rx)()),rewardType:(0,p.AG)((0,p.Z_)())}))),blockTime:(0,p.AG)((0,p.Rx)())}))),de=nt((0,p.AG)((0,p.dt)({blockhash:(0,p.Z_)(),previousBlockhash:(0,p.Z_)(),parentSlot:(0,p.Rx)(),signatures:(0,p.IX)((0,p.Z_)()),blockTime:(0,p.AG)((0,p.Rx)())}))),fe=nt((0,p.AG)((0,p.dt)({slot:(0,p.Rx)(),meta:oe,blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)())),transaction:Jt,version:(0,p.jt)(ae)}))),pe=nt((0,p.AG)((0,p.dt)({slot:(0,p.Rx)(),transaction:re,meta:(0,p.AG)(se),blockTime:(0,p.jt)((0,p.AG)((0,p.Rx)())),version:(0,p.jt)(ae)}))),ge=tt((0,p.dt)({blockhash:(0,p.Z_)(),feeCalculator:(0,p.dt)({lamportsPerSignature:(0,p.Rx)()})})),ye=tt((0,p.dt)({blockhash:(0,p.Z_)(),lastValidBlockHeight:(0,p.Rx)()})),me=(0,p.dt)({slot:(0,p.Rx)(),numTransactions:(0,p.Rx)(),numSlots:(0,p.Rx)(),samplePeriodSecs:(0,p.Rx)()}),be=nt((0,p.IX)(me)),we=tt((0,p.AG)((0,p.dt)({feeCalculator:(0,p.dt)({lamportsPerSignature:(0,p.Rx)()})}))),ve=nt((0,p.Z_)()),ke=nt((0,p.Z_)()),Ie=(0,p.dt)({err:at,logs:(0,p.IX)((0,p.Z_)()),signature:(0,p.Z_)()}),Ae=(0,p.dt)({result:et(Ie),subscription:(0,p.Rx)()}),_e={"solana-client":`js/${null!==(Gn="0.0.0-development")?Gn:"UNKNOWN"}`};class Ee{constructor(n,t){let e,l,r,u,i;var o;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,e=t.wsEndpoint,l=t.httpHeaders,r=t.fetch,u=t.fetchMiddleware,i=t.disableRetryOnRateLimit),this._rpcEndpoint=function(n){if(!1===/^https?:/.test(n))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return n}(n),this._rpcWsEndpoint=e||function(n){const t=n.match(Hn);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${n}\``);const[e,l,r,u]=t,i=n.startsWith("https:")?"wss:":"ws:",o=null==r?null:parseInt(r.slice(1),10);return`${i}//${l}${null==o?"":`:${o+1}`}${u}`}(n),this._rpcClient=function(n,t,e,l,r){const u=e||jn;let i;return l&&(i=async(n,t)=>{const e=await new Promise(((e,r)=>{try{l(n,t,((n,t)=>e([n,t])))}catch(u){r(u)}}));return await u(...e)}),new(m())((async(e,l)=>{const o={method:"POST",body:e,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},_e)};try{let t,e=5,s=500;for(;t=i?await i(n,o):await u(n,o),429===t.status&&!0!==r&&(e-=1,0!==e);)console.log(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${s}ms delay...`),await mn(s),s*=2;const a=await t.text();t.ok?l(null,a):l(new Error(`${t.status} ${t.statusText}: ${a}`))}catch(s){s instanceof Error&&l(s)}}),{})}(n,l,r,u,i),this._rpcRequest=(o=this._rpcClient,(n,t)=>new Promise(((e,l)=>{o.request(n,t,((n,t)=>{n?l(n):e(t)}))}))),this._rpcBatchRequest=function(n){return t=>new Promise(((e,l)=>{0===t.length&&e([]);const r=t.map((t=>n.request(t.methodName,t.args)));n.request(r,((n,t)=>{n?l(n):e(t)}))}))}(this._rpcClient),this._rpcWebSocket=new g.K(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,void 0,l),u=await this._rpcRequest("getBalance",r),i=(0,p.Ue)(u,tt((0,p.Rx)()));if("error"in i)throw new Wn(i.error,`failed to get balance for ${n.toBase58()}`);return i.result}async getBalance(n,t){return await this.getBalanceAndContext(n,t).then((n=>n.value)).catch((t=>{throw new Error("failed to get balance of account "+n.toBase58()+": "+t)}))}async getBlockTime(n){const t=await this._rpcRequest("getBlockTime",[n]),e=(0,p.Ue)(t,nt((0,p.AG)((0,p.Rx)())));if("error"in e)throw new Wn(e.error,`failed to get block time for slot ${n}`);return e.result}async getMinimumLedgerSlot(){const n=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,p.Ue)(n,nt((0,p.Rx)()));if("error"in t)throw new Wn(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const n=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,p.Ue)(n,wt);if("error"in t)throw new Wn(t.error,"failed to get first available block");return t.result}async getSupply(n){let t={};t="string"==typeof n?{commitment:n}:n?{...n,commitment:n&&n.commitment||this.commitment}:{commitment:this.commitment};const e=await this._rpcRequest("getSupply",[t]),l=(0,p.Ue)(e,vt);if("error"in l)throw new Wn(l.error,"failed to get supply");return l.result}async getTokenSupply(n,t){const e=this._buildArgs([n.toBase58()],t),l=await this._rpcRequest("getTokenSupply",e),r=(0,p.Ue)(l,tt(kt));if("error"in r)throw new Wn(r.error,"failed to get token supply");return r.result}async getTokenAccountBalance(n,t){const e=this._buildArgs([n.toBase58()],t),l=await this._rpcRequest("getTokenAccountBalance",e),r=(0,p.Ue)(l,tt(kt));if("error"in r)throw new Wn(r.error,"failed to get token account balance");return r.result}async getTokenAccountsByOwner(n,t,e){const{commitment:l,config:r}=Yn(e);let u=[n.toBase58()];"mint"in t?u.push({mint:t.mint.toBase58()}):u.push({programId:t.programId.toBase58()});const i=this._buildArgs(u,l,"base64",r),o=await this._rpcRequest("getTokenAccountsByOwner",i),s=(0,p.Ue)(o,At);if("error"in s)throw new Wn(s.error,`failed to get token accounts owned by account ${n.toBase58()}`);return s.result}async getParsedTokenAccountsByOwner(n,t,e){let l=[n.toBase58()];"mint"in t?l.push({mint:t.mint.toBase58()}):l.push({programId:t.programId.toBase58()});const r=this._buildArgs(l,e,"jsonParsed"),u=await this._rpcRequest("getTokenAccountsByOwner",r),i=(0,p.Ue)(u,Et);if("error"in i)throw new Wn(i.error,`failed to get token accounts owned by account ${n.toBase58()}`);return i.result}async getLargestAccounts(n){const t={...n,commitment:n&&n.commitment||this.commitment},e=t.filter||t.commitment?[t]:[],l=await this._rpcRequest("getLargestAccounts",e),r=(0,p.Ue)(l,St);if("error"in r)throw new Wn(r.error,"failed to get largest accounts");return r.result}async getTokenLargestAccounts(n,t){const e=this._buildArgs([n.toBase58()],t),l=await this._rpcRequest("getTokenLargestAccounts",e),r=(0,p.Ue)(l,It);if("error"in r)throw new Wn(r.error,"failed to get token largest accounts");return r.result}async getAccountInfoAndContext(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,"base64",l),u=await this._rpcRequest("getAccountInfo",r),i=(0,p.Ue)(u,tt((0,p.AG)(Tt)));if("error"in i)throw new Wn(i.error,`failed to get info about account ${n.toBase58()}`);return i.result}async getParsedAccountInfo(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,"jsonParsed",l),u=await this._rpcRequest("getAccountInfo",r),i=(0,p.Ue)(u,tt((0,p.AG)(Pt)));if("error"in i)throw new Wn(i.error,`failed to get info about account ${n.toBase58()}`);return i.result}async getAccountInfo(n,t){try{return(await this.getAccountInfoAndContext(n,t)).value}catch(e){throw new Error("failed to get info about account "+n.toBase58()+": "+e)}}async getMultipleAccountsInfoAndContext(n,t){const{commitment:e,config:l}=Yn(t),r=n.map((n=>n.toBase58())),u=this._buildArgs([r],e,"base64",l),i=await this._rpcRequest("getMultipleAccounts",u),o=(0,p.Ue)(i,tt((0,p.IX)((0,p.AG)(Tt))));if("error"in o)throw new Wn(o.error,`failed to get info for accounts ${r}`);return o.result}async getMultipleAccountsInfo(n,t){return(await this.getMultipleAccountsInfoAndContext(n,t)).value}async getStakeActivation(n,t,e){const{commitment:l,config:r}=Yn(t),u=this._buildArgs([n.toBase58()],l,void 0,{...r,epoch:null!=e?e:null==r?void 0:r.epoch}),i=await this._rpcRequest("getStakeActivation",u),o=(0,p.Ue)(i,nt(Ot));if("error"in o)throw new Wn(o.error,`failed to get Stake Activation ${n.toBase58()}`);return o.result}async getProgramAccounts(n,t){const{commitment:e,config:l}=Yn(t),{encoding:r,...u}=l||{},i=this._buildArgs([n.toBase58()],e,r||"base64",u),o=await this._rpcRequest("getProgramAccounts",i),s=(0,p.Ue)(o,nt((0,p.IX)(xt)));if("error"in s)throw new Wn(s.error,`failed to get accounts owned by program ${n.toBase58()}`);return s.result}async getParsedProgramAccounts(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgs([n.toBase58()],e,"jsonParsed",l),u=await this._rpcRequest("getProgramAccounts",r),i=(0,p.Ue)(u,nt((0,p.IX)(Rt)));if("error"in i)throw new Wn(i.error,`failed to get accounts owned by program ${n.toBase58()}`);return i.result}async confirmTransaction(n,t){let e,l;if("string"==typeof n)e=n;else{e=n.signature}try{l=a().decode(e)}catch(d){throw new Error("signature must be base58 encoded: "+e)}V(64===l.length,"signature has invalid length");const r=t||this.commitment;let u,i,o=!1;const s=new Promise(((n,t)=>{try{i=this.onSignature(e,((t,e)=>{i=void 0;const l={context:e,value:t};o=!0,n({__type:nn.PROCESSED,response:l})}),r)}catch(d){t(d)}})),c=new Promise((e=>{if("string"==typeof n){let n=this._confirmTransactionInitialTimeout||6e4;switch(r){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":n=this._confirmTransactionInitialTimeout||3e4}u=setTimeout((()=>e({__type:nn.TIMED_OUT,timeoutMs:n})),n)}else{let l=n;const r=async()=>{try{return await this.getBlockHeight(t)}catch(n){return-1}};(async()=>{let n=await r();if(!o){for(;n<=l.lastValidBlockHeight;){if(await mn(1e3),o)return;if(n=await r(),o)return}e({__type:nn.BLOCKHEIGHT_EXCEEDED})}})()}}));let h;try{const n=await Promise.race([s,c]);switch(n.__type){case nn.BLOCKHEIGHT_EXCEEDED:throw new D(e);case nn.PROCESSED:h=n.response;break;case nn.TIMED_OUT:throw new W(e,n.timeoutMs/1e3)}}finally{clearTimeout(u),i&&this.removeSignatureListener(i)}return h}async getClusterNodes(){const n=await this._rpcRequest("getClusterNodes",[]),t=(0,p.Ue)(n,nt((0,p.IX)(qt)));if("error"in t)throw new Wn(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(n){const t=this._buildArgs([],n),e=await this._rpcRequest("getVoteAccounts",t),l=(0,p.Ue)(e,Gt);if("error"in l)throw new Wn(l.error,"failed to get vote accounts");return l.result}async getSlot(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getSlot",l),u=(0,p.Ue)(r,nt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get slot");return u.result}async getSlotLeader(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getSlotLeader",l),u=(0,p.Ue)(r,nt((0,p.Z_)()));if("error"in u)throw new Wn(u.error,"failed to get slot leader");return u.result}async getSlotLeaders(n,t){const e=[n,t],l=await this._rpcRequest("getSlotLeaders",e),r=(0,p.Ue)(l,nt((0,p.IX)($n)));if("error"in r)throw new Wn(r.error,"failed to get slot leaders");return r.result}async getSignatureStatus(n,t){const{context:e,value:l}=await this.getSignatureStatuses([n],t);V(1===l.length);return{context:e,value:l[0]}}async getSignatureStatuses(n,t){const e=[n];t&&e.push(t);const l=await this._rpcRequest("getSignatureStatuses",e),r=(0,p.Ue)(l,Vt);if("error"in r)throw new Wn(r.error,"failed to get signature status");return r.result}async getTransactionCount(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getTransactionCount",l),u=(0,p.Ue)(r,nt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get transaction count");return u.result}async getTotalSupply(n){return(await this.getSupply({commitment:n,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(n){const t=this._buildArgs([],n),e=await this._rpcRequest("getInflationGovernor",t),l=(0,p.Ue)(e,gt);if("error"in l)throw new Wn(l.error,"failed to get inflation");return l.result}async getInflationReward(n,t,e){const{commitment:l,config:r}=Yn(e),u=this._buildArgs([n.map((n=>n.toBase58()))],l,void 0,{...r,epoch:null!=t?t:null==r?void 0:r.epoch}),i=await this._rpcRequest("getInflationReward",u),o=(0,p.Ue)(i,ut);if("error"in o)throw new Wn(o.error,"failed to get inflation reward");return o.result}async getEpochInfo(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getEpochInfo",l),u=(0,p.Ue)(r,yt);if("error"in u)throw new Wn(u.error,"failed to get epoch info");return u.result}async getEpochSchedule(){const n=await this._rpcRequest("getEpochSchedule",[]),t=(0,p.Ue)(n,mt);if("error"in t)throw new Wn(t.error,"failed to get epoch schedule");const e=t.result;return new zn(e.slotsPerEpoch,e.leaderScheduleSlotOffset,e.warmup,e.firstNormalEpoch,e.firstNormalSlot)}async getLeaderSchedule(){const n=await this._rpcRequest("getLeaderSchedule",[]),t=(0,p.Ue)(n,bt);if("error"in t)throw new Wn(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(n,t){const e=this._buildArgs([n],t),l=await this._rpcRequest("getMinimumBalanceForRentExemption",e),r=(0,p.Ue)(l,Xt);return"error"in r?(console.warn("Unable to fetch minimum balance for rent exemption"),0):r.result}async getRecentBlockhashAndContext(n){const t=this._buildArgs([],n),e=await this._rpcRequest("getRecentBlockhash",t),l=(0,p.Ue)(e,ge);if("error"in l)throw new Wn(l.error,"failed to get recent blockhash");return l.result}async getRecentPerformanceSamples(n){const t=await this._rpcRequest("getRecentPerformanceSamples",n?[n]:[]),e=(0,p.Ue)(t,be);if("error"in e)throw new Wn(e.error,"failed to get recent performance samples");return e.result}async getFeeCalculatorForBlockhash(n,t){const e=this._buildArgs([n],t),l=await this._rpcRequest("getFeeCalculatorForBlockhash",e),r=(0,p.Ue)(l,we);if("error"in r)throw new Wn(r.error,"failed to get fee calculator");const{context:u,value:i}=r.result;return{context:u,value:null!==i?i.feeCalculator:null}}async getFeeForMessage(n,t){const e=n.serialize().toString("base64"),l=this._buildArgs([e],t),r=await this._rpcRequest("getFeeForMessage",l),u=(0,p.Ue)(r,tt((0,p.AG)((0,p.Rx)())));if("error"in u)throw new Wn(u.error,"failed to get slot");if(null===u.result)throw new Error("invalid blockhash");return u.result}async getRecentBlockhash(n){try{return(await this.getRecentBlockhashAndContext(n)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhash(n){try{return(await this.getLatestBlockhashAndContext(n)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhashAndContext(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getLatestBlockhash",l),u=(0,p.Ue)(r,ye);if("error"in u)throw new Wn(u.error,"failed to get latest blockhash");return u.result}async getVersion(){const n=await this._rpcRequest("getVersion",[]),t=(0,p.Ue)(n,nt(dt));if("error"in t)throw new Wn(t.error,"failed to get version");return t.result}async getGenesisHash(){const n=await this._rpcRequest("getGenesisHash",[]),t=(0,p.Ue)(n,nt((0,p.Z_)()));if("error"in t)throw new Wn(t.error,"failed to get genesis hash");return t.result}async getBlock(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgsAtLeastConfirmed([n],e,void 0,l),u=await this._rpcRequest("getBlock",r),i=(0,p.Ue)(u,ce);if("error"in i)throw new Wn(i.error,"failed to get confirmed block");const o=i.result;return o?{...o,transactions:o.transactions.map((({transaction:n,meta:t,version:e})=>({meta:t,transaction:{...n,message:lt(e,n.message)},version:e})))}:o}async getBlockHeight(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,void 0,e),r=await this._rpcRequest("getBlockHeight",l),u=(0,p.Ue)(r,nt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get block height information");return u.result}async getBlockProduction(n){let t,e;if("string"==typeof n)e=n;else if(n){const{commitment:l,...r}=n;e=l,t=r}const l=this._buildArgs([],e,"base64",t),r=await this._rpcRequest("getBlockProduction",l),u=(0,p.Ue)(r,pt);if("error"in u)throw new Wn(u.error,"failed to get block production information");return u.result}async getTransaction(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgsAtLeastConfirmed([n],e,void 0,l),u=await this._rpcRequest("getTransaction",r),i=(0,p.Ue)(u,fe);if("error"in i)throw new Wn(i.error,"failed to get transaction");const o=i.result;return o?{...o,transaction:{...o.transaction,message:lt(o.version,o.transaction.message)}}:o}async getParsedTransaction(n,t){const{commitment:e,config:l}=Yn(t),r=this._buildArgsAtLeastConfirmed([n],e,"jsonParsed",l),u=await this._rpcRequest("getTransaction",r),i=(0,p.Ue)(u,pe);if("error"in i)throw new Wn(i.error,"failed to get transaction");return i.result}async getParsedTransactions(n,t){const{commitment:e,config:l}=Yn(t),r=n.map((n=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([n],e,"jsonParsed",l)})));return(await this._rpcBatchRequest(r)).map((n=>{const t=(0,p.Ue)(n,pe);if("error"in t)throw new Wn(t.error,"failed to get transactions");return t.result}))}async getTransactions(n,t){const{commitment:e,config:l}=Yn(t),r=n.map((n=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([n],e,void 0,l)})));return(await this._rpcBatchRequest(r)).map((n=>{const t=(0,p.Ue)(n,fe);if("error"in t)throw new Wn(t.error,"failed to get transactions");const e=t.result;return e?{...e,transaction:{...e.transaction,message:lt(e.version,e.transaction.message)}}:e}))}async getConfirmedBlock(n,t){const e=this._buildArgsAtLeastConfirmed([n],t),l=await this._rpcRequest("getConfirmedBlock",e),r=(0,p.Ue)(l,he);if("error"in r)throw new Wn(r.error,"failed to get confirmed block");const u=r.result;if(!u)throw new Error("Confirmed block "+n+" not found");const i={...u,transactions:u.transactions.map((({transaction:n,meta:t})=>{const e=new Y(n.message);return{meta:t,transaction:{...n,message:e}}}))};return{...i,transactions:i.transactions.map((({transaction:n,meta:t})=>({meta:t,transaction:ln.populate(n.message,n.signatures)})))}}async getBlocks(n,t,e){const l=this._buildArgsAtLeastConfirmed(void 0!==t?[n,t]:[n],e),r=await this._rpcRequest("getBlocks",l),u=(0,p.Ue)(r,nt((0,p.IX)((0,p.Rx)())));if("error"in u)throw new Wn(u.error,"failed to get blocks");return u.result}async getBlockSignatures(n,t){const e=this._buildArgsAtLeastConfirmed([n],t,void 0,{transactionDetails:"signatures",rewards:!1}),l=await this._rpcRequest("getBlock",e),r=(0,p.Ue)(l,de);if("error"in r)throw new Wn(r.error,"failed to get block");const u=r.result;if(!u)throw new Error("Block "+n+" not found");return u}async getConfirmedBlockSignatures(n,t){const e=this._buildArgsAtLeastConfirmed([n],t,void 0,{transactionDetails:"signatures",rewards:!1}),l=await this._rpcRequest("getConfirmedBlock",e),r=(0,p.Ue)(l,de);if("error"in r)throw new Wn(r.error,"failed to get confirmed block");const u=r.result;if(!u)throw new Error("Confirmed block "+n+" not found");return u}async getConfirmedTransaction(n,t){const e=this._buildArgsAtLeastConfirmed([n],t),l=await this._rpcRequest("getConfirmedTransaction",e),r=(0,p.Ue)(l,fe);if("error"in r)throw new Wn(r.error,"failed to get transaction");const u=r.result;if(!u)return u;const i=new Y(u.transaction.message),o=u.transaction.signatures;return{...u,transaction:ln.populate(i,o)}}async getParsedConfirmedTransaction(n,t){const e=this._buildArgsAtLeastConfirmed([n],t,"jsonParsed"),l=await this._rpcRequest("getConfirmedTransaction",e),r=(0,p.Ue)(l,pe);if("error"in r)throw new Wn(r.error,"failed to get confirmed transaction");return r.result}async getParsedConfirmedTransactions(n,t){const e=n.map((n=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([n],t,"jsonParsed")})));return(await this._rpcBatchRequest(e)).map((n=>{const t=(0,p.Ue)(n,pe);if("error"in t)throw new Wn(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(n,t,e){let l={},r=await this.getFirstAvailableBlock();for(;!("until"in l)&&!(--t<=0||t<r);)try{const n=await this.getConfirmedBlockSignatures(t,"finalized");n.signatures.length>0&&(l.until=n.signatures[n.signatures.length-1].toString())}catch(i){if(i instanceof Error&&i.message.includes("skipped"))continue;throw i}let u=await this.getSlot("finalized");for(;!("before"in l||++e>u);)try{const n=await this.getConfirmedBlockSignatures(e);n.signatures.length>0&&(l.before=n.signatures[n.signatures.length-1].toString())}catch(i){if(i instanceof Error&&i.message.includes("skipped"))continue;throw i}return(await this.getConfirmedSignaturesForAddress2(n,l)).map((n=>n.signature))}async getConfirmedSignaturesForAddress2(n,t,e){const l=this._buildArgsAtLeastConfirmed([n.toBase58()],e,void 0,t),r=await this._rpcRequest("getConfirmedSignaturesForAddress2",l),u=(0,p.Ue)(r,Mt);if("error"in u)throw new Wn(u.error,"failed to get confirmed signatures for address");return u.result}async getSignaturesForAddress(n,t,e){const l=this._buildArgsAtLeastConfirmed([n.toBase58()],e,void 0,t),r=await this._rpcRequest("getSignaturesForAddress",l),u=(0,p.Ue)(r,Ct);if("error"in u)throw new Wn(u.error,"failed to get signatures for address");return u.result}async getAddressLookupTable(n,t){const{context:e,value:l}=await this.getAccountInfoAndContext(n,t);let r=null;return null!==l&&(r=new Fn({key:n,state:Fn.deserialize(l.data)})),{context:e,value:r}}async getNonceAndContext(n,t){const{context:e,value:l}=await this.getAccountInfoAndContext(n,t);let r=null;return null!==l&&(r=An.fromAccountData(l.data)),{context:e,value:r}}async getNonce(n,t){return await this.getNonceAndContext(n,t).then((n=>n.value)).catch((t=>{throw new Error("failed to get nonce for account "+n.toBase58()+": "+t)}))}async requestAirdrop(n,t){const e=await this._rpcRequest("requestAirdrop",[n.toBase58(),t]),l=(0,p.Ue)(e,ve);if("error"in l)throw new Wn(l.error,`airdrop to ${n.toBase58()} failed`);return l.result}async _blockhashWithExpiryBlockHeight(n){if(!n){for(;this._pollingBlockhash;)await mn(100);const n=Date.now()-this._blockhashInfo.lastFetch>=Xn;if(null!==this._blockhashInfo.latestBlockhash&&!n)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const n=Date.now(),t=this._blockhashInfo.latestBlockhash,e=t?t.blockhash:null;for(let l=0;l<50;l++){const n=await this.getLatestBlockhash("finalized");if(e!==n.blockhash)return this._blockhashInfo={latestBlockhash:n,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},n;await mn(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-n}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(n){const{commitment:t,config:e}=Yn(n),l=this._buildArgs([],t,"base64",e),r=await this._rpcRequest("getStakeMinimumDelegation",l),u=(0,p.Ue)(r,tt((0,p.Rx)()));if("error"in u)throw new Wn(u.error,"failed to get stake minimum delegation");return u.result}async simulateTransaction(n,t,e){if("message"in n){const r=n.serialize(),u=l.lW.from(r).toString("base64");if(Array.isArray(t)||void 0!==e)throw new Error("Invalid arguments");const i=t||{};i.encoding="base64","commitment"in i||(i.commitment=this.commitment);const o=[u,i],s=await this._rpcRequest("simulateTransaction",o),a=(0,p.Ue)(s,ft);if("error"in a)throw new Error("failed to simulate transaction: "+a.error.message);return a.result}let r;if(n instanceof ln){let t=n;r=new ln,r.feePayer=t.feePayer,r.instructions=n.instructions,r.nonceInfo=t.nonceInfo,r.signatures=t.signatures}else r=ln.populate(n),r._message=r._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const u=t;if(r.nonceInfo&&u)r.sign(...u);else{let n=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(n);if(r.lastValidBlockHeight=t.lastValidBlockHeight,r.recentBlockhash=t.blockhash,!u)break;if(r.sign(...u),!r.signature)throw new Error("!signature");const e=r.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(e)&&!this._blockhashInfo.transactionSignatures.includes(e)){this._blockhashInfo.simulatedSignatures.push(e);break}n=!0}}const i=r._compile(),o=i.serialize(),s=r._serialize(o).toString("base64"),a={encoding:"base64",commitment:this.commitment};if(e){const n=(Array.isArray(e)?e:i.nonProgramIds()).map((n=>n.toBase58()));a.accounts={encoding:"base64",addresses:n}}u&&(a.sigVerify=!0);const c=[s,a],h=await this._rpcRequest("simulateTransaction",c),d=(0,p.Ue)(h,ft);if("error"in d){let n;if("data"in d.error&&(n=d.error.data.logs,n&&Array.isArray(n))){const t="\n    ",e=t+n.join(t);console.error(d.error.message,e)}throw new Kn("failed to simulate transaction: "+d.error.message,n)}return d.result}async sendTransaction(n,t,e){if("message"in n){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const l=n.serialize();return await this.sendRawTransaction(l,e)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const l=t;if(n.nonceInfo)n.sign(...l);else{let t=this._disableBlockhashCaching;for(;;){const e=await this._blockhashWithExpiryBlockHeight(t);if(n.lastValidBlockHeight=e.lastValidBlockHeight,n.recentBlockhash=e.blockhash,n.sign(...l),!n.signature)throw new Error("!signature");const r=n.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.transactionSignatures.push(r);break}t=!0}}const r=n.serialize();return await this.sendRawTransaction(r,e)}async sendRawTransaction(n,t){const e=T(n).toString("base64");return await this.sendEncodedTransaction(e,t)}async sendEncodedTransaction(n,t){const e={encoding:"base64"},l=t&&t.skipPreflight,r=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(e.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(e.minContextSlot=t.minContextSlot),l&&(e.skipPreflight=l),r&&(e.preflightCommitment=r);const u=[n,e],i=await this._rpcRequest("sendTransaction",u),o=(0,p.Ue)(i,ke);if("error"in o){let n;throw"data"in o.error&&(n=o.error.data.logs),new Kn("failed to send transaction: "+o.error.message,n)}return o.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{this._rpcWebSocket.notify("ping").catch((()=>{}))}),5e3),this._updateSubscriptions()}_wsOnError(n){this._rpcWebSocketConnected=!1,console.error("ws error:",n.message)}_wsOnClose(n){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration++,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==n?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([n,t])=>{this._subscriptionsByHash[n]={...t,state:"pending"}}))):this._updateSubscriptions()}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(n){n instanceof Error&&console.log(`Error when closing socket connection: ${n.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const n=this._rpcWebSocketGeneration,t=()=>n===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async n=>{const e=this._subscriptionsByHash[n];if(void 0!==e)switch(e.state){case"pending":case"unsubscribed":if(0===e.callbacks.size)return delete this._subscriptionsByHash[n],"unsubscribed"===e.state&&delete this._subscriptionCallbacksByServerSubscriptionId[e.serverSubscriptionId],void(await this._updateSubscriptions());await(async()=>{const{args:l,method:r}=e;try{this._subscriptionsByHash[n]={...e,state:"subscribing"};const t=await this._rpcWebSocket.call(r,l);this._subscriptionsByHash[n]={...e,serverSubscriptionId:t,state:"subscribed"},this._subscriptionCallbacksByServerSubscriptionId[t]=e.callbacks,await this._updateSubscriptions()}catch(u){if(u instanceof Error&&console.error(`${r} error for argument`,l,u.message),!t())return;this._subscriptionsByHash[n]={...e,state:"pending"},await this._updateSubscriptions()}})();break;case"subscribed":0===e.callbacks.size&&await(async()=>{const{serverSubscriptionId:l,unsubscribeMethod:r}=e;if(this._subscriptionsAutoDisposedByRpc.has(l))this._subscriptionsAutoDisposedByRpc.delete(l);else{this._subscriptionsByHash[n]={...e,state:"unsubscribing"};try{await this._rpcWebSocket.call(r,[l])}catch(u){if(u instanceof Error&&console.error(`${r} error:`,u.message),!t())return;return this._subscriptionsByHash[n]={...e,state:"subscribed"},void(await this._updateSubscriptions())}}this._subscriptionsByHash[n]={...e,state:"unsubscribed"},await this._updateSubscriptions()})()}})))}_handleServerNotification(n,t){const e=this._subscriptionCallbacksByServerSubscriptionId[n];void 0!==e&&e.forEach((n=>{try{n(...t)}catch(e){console.error(e)}}))}_wsOnAccountNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Ut);this._handleServerNotification(e,[t.value,t.context])}_makeSubscription(n,t){const e=this._nextClientSubscriptionId++,l=Ln([n.method,t],!0),r=this._subscriptionsByHash[l];return void 0===r?this._subscriptionsByHash[l]={...n,args:t,callbacks:new Set([n.callback]),state:"pending"}:r.callbacks.add(n.callback),this._subscriptionDisposeFunctionsByClientSubscriptionId[e]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[e];const t=this._subscriptionsByHash[l];V(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${e}`),t.callbacks.delete(n.callback),await this._updateSubscriptions()},this._updateSubscriptions(),e}onAccountChange(n,t,e){const l=this._buildArgs([n.toBase58()],e||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},l)}async removeAccountChangeListener(n){await this._unsubscribeClientSubscription(n,"account change")}_wsOnProgramAccountNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Nt);this._handleServerNotification(e,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(n,t,e,l){const r=this._buildArgs([n.toBase58()],e||this._commitment||"finalized","base64",l?{filters:l}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},r)}async removeProgramAccountChangeListener(n){await this._unsubscribeClientSubscription(n,"program account change")}onLogs(n,t,e){const l=this._buildArgs(["object"==typeof n?{mentions:[n.toString()]}:n],e||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},l)}async removeOnLogsListener(n){await this._unsubscribeClientSubscription(n,"logs")}_wsOnLogsNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Ae);this._handleServerNotification(e,[t.value,t.context])}_wsOnSlotNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Kt);this._handleServerNotification(e,[t])}onSlotChange(n){return this._makeSubscription({callback:n,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(n){await this._unsubscribeClientSubscription(n,"slot change")}_wsOnSlotUpdatesNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Wt);this._handleServerNotification(e,[t])}onSlotUpdate(n){return this._makeSubscription({callback:n,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(n){await this._unsubscribeClientSubscription(n,"slot update")}async _unsubscribeClientSubscription(n,t){const e=this._subscriptionDisposeFunctionsByClientSubscriptionId[n];e?await e():console.warn(`Ignored unsubscribe request because an active subscription with id \`${n}\` for '${t}' events could not be found.`)}_buildArgs(n,t,e,l){const r=t||this._commitment;if(r||e||l){let t={};e&&(t.encoding=e),r&&(t.commitment=r),l&&(t=Object.assign(t,l)),n.push(t)}return n}_buildArgsAtLeastConfirmed(n,t,e,l){const r=t||this._commitment;if(r&&!["confirmed","finalized"].includes(r))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(n,t,e,l)}_wsOnSignatureNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,jt);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(e),this._handleServerNotification(e,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(n,t,e){const l=this._buildArgs([n],e||this._commitment||"finalized"),r=this._makeSubscription({callback:(n,e)=>{if("status"===n.type){t(n.result,e);try{this.removeSignatureListener(r)}catch(l){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},l);return r}onSignatureWithOptions(n,t,e){const{commitment:l,...r}={...e,commitment:e&&e.commitment||this._commitment||"finalized"},u=this._buildArgs([n],l,void 0,r),i=this._makeSubscription({callback:(n,e)=>{t(n,e);try{this.removeSignatureListener(i)}catch(l){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},u);return i}async removeSignatureListener(n){await this._unsubscribeClientSubscription(n,"signature result")}_wsOnRootNotification(n){const{result:t,subscription:e}=(0,p.Ue)(n,Ft);this._handleServerNotification(e,[t])}onRootChange(n){return this._makeSubscription({callback:n,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(n){await this._unsubscribeClientSubscription(n,"root change")}}class Se{constructor(n){this._keypair=void 0,this._keypair=null!=n?n:I()}static generate(){return new Se(I())}static fromSecretKey(n,t){if(64!==n.byteLength)throw new Error("bad secret key size");const e=n.slice(32,64);if(!t||!t.skipValidation){const t=n.slice(0,32),l=A(t);for(let n=0;n<32;n++)if(e[n]!==l[n])throw new Error("provided secretKey is invalid")}return new Se({publicKey:e,secretKey:n})}static fromSeed(n){const t=A(n),e=new Uint8Array(64);return e.set(n),e.set(t,32),new Se({publicKey:t,secretKey:e})}get publicKey(){return new C(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Te=Object.freeze({CreateLookupTable:{index:0,layout:d.struct([d.u32("instruction"),_n("recentSlot"),d.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:d.struct([d.u32("instruction")])},ExtendLookupTable:{index:2,layout:d.struct([d.u32("instruction"),_n(),d.seq(F(),d.offset(d.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:d.struct([d.u32("instruction")])},CloseLookupTable:{index:4,layout:d.struct([d.u32("instruction")])}});class xe{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(Te))if(r.index==t){e=l;break}if(!e)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return e}static decodeCreateLookupTable(n){this.checkProgramId(n.programId),this.checkKeysLength(n.keys,4);const{recentSlot:t}=wn(Te.CreateLookupTable,n.data);return{authority:n.keys[1].pubkey,payer:n.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(n){if(this.checkProgramId(n.programId),n.keys.length<2)throw new Error(`invalid instruction; found ${n.keys.length} keys, expected at least 2`);const{addresses:t}=wn(Te.ExtendLookupTable,n.data);return{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey,payer:n.keys.length>2?n.keys[2].pubkey:void 0,addresses:t.map((n=>new C(n)))}}static decodeCloseLookupTable(n){return this.checkProgramId(n.programId),this.checkKeysLength(n.keys,3),{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey,recipient:n.keys[2].pubkey}}static decodeFreezeLookupTable(n){return this.checkProgramId(n.programId),this.checkKeysLength(n.keys,2),{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey}}static decodeDeactivateLookupTable(n){return this.checkProgramId(n.programId),this.checkKeysLength(n.keys,2),{lookupTable:n.keys[0].pubkey,authority:n.keys[1].pubkey}}static checkProgramId(n){if(!n.equals(Be.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}class Be{constructor(){}static createLookupTable(n){const[t,e]=C.findProgramAddressSync([n.authority.toBuffer(),(0,f.toBufferLE)(BigInt(n.recentSlot),8)],this.programId),l=bn(Te.CreateLookupTable,{recentSlot:BigInt(n.recentSlot),bumpSeed:e}),r=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1},{pubkey:n.payer,isSigner:!0,isWritable:!0},{pubkey:xn.programId,isSigner:!1,isWritable:!1}];return[new en({programId:this.programId,keys:r,data:l}),t]}static freezeLookupTable(n){const t=bn(Te.FreezeLookupTable),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1}];return new en({programId:this.programId,keys:e,data:t})}static extendLookupTable(n){const t=bn(Te.ExtendLookupTable,{addresses:n.addresses.map((n=>n.toBytes()))}),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1}];return n.payer&&e.push({pubkey:n.payer,isSigner:!0,isWritable:!0},{pubkey:xn.programId,isSigner:!1,isWritable:!1}),new en({programId:this.programId,keys:e,data:t})}static deactivateLookupTable(n){const t=bn(Te.DeactivateLookupTable),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1}];return new en({programId:this.programId,keys:e,data:t})}static closeLookupTable(n){const t=bn(Te.CloseLookupTable),e=[{pubkey:n.lookupTable,isSigner:!1,isWritable:!0},{pubkey:n.authority,isSigner:!0,isWritable:!1},{pubkey:n.recipient,isSigner:!1,isWritable:!0}];return new en({programId:this.programId,keys:e,data:t})}}Be.programId=new C("AddressLookupTab1e1111111111111111111111111");class Pe{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u8("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(Re))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return e}static decodeRequestUnits(n){this.checkProgramId(n.programId);const{units:t,additionalFee:e}=wn(Re.RequestUnits,n.data);return{units:t,additionalFee:e}}static decodeRequestHeapFrame(n){this.checkProgramId(n.programId);const{bytes:t}=wn(Re.RequestHeapFrame,n.data);return{bytes:t}}static decodeSetComputeUnitLimit(n){this.checkProgramId(n.programId);const{units:t}=wn(Re.SetComputeUnitLimit,n.data);return{units:t}}static decodeSetComputeUnitPrice(n){this.checkProgramId(n.programId);const{microLamports:t}=wn(Re.SetComputeUnitPrice,n.data);return{microLamports:t}}static checkProgramId(n){if(!n.equals(Oe.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Re=Object.freeze({RequestUnits:{index:0,layout:d.struct([d.u8("instruction"),d.u32("units"),d.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:d.struct([d.u8("instruction"),d.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:d.struct([d.u8("instruction"),d.u32("units")])},SetComputeUnitPrice:{index:3,layout:d.struct([d.u8("instruction"),_n("microLamports")])}});class Oe{constructor(){}static requestUnits(n){const t=bn(Re.RequestUnits,n);return new en({keys:[],programId:this.programId,data:t})}static requestHeapFrame(n){const t=bn(Re.RequestHeapFrame,n);return new en({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(n){const t=bn(Re.SetComputeUnitLimit,n);return new en({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(n){const t=bn(Re.SetComputeUnitPrice,{microLamports:BigInt(n.microLamports)});return new en({keys:[],programId:this.programId,data:t})}}Oe.programId=new C("ComputeBudget111111111111111111111111111111");const Me=d.struct([d.u8("numSignatures"),d.u8("padding"),d.u16("signatureOffset"),d.u16("signatureInstructionIndex"),d.u16("publicKeyOffset"),d.u16("publicKeyInstructionIndex"),d.u16("messageDataOffset"),d.u16("messageDataSize"),d.u16("messageInstructionIndex")]);class Ce{constructor(){}static createInstructionWithPublicKey(n){const{publicKey:t,message:e,signature:r,instructionIndex:u}=n;V(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),V(64===r.length,`Signature must be 64 bytes but received ${r.length} bytes`);const i=Me.span,o=i+t.length,s=o+r.length,a=l.lW.alloc(s+e.length),c=null==u?65535:u;return Me.encode({numSignatures:1,padding:0,signatureOffset:o,signatureInstructionIndex:c,publicKeyOffset:i,publicKeyInstructionIndex:c,messageDataOffset:s,messageDataSize:e.length,messageInstructionIndex:c},a),a.fill(t,i),a.fill(r,o),a.fill(e,s),new en({keys:[],programId:Ce.programId,data:a})}static createInstructionWithPrivateKey(n){const{privateKey:t,message:e,instructionIndex:l}=n;V(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const n=Se.fromSecretKey(t),r=n.publicKey.toBytes(),u=E(e,n.secretKey);return this.createInstructionWithPublicKey({publicKey:r,message:e,signature:u,instructionIndex:l})}catch(r){throw new Error(`Error creating instruction; ${r}`)}}}Ce.programId=new C("Ed25519SigVerify111111111111111111111111111"),v.P6.hmacSha256Sync=(n,...t)=>{const e=w.b.create(c.J,n);return t.forEach((n=>e.update(n))),e.digest()};v.P6.isValidPrivateKey;const Ue=v.$3,Le=d.struct([d.u8("numSignatures"),d.u16("signatureOffset"),d.u8("signatureInstructionIndex"),d.u16("ethAddressOffset"),d.u8("ethAddressInstructionIndex"),d.u16("messageDataOffset"),d.u16("messageDataSize"),d.u8("messageInstructionIndex"),d.blob(20,"ethAddress"),d.blob(64,"signature"),d.u8("recoveryId")]);class Ne{constructor(){}static publicKeyToEthAddress(n){V(64===n.length,`Public key must be 64 bytes but received ${n.length} bytes`);try{return l.lW.from((0,b.fr)(T(n))).slice(-20)}catch(t){throw new Error(`Error constructing Ethereum address: ${t}`)}}static createInstructionWithPublicKey(n){const{publicKey:t,message:e,signature:l,recoveryId:r,instructionIndex:u}=n;return Ne.createInstructionWithEthAddress({ethAddress:Ne.publicKeyToEthAddress(t),message:e,signature:l,recoveryId:r,instructionIndex:u})}static createInstructionWithEthAddress(n){const{ethAddress:t,message:e,signature:r,recoveryId:u,instructionIndex:i=0}=n;let o;o="string"==typeof t?t.startsWith("0x")?l.lW.from(t.substr(2),"hex"):l.lW.from(t,"hex"):t,V(20===o.length,`Address must be 20 bytes but received ${o.length} bytes`);const s=12+o.length,a=s+r.length+1,c=l.lW.alloc(Le.span+e.length);return Le.encode({numSignatures:1,signatureOffset:s,signatureInstructionIndex:i,ethAddressOffset:12,ethAddressInstructionIndex:i,messageDataOffset:a,messageDataSize:e.length,messageInstructionIndex:i,signature:T(r),ethAddress:T(o),recoveryId:u},c),c.fill(T(e),Le.span),new en({keys:[],programId:Ne.programId,data:c})}static createInstructionWithPrivateKey(n){const{privateKey:t,message:e,instructionIndex:r}=n;V(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const n=T(t),o=Ue(n,!1).slice(1),s=l.lW.from((0,b.fr)(T(e))),[a,c]=(u=s,i=n,v.kS(u,i,{der:!1,recovered:!0}));return this.createInstructionWithPublicKey({publicKey:o,message:e,signature:a,recoveryId:c,instructionIndex:r})}catch(o){throw new Error(`Error creating instruction; ${o}`)}var u,i}}Ne.programId=new C("KeccakSecp256k11111111111111111111111111111");const ze=new C("StakeConfig11111111111111111111111111111111");class Ke{constructor(n,t){this.staker=void 0,this.withdrawer=void 0,this.staker=n,this.withdrawer=t}}class De{constructor(n,t,e){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=n,this.epoch=t,this.custodian=e}}De.default=new De(0,0,C.default);class We{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries(je))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a StakeInstruction");return e}static decodeInitialize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{authorized:t,lockup:e}=wn(je.Initialize,n.data);return{stakePubkey:n.keys[0].pubkey,authorized:new Ke(new C(t.staker),new C(t.withdrawer)),lockup:new De(e.unixTimestamp,e.epoch,new C(e.custodian))}}static decodeDelegate(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,6),wn(je.Delegate,n.data),{stakePubkey:n.keys[0].pubkey,votePubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[5].pubkey}}static decodeAuthorize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{newAuthorized:t,stakeAuthorizationType:e}=wn(je.Authorize,n.data),l={stakePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey,newAuthorizedPubkey:new C(t),stakeAuthorizationType:{index:e}};return n.keys.length>3&&(l.custodianPubkey=n.keys[3].pubkey),l}static decodeAuthorizeWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,2);const{newAuthorized:t,stakeAuthorizationType:e,authoritySeed:l,authorityOwner:r}=wn(je.AuthorizeWithSeed,n.data),u={stakePubkey:n.keys[0].pubkey,authorityBase:n.keys[1].pubkey,authoritySeed:l,authorityOwner:new C(r),newAuthorizedPubkey:new C(t),stakeAuthorizationType:{index:e}};return n.keys.length>3&&(u.custodianPubkey=n.keys[3].pubkey),u}static decodeSplit(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{lamports:t}=wn(je.Split,n.data);return{stakePubkey:n.keys[0].pubkey,splitStakePubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[2].pubkey,lamports:t}}static decodeMerge(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3),wn(je.Merge,n.data),{stakePubkey:n.keys[0].pubkey,sourceStakePubKey:n.keys[1].pubkey,authorizedPubkey:n.keys[4].pubkey}}static decodeWithdraw(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,5);const{lamports:t}=wn(je.Withdraw,n.data),e={stakePubkey:n.keys[0].pubkey,toPubkey:n.keys[1].pubkey,authorizedPubkey:n.keys[4].pubkey,lamports:t};return n.keys.length>5&&(e.custodianPubkey=n.keys[5].pubkey),e}static decodeDeactivate(n){return this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3),wn(je.Deactivate,n.data),{stakePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey}}static checkProgramId(n){if(!n.equals(qe.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}const je=Object.freeze({Initialize:{index:0,layout:d.struct([d.u32("instruction"),((n="authorized")=>d.struct([F("staker"),F("withdrawer")],n))(),((n="lockup")=>d.struct([d.ns64("unixTimestamp"),d.ns64("epoch"),F("custodian")],n))()])},Authorize:{index:1,layout:d.struct([d.u32("instruction"),F("newAuthorized"),d.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:d.struct([d.u32("instruction")])},Split:{index:3,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},Withdraw:{index:4,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},Deactivate:{index:5,layout:d.struct([d.u32("instruction")])},Merge:{index:7,layout:d.struct([d.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:d.struct([d.u32("instruction"),F("newAuthorized"),d.u32("stakeAuthorizationType"),H("authoritySeed"),F("authorityOwner")])}}),Fe=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class qe{constructor(){}static initialize(n){const{stakePubkey:t,authorized:e,lockup:l}=n,r=l||De.default,u=bn(je.Initialize,{authorized:{staker:T(e.staker.toBuffer()),withdrawer:T(e.withdrawer.toBuffer())},lockup:{unixTimestamp:r.unixTimestamp,epoch:r.epoch,custodian:T(r.custodian.toBuffer())}}),i={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:hn,isSigner:!1,isWritable:!1}],programId:this.programId,data:u};return new en(i)}static createAccountWithSeed(n){const t=new ln;t.add(xn.createAccountWithSeed({fromPubkey:n.fromPubkey,newAccountPubkey:n.stakePubkey,basePubkey:n.basePubkey,seed:n.seed,lamports:n.lamports,space:this.space,programId:this.programId}));const{stakePubkey:e,authorized:l,lockup:r}=n;return t.add(this.initialize({stakePubkey:e,authorized:l,lockup:r}))}static createAccount(n){const t=new ln;t.add(xn.createAccount({fromPubkey:n.fromPubkey,newAccountPubkey:n.stakePubkey,lamports:n.lamports,space:this.space,programId:this.programId}));const{stakePubkey:e,authorized:l,lockup:r}=n;return t.add(this.initialize({stakePubkey:e,authorized:l,lockup:r}))}static delegate(n){const{stakePubkey:t,authorizedPubkey:e,votePubkey:l}=n,r=bn(je.Delegate);return(new ln).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:gn,isSigner:!1,isWritable:!1},{pubkey:ze,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static authorize(n){const{stakePubkey:t,authorizedPubkey:e,newAuthorizedPubkey:l,stakeAuthorizationType:r,custodianPubkey:u}=n,i=bn(je.Authorize,{newAuthorized:T(l.toBuffer()),stakeAuthorizationType:r.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1}];return u&&o.push({pubkey:u,isSigner:!1,isWritable:!1}),(new ln).add({keys:o,programId:this.programId,data:i})}static authorizeWithSeed(n){const{stakePubkey:t,authorityBase:e,authoritySeed:l,authorityOwner:r,newAuthorizedPubkey:u,stakeAuthorizationType:i,custodianPubkey:o}=n,s=bn(je.AuthorizeWithSeed,{newAuthorized:T(u.toBuffer()),stakeAuthorizationType:i.index,authoritySeed:l,authorityOwner:T(r.toBuffer())}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1}];return o&&a.push({pubkey:o,isSigner:!1,isWritable:!1}),(new ln).add({keys:a,programId:this.programId,data:s})}static splitInstruction(n){const{stakePubkey:t,authorizedPubkey:e,splitStakePubkey:l,lamports:r}=n,u=bn(je.Split,{lamports:r});return new en({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:u})}static split(n){const t=new ln;return t.add(xn.createAccount({fromPubkey:n.authorizedPubkey,newAccountPubkey:n.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(n))}static splitWithSeed(n){const{stakePubkey:t,authorizedPubkey:e,splitStakePubkey:l,basePubkey:r,seed:u,lamports:i}=n,o=new ln;return o.add(xn.allocate({accountPubkey:l,basePubkey:r,seed:u,space:this.space,programId:this.programId})),o.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:e,splitStakePubkey:l,lamports:i}))}static merge(n){const{stakePubkey:t,sourceStakePubKey:e,authorizedPubkey:l}=n,r=bn(je.Merge);return(new ln).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:gn,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static withdraw(n){const{stakePubkey:t,authorizedPubkey:e,toPubkey:l,lamports:r,custodianPubkey:u}=n,i=bn(je.Withdraw,{lamports:r}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:gn,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}];return u&&o.push({pubkey:u,isSigner:!1,isWritable:!1}),(new ln).add({keys:o,programId:this.programId,data:i})}static deactivate(n){const{stakePubkey:t,authorizedPubkey:e}=n,l=bn(je.Deactivate);return(new ln).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:l})}}qe.programId=new C("Stake11111111111111111111111111111111111111"),qe.space=200;class He{constructor(n,t,e,l){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=n,this.authorizedVoter=t,this.authorizedWithdrawer=e,this.commission=l}}class Ge{constructor(){}static decodeInstructionType(n){this.checkProgramId(n.programId);const t=d.u32("instruction").decode(n.data);let e;for(const[l,r]of Object.entries($e))if(r.index==t){e=l;break}if(!e)throw new Error("Instruction type incorrect; not a VoteInstruction");return e}static decodeInitializeAccount(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,4);const{voteInit:t}=wn($e.InitializeAccount,n.data);return{votePubkey:n.keys[0].pubkey,nodePubkey:n.keys[3].pubkey,voteInit:new He(new C(t.nodePubkey),new C(t.authorizedVoter),new C(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{newAuthorized:t,voteAuthorizationType:e}=wn($e.Authorize,n.data);return{votePubkey:n.keys[0].pubkey,authorizedPubkey:n.keys[2].pubkey,newAuthorizedPubkey:new C(t),voteAuthorizationType:{index:e}}}static decodeAuthorizeWithSeed(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:e,newAuthorized:l,voteAuthorizationType:r}}=wn($e.AuthorizeWithSeed,n.data);return{currentAuthorityDerivedKeyBasePubkey:n.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new C(t),currentAuthorityDerivedKeySeed:e,newAuthorizedPubkey:new C(l),voteAuthorizationType:{index:r},votePubkey:n.keys[0].pubkey}}static decodeWithdraw(n){this.checkProgramId(n.programId),this.checkKeyLength(n.keys,3);const{lamports:t}=wn($e.Withdraw,n.data);return{votePubkey:n.keys[0].pubkey,authorizedWithdrawerPubkey:n.keys[2].pubkey,lamports:t,toPubkey:n.keys[1].pubkey}}static checkProgramId(n){if(!n.equals(Ve.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(n,t){if(n.length<t)throw new Error(`invalid instruction; found ${n.length} keys, expected at least ${t}`)}}const $e=Object.freeze({InitializeAccount:{index:0,layout:d.struct([d.u32("instruction"),((n="voteInit")=>d.struct([F("nodePubkey"),F("authorizedVoter"),F("authorizedWithdrawer"),d.u8("commission")],n))()])},Authorize:{index:1,layout:d.struct([d.u32("instruction"),F("newAuthorized"),d.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},AuthorizeWithSeed:{index:10,layout:d.struct([d.u32("instruction"),((n="voteAuthorizeWithSeedArgs")=>d.struct([d.u32("voteAuthorizationType"),F("currentAuthorityDerivedKeyOwnerPubkey"),H("currentAuthorityDerivedKeySeed"),F("newAuthorized")],n))()])}}),Ze=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class Ve{constructor(){}static initializeAccount(n){const{votePubkey:t,nodePubkey:e,voteInit:l}=n,r=bn($e.InitializeAccount,{voteInit:{nodePubkey:T(l.nodePubkey.toBuffer()),authorizedVoter:T(l.authorizedVoter.toBuffer()),authorizedWithdrawer:T(l.authorizedWithdrawer.toBuffer()),commission:l.commission}}),u={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:hn,isSigner:!1,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}],programId:this.programId,data:r};return new en(u)}static createAccount(n){const t=new ln;return t.add(xn.createAccount({fromPubkey:n.fromPubkey,newAccountPubkey:n.votePubkey,lamports:n.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:n.votePubkey,nodePubkey:n.voteInit.nodePubkey,voteInit:n.voteInit}))}static authorize(n){const{votePubkey:t,authorizedPubkey:e,newAuthorizedPubkey:l,voteAuthorizationType:r}=n,u=bn($e.Authorize,{newAuthorized:T(l.toBuffer()),voteAuthorizationType:r.index}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e,isSigner:!0,isWritable:!1}];return(new ln).add({keys:i,programId:this.programId,data:u})}static authorizeWithSeed(n){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:e,currentAuthorityDerivedKeySeed:l,newAuthorizedPubkey:r,voteAuthorizationType:u,votePubkey:i}=n,o=bn($e.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:T(e.toBuffer()),currentAuthorityDerivedKeySeed:l,newAuthorized:T(r.toBuffer()),voteAuthorizationType:u.index}}),s=[{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new ln).add({keys:s,programId:this.programId,data:o})}static withdraw(n){const{votePubkey:t,authorizedWithdrawerPubkey:e,lamports:l,toPubkey:r}=n,u=bn($e.Withdraw,{lamports:l}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1}];return(new ln).add({keys:i,programId:this.programId,data:u})}static safeWithdraw(n,t,e){if(n.lamports>t-e)throw new Error("Withdraw will leave vote account with insuffcient funds.");return Ve.withdraw(n)}}Ve.programId=new C("Vote111111111111111111111111111111111111111"),Ve.space=3731;const Xe=new C("Va1idator1nfo111111111111111111111111111111"),Ye=(0,p.dt)({name:(0,p.Z_)(),website:(0,p.jt)((0,p.Z_)()),details:(0,p.jt)((0,p.Z_)()),keybaseUsername:(0,p.jt)((0,p.Z_)())});class Je{constructor(n,t){this.key=void 0,this.info=void 0,this.key=n,this.info=t}static fromConfigData(n){let t=[...n];if(2!==$(t))return null;const e=[];for(let l=0;l<2;l++){const n=new C(t.slice(0,O));t=t.slice(O);const l=1===t.slice(0,1)[0];t=t.slice(1),e.push({publicKey:n,isSigner:l})}if(e[0].publicKey.equals(Xe)&&e[1].isSigner){const n=H().decode(l.lW.from(t)),r=JSON.parse(n);return(0,p.hu)(r,Ye),new Je(e[1].publicKey,r)}return null}}const Qe=new C("Vote111111111111111111111111111111111111111"),nl=d.struct([F("nodePubkey"),F("authorizedWithdrawer"),d.u8("commission"),d.nu64(),d.seq(d.struct([d.nu64("slot"),d.u32("confirmationCount")]),d.offset(d.u32(),-8),"votes"),d.u8("rootSlotValid"),d.nu64("rootSlot"),d.nu64(),d.seq(d.struct([d.nu64("epoch"),F("authorizedVoter")]),d.offset(d.u32(),-8),"authorizedVoters"),d.struct([d.seq(d.struct([F("authorizedPubkey"),d.nu64("epochOfLastAuthorizedSwitch"),d.nu64("targetEpoch")]),32,"buf"),d.nu64("idx"),d.u8("isEmpty")],"priorVoters"),d.nu64(),d.seq(d.struct([d.nu64("epoch"),d.nu64("credits"),d.nu64("prevCredits")]),d.offset(d.u32(),-8),"epochCredits"),d.struct([d.nu64("slot"),d.nu64("timestamp")],"lastTimestamp")]);class tl{constructor(n){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=n.nodePubkey,this.authorizedWithdrawer=n.authorizedWithdrawer,this.commission=n.commission,this.rootSlot=n.rootSlot,this.votes=n.votes,this.authorizedVoters=n.authorizedVoters,this.priorVoters=n.priorVoters,this.epochCredits=n.epochCredits,this.lastTimestamp=n.lastTimestamp}static fromAccountData(n){const t=nl.decode(T(n),4);let e=t.rootSlot;return t.rootSlotValid||(e=null),new tl({nodePubkey:new C(t.nodePubkey),authorizedWithdrawer:new C(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:e,authorizedVoters:t.authorizedVoters.map(el),priorVoters:rl(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function el({authorizedVoter:n,epoch:t}){return{epoch:t,authorizedVoter:new C(n)}}function ll({authorizedPubkey:n,epochOfLastAuthorizedSwitch:t,targetEpoch:e}){return{authorizedPubkey:new C(n),epochOfLastAuthorizedSwitch:t,targetEpoch:e}}function rl({buf:n,idx:t,isEmpty:e}){return e?[]:[...n.slice(t+1).map(ll),...n.slice(0,t).map(ll)]}const ul={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function il(n,t){const e=!1===t?"http":"https";if(!n)return ul[e].devnet;const l=ul[e][n];if(!l)throw new Error(`Unknown ${e} cluster: ${n}`);return l}async function ol(n,t,e,l){let r,u;e&&Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")?(r=e,u=l):u=e;const i=u&&{skipPreflight:u.skipPreflight,preflightCommitment:u.preflightCommitment||u.commitment,minContextSlot:u.minContextSlot},o=await n.sendRawTransaction(t,i),s=u&&u.commitment,a=r?n.confirmTransaction(r,s):n.confirmTransaction(o,s),c=(await a).value;if(c.err)throw new Error(`Raw transaction ${o} failed (${JSON.stringify(c)})`);return o}const sl=1e9},94796:(n,t,e)=>{"use strict";const l=e(95766),r=e(62333),u="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.lW=s,t.h2=50;const i=2147483647;function o(n){if(n>i)throw new RangeError('The value "'+n+'" is invalid for option "size"');const t=new Uint8Array(n);return Object.setPrototypeOf(t,s.prototype),t}function s(n,t,e){if("number"==typeof n){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(n)}return a(n,t,e)}function a(n,t,e){if("string"==typeof n)return function(n,t){"string"==typeof t&&""!==t||(t="utf8");if(!s.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const e=0|g(n,t);let l=o(e);const r=l.write(n,t);r!==e&&(l=l.slice(0,r));return l}(n,t);if(ArrayBuffer.isView(n))return function(n){if(V(n,Uint8Array)){const t=new Uint8Array(n);return f(t.buffer,t.byteOffset,t.byteLength)}return d(n)}(n);if(null==n)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n);if(V(n,ArrayBuffer)||n&&V(n.buffer,ArrayBuffer))return f(n,t,e);if("undefined"!=typeof SharedArrayBuffer&&(V(n,SharedArrayBuffer)||n&&V(n.buffer,SharedArrayBuffer)))return f(n,t,e);if("number"==typeof n)throw new TypeError('The "value" argument must not be of type number. Received type number');const l=n.valueOf&&n.valueOf();if(null!=l&&l!==n)return s.from(l,t,e);const r=function(n){if(s.isBuffer(n)){const t=0|p(n.length),e=o(t);return 0===e.length||n.copy(e,0,0,t),e}if(void 0!==n.length)return"number"!=typeof n.length||X(n.length)?o(0):d(n);if("Buffer"===n.type&&Array.isArray(n.data))return d(n.data)}(n);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof n[Symbol.toPrimitive])return s.from(n[Symbol.toPrimitive]("string"),t,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n)}function c(n){if("number"!=typeof n)throw new TypeError('"size" argument must be of type number');if(n<0)throw new RangeError('The value "'+n+'" is invalid for option "size"')}function h(n){return c(n),o(n<0?0:0|p(n))}function d(n){const t=n.length<0?0:0|p(n.length),e=o(t);for(let l=0;l<t;l+=1)e[l]=255&n[l];return e}function f(n,t,e){if(t<0||n.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(n.byteLength<t+(e||0))throw new RangeError('"length" is outside of buffer bounds');let l;return l=void 0===t&&void 0===e?new Uint8Array(n):void 0===e?new Uint8Array(n,t):new Uint8Array(n,t,e),Object.setPrototypeOf(l,s.prototype),l}function p(n){if(n>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|n}function g(n,t){if(s.isBuffer(n))return n.length;if(ArrayBuffer.isView(n)||V(n,ArrayBuffer))return n.byteLength;if("string"!=typeof n)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof n);const e=n.length,l=arguments.length>2&&!0===arguments[2];if(!l&&0===e)return 0;let r=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return G(n).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return $(n).length;default:if(r)return l?-1:G(n).length;t=(""+t).toLowerCase(),r=!0}}function y(n,t,e){let l=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(t>>>=0))return"";for(n||(n="utf8");;)switch(n){case"hex":return P(this,t,e);case"utf8":case"utf-8":return S(this,t,e);case"ascii":return x(this,t,e);case"latin1":case"binary":return B(this,t,e);case"base64":return E(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,e);default:if(l)throw new TypeError("Unknown encoding: "+n);n=(n+"").toLowerCase(),l=!0}}function m(n,t,e){const l=n[t];n[t]=n[e],n[e]=l}function b(n,t,e,l,r){if(0===n.length)return-1;if("string"==typeof e?(l=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),X(e=+e)&&(e=r?0:n.length-1),e<0&&(e=n.length+e),e>=n.length){if(r)return-1;e=n.length-1}else if(e<0){if(!r)return-1;e=0}if("string"==typeof t&&(t=s.from(t,l)),s.isBuffer(t))return 0===t.length?-1:w(n,t,e,l,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(n,t,e):Uint8Array.prototype.lastIndexOf.call(n,t,e):w(n,[t],e,l,r);throw new TypeError("val must be string, number or Buffer")}function w(n,t,e,l,r){let u,i=1,o=n.length,s=t.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(n.length<2||t.length<2)return-1;i=2,o/=2,s/=2,e/=2}function a(n,t){return 1===i?n[t]:n.readUInt16BE(t*i)}if(r){let l=-1;for(u=e;u<o;u++)if(a(n,u)===a(t,-1===l?0:u-l)){if(-1===l&&(l=u),u-l+1===s)return l*i}else-1!==l&&(u-=u-l),l=-1}else for(e+s>o&&(e=o-s),u=e;u>=0;u--){let e=!0;for(let l=0;l<s;l++)if(a(n,u+l)!==a(t,l)){e=!1;break}if(e)return u}return-1}function v(n,t,e,l){e=Number(e)||0;const r=n.length-e;l?(l=Number(l))>r&&(l=r):l=r;const u=t.length;let i;for(l>u/2&&(l=u/2),i=0;i<l;++i){const l=parseInt(t.substr(2*i,2),16);if(X(l))return i;n[e+i]=l}return i}function k(n,t,e,l){return Z(G(t,n.length-e),n,e,l)}function I(n,t,e,l){return Z(function(n){const t=[];for(let e=0;e<n.length;++e)t.push(255&n.charCodeAt(e));return t}(t),n,e,l)}function A(n,t,e,l){return Z($(t),n,e,l)}function _(n,t,e,l){return Z(function(n,t){let e,l,r;const u=[];for(let i=0;i<n.length&&!((t-=2)<0);++i)e=n.charCodeAt(i),l=e>>8,r=e%256,u.push(r),u.push(l);return u}(t,n.length-e),n,e,l)}function E(n,t,e){return 0===t&&e===n.length?l.fromByteArray(n):l.fromByteArray(n.slice(t,e))}function S(n,t,e){e=Math.min(n.length,e);const l=[];let r=t;for(;r<e;){const t=n[r];let u=null,i=t>239?4:t>223?3:t>191?2:1;if(r+i<=e){let e,l,o,s;switch(i){case 1:t<128&&(u=t);break;case 2:e=n[r+1],128==(192&e)&&(s=(31&t)<<6|63&e,s>127&&(u=s));break;case 3:e=n[r+1],l=n[r+2],128==(192&e)&&128==(192&l)&&(s=(15&t)<<12|(63&e)<<6|63&l,s>2047&&(s<55296||s>57343)&&(u=s));break;case 4:e=n[r+1],l=n[r+2],o=n[r+3],128==(192&e)&&128==(192&l)&&128==(192&o)&&(s=(15&t)<<18|(63&e)<<12|(63&l)<<6|63&o,s>65535&&s<1114112&&(u=s))}}null===u?(u=65533,i=1):u>65535&&(u-=65536,l.push(u>>>10&1023|55296),u=56320|1023&u),l.push(u),r+=i}return function(n){const t=n.length;if(t<=T)return String.fromCharCode.apply(String,n);let e="",l=0;for(;l<t;)e+=String.fromCharCode.apply(String,n.slice(l,l+=T));return e}(l)}s.TYPED_ARRAY_SUPPORT=function(){try{const n=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(n,t),42===n.foo()}catch(n){return!1}}(),s.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(s.prototype,"parent",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.buffer}}),Object.defineProperty(s.prototype,"offset",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.byteOffset}}),s.poolSize=8192,s.from=function(n,t,e){return a(n,t,e)},Object.setPrototypeOf(s.prototype,Uint8Array.prototype),Object.setPrototypeOf(s,Uint8Array),s.alloc=function(n,t,e){return function(n,t,e){return c(n),n<=0?o(n):void 0!==t?"string"==typeof e?o(n).fill(t,e):o(n).fill(t):o(n)}(n,t,e)},s.allocUnsafe=function(n){return h(n)},s.allocUnsafeSlow=function(n){return h(n)},s.isBuffer=function(n){return null!=n&&!0===n._isBuffer&&n!==s.prototype},s.compare=function(n,t){if(V(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),V(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(n)||!s.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(n===t)return 0;let e=n.length,l=t.length;for(let r=0,u=Math.min(e,l);r<u;++r)if(n[r]!==t[r]){e=n[r],l=t[r];break}return e<l?-1:l<e?1:0},s.isEncoding=function(n){switch(String(n).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(n,t){if(!Array.isArray(n))throw new TypeError('"list" argument must be an Array of Buffers');if(0===n.length)return s.alloc(0);let e;if(void 0===t)for(t=0,e=0;e<n.length;++e)t+=n[e].length;const l=s.allocUnsafe(t);let r=0;for(e=0;e<n.length;++e){let t=n[e];if(V(t,Uint8Array))r+t.length>l.length?(s.isBuffer(t)||(t=s.from(t)),t.copy(l,r)):Uint8Array.prototype.set.call(l,t,r);else{if(!s.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(l,r)}r+=t.length}return l},s.byteLength=g,s.prototype._isBuffer=!0,s.prototype.swap16=function(){const n=this.length;if(n%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<n;t+=2)m(this,t,t+1);return this},s.prototype.swap32=function(){const n=this.length;if(n%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<n;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},s.prototype.swap64=function(){const n=this.length;if(n%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<n;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},s.prototype.toString=function(){const n=this.length;return 0===n?"":0===arguments.length?S(this,0,n):y.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(n){if(!s.isBuffer(n))throw new TypeError("Argument must be a Buffer");return this===n||0===s.compare(this,n)},s.prototype.inspect=function(){let n="";const e=t.h2;return n=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(n+=" ... "),"<Buffer "+n+">"},u&&(s.prototype[u]=s.prototype.inspect),s.prototype.compare=function(n,t,e,l,r){if(V(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),!s.isBuffer(n))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof n);if(void 0===t&&(t=0),void 0===e&&(e=n?n.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),t<0||e>n.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&t>=e)return 0;if(l>=r)return-1;if(t>=e)return 1;if(this===n)return 0;let u=(r>>>=0)-(l>>>=0),i=(e>>>=0)-(t>>>=0);const o=Math.min(u,i),a=this.slice(l,r),c=n.slice(t,e);for(let s=0;s<o;++s)if(a[s]!==c[s]){u=a[s],i=c[s];break}return u<i?-1:i<u?1:0},s.prototype.includes=function(n,t,e){return-1!==this.indexOf(n,t,e)},s.prototype.indexOf=function(n,t,e){return b(this,n,t,e,!0)},s.prototype.lastIndexOf=function(n,t,e){return b(this,n,t,e,!1)},s.prototype.write=function(n,t,e,l){if(void 0===t)l="utf8",e=this.length,t=0;else if(void 0===e&&"string"==typeof t)l=t,e=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(e)?(e>>>=0,void 0===l&&(l="utf8")):(l=e,e=void 0)}const r=this.length-t;if((void 0===e||e>r)&&(e=r),n.length>0&&(e<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");let u=!1;for(;;)switch(l){case"hex":return v(this,n,t,e);case"utf8":case"utf-8":return k(this,n,t,e);case"ascii":case"latin1":case"binary":return I(this,n,t,e);case"base64":return A(this,n,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,n,t,e);default:if(u)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),u=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function x(n,t,e){let l="";e=Math.min(n.length,e);for(let r=t;r<e;++r)l+=String.fromCharCode(127&n[r]);return l}function B(n,t,e){let l="";e=Math.min(n.length,e);for(let r=t;r<e;++r)l+=String.fromCharCode(n[r]);return l}function P(n,t,e){const l=n.length;(!t||t<0)&&(t=0),(!e||e<0||e>l)&&(e=l);let r="";for(let u=t;u<e;++u)r+=Y[n[u]];return r}function R(n,t,e){const l=n.slice(t,e);let r="";for(let u=0;u<l.length-1;u+=2)r+=String.fromCharCode(l[u]+256*l[u+1]);return r}function O(n,t,e){if(n%1!=0||n<0)throw new RangeError("offset is not uint");if(n+t>e)throw new RangeError("Trying to access beyond buffer length")}function M(n,t,e,l,r,u){if(!s.isBuffer(n))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<u)throw new RangeError('"value" argument is out of bounds');if(e+l>n.length)throw new RangeError("Index out of range")}function C(n,t,e,l,r){j(t,l,r,n,e,7);let u=Number(t&BigInt(4294967295));n[e++]=u,u>>=8,n[e++]=u,u>>=8,n[e++]=u,u>>=8,n[e++]=u;let i=Number(t>>BigInt(32)&BigInt(4294967295));return n[e++]=i,i>>=8,n[e++]=i,i>>=8,n[e++]=i,i>>=8,n[e++]=i,e}function U(n,t,e,l,r){j(t,l,r,n,e,7);let u=Number(t&BigInt(4294967295));n[e+7]=u,u>>=8,n[e+6]=u,u>>=8,n[e+5]=u,u>>=8,n[e+4]=u;let i=Number(t>>BigInt(32)&BigInt(4294967295));return n[e+3]=i,i>>=8,n[e+2]=i,i>>=8,n[e+1]=i,i>>=8,n[e]=i,e+8}function L(n,t,e,l,r,u){if(e+l>n.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function N(n,t,e,l,u){return t=+t,e>>>=0,u||L(n,0,e,4),r.write(n,t,e,l,23,4),e+4}function z(n,t,e,l,u){return t=+t,e>>>=0,u||L(n,0,e,8),r.write(n,t,e,l,52,8),e+8}s.prototype.slice=function(n,t){const e=this.length;(n=~~n)<0?(n+=e)<0&&(n=0):n>e&&(n=e),(t=void 0===t?e:~~t)<0?(t+=e)<0&&(t=0):t>e&&(t=e),t<n&&(t=n);const l=this.subarray(n,t);return Object.setPrototypeOf(l,s.prototype),l},s.prototype.readUintLE=s.prototype.readUIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n],r=1,u=0;for(;++u<t&&(r*=256);)l+=this[n+u]*r;return l},s.prototype.readUintBE=s.prototype.readUIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n+--t],r=1;for(;t>0&&(r*=256);)l+=this[n+--t]*r;return l},s.prototype.readUint8=s.prototype.readUInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),this[n]},s.prototype.readUint16LE=s.prototype.readUInt16LE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]|this[n+1]<<8},s.prototype.readUint16BE=s.prototype.readUInt16BE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]<<8|this[n+1]},s.prototype.readUint32LE=s.prototype.readUInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),(this[n]|this[n+1]<<8|this[n+2]<<16)+16777216*this[n+3]},s.prototype.readUint32BE=s.prototype.readUInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),16777216*this[n]+(this[n+1]<<16|this[n+2]<<8|this[n+3])},s.prototype.readBigUInt64LE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=t+256*this[++n]+65536*this[++n]+this[++n]*2**24,r=this[++n]+256*this[++n]+65536*this[++n]+e*2**24;return BigInt(l)+(BigInt(r)<<BigInt(32))})),s.prototype.readBigUInt64BE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=t*2**24+65536*this[++n]+256*this[++n]+this[++n],r=this[++n]*2**24+65536*this[++n]+256*this[++n]+e;return(BigInt(l)<<BigInt(32))+BigInt(r)})),s.prototype.readIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=this[n],r=1,u=0;for(;++u<t&&(r*=256);)l+=this[n+u]*r;return r*=128,l>=r&&(l-=Math.pow(2,8*t)),l},s.prototype.readIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);let l=t,r=1,u=this[n+--l];for(;l>0&&(r*=256);)u+=this[n+--l]*r;return r*=128,u>=r&&(u-=Math.pow(2,8*t)),u},s.prototype.readInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),128&this[n]?-1*(255-this[n]+1):this[n]},s.prototype.readInt16LE=function(n,t){n>>>=0,t||O(n,2,this.length);const e=this[n]|this[n+1]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt16BE=function(n,t){n>>>=0,t||O(n,2,this.length);const e=this[n+1]|this[n]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]|this[n+1]<<8|this[n+2]<<16|this[n+3]<<24},s.prototype.readInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]<<24|this[n+1]<<16|this[n+2]<<8|this[n+3]},s.prototype.readBigInt64LE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=this[n+4]+256*this[n+5]+65536*this[n+6]+(e<<24);return(BigInt(l)<<BigInt(32))+BigInt(t+256*this[++n]+65536*this[++n]+this[++n]*2**24)})),s.prototype.readBigInt64BE=J((function(n){F(n>>>=0,"offset");const t=this[n],e=this[n+7];void 0!==t&&void 0!==e||q(n,this.length-8);const l=(t<<24)+65536*this[++n]+256*this[++n]+this[++n];return(BigInt(l)<<BigInt(32))+BigInt(this[++n]*2**24+65536*this[++n]+256*this[++n]+e)})),s.prototype.readFloatLE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!0,23,4)},s.prototype.readFloatBE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!1,23,4)},s.prototype.readDoubleLE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!0,52,8)},s.prototype.readDoubleBE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!1,52,8)},s.prototype.writeUintLE=s.prototype.writeUIntLE=function(n,t,e,l){if(n=+n,t>>>=0,e>>>=0,!l){M(this,n,t,e,Math.pow(2,8*e)-1,0)}let r=1,u=0;for(this[t]=255&n;++u<e&&(r*=256);)this[t+u]=n/r&255;return t+e},s.prototype.writeUintBE=s.prototype.writeUIntBE=function(n,t,e,l){if(n=+n,t>>>=0,e>>>=0,!l){M(this,n,t,e,Math.pow(2,8*e)-1,0)}let r=e-1,u=1;for(this[t+r]=255&n;--r>=0&&(u*=256);)this[t+r]=n/u&255;return t+e},s.prototype.writeUint8=s.prototype.writeUInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,255,0),this[t]=255&n,t+1},s.prototype.writeUint16LE=s.prototype.writeUInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeUint16BE=s.prototype.writeUInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeUint32LE=s.prototype.writeUInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t+3]=n>>>24,this[t+2]=n>>>16,this[t+1]=n>>>8,this[t]=255&n,t+4},s.prototype.writeUint32BE=s.prototype.writeUInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeBigUInt64LE=J((function(n,t=0){return C(this,n,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeBigUInt64BE=J((function(n,t=0){return U(this,n,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeIntLE=function(n,t,e,l){if(n=+n,t>>>=0,!l){const l=Math.pow(2,8*e-1);M(this,n,t,e,l-1,-l)}let r=0,u=1,i=0;for(this[t]=255&n;++r<e&&(u*=256);)n<0&&0===i&&0!==this[t+r-1]&&(i=1),this[t+r]=(n/u>>0)-i&255;return t+e},s.prototype.writeIntBE=function(n,t,e,l){if(n=+n,t>>>=0,!l){const l=Math.pow(2,8*e-1);M(this,n,t,e,l-1,-l)}let r=e-1,u=1,i=0;for(this[t+r]=255&n;--r>=0&&(u*=256);)n<0&&0===i&&0!==this[t+r+1]&&(i=1),this[t+r]=(n/u>>0)-i&255;return t+e},s.prototype.writeInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,127,-128),n<0&&(n=255+n+1),this[t]=255&n,t+1},s.prototype.writeInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),this[t]=255&n,this[t+1]=n>>>8,this[t+2]=n>>>16,this[t+3]=n>>>24,t+4},s.prototype.writeInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),n<0&&(n=4294967295+n+1),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeBigInt64LE=J((function(n,t=0){return C(this,n,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeBigInt64BE=J((function(n,t=0){return U(this,n,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeFloatLE=function(n,t,e){return N(this,n,t,!0,e)},s.prototype.writeFloatBE=function(n,t,e){return N(this,n,t,!1,e)},s.prototype.writeDoubleLE=function(n,t,e){return z(this,n,t,!0,e)},s.prototype.writeDoubleBE=function(n,t,e){return z(this,n,t,!1,e)},s.prototype.copy=function(n,t,e,l){if(!s.isBuffer(n))throw new TypeError("argument should be a Buffer");if(e||(e=0),l||0===l||(l=this.length),t>=n.length&&(t=n.length),t||(t=0),l>0&&l<e&&(l=e),l===e)return 0;if(0===n.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),n.length-t<l-e&&(l=n.length-t+e);const r=l-e;return this===n&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,e,l):Uint8Array.prototype.set.call(n,this.subarray(e,l),t),r},s.prototype.fill=function(n,t,e,l){if("string"==typeof n){if("string"==typeof t?(l=t,t=0,e=this.length):"string"==typeof e&&(l=e,e=this.length),void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!s.isEncoding(l))throw new TypeError("Unknown encoding: "+l);if(1===n.length){const t=n.charCodeAt(0);("utf8"===l&&t<128||"latin1"===l)&&(n=t)}}else"number"==typeof n?n&=255:"boolean"==typeof n&&(n=Number(n));if(t<0||this.length<t||this.length<e)throw new RangeError("Out of range index");if(e<=t)return this;let r;if(t>>>=0,e=void 0===e?this.length:e>>>0,n||(n=0),"number"==typeof n)for(r=t;r<e;++r)this[r]=n;else{const u=s.isBuffer(n)?n:s.from(n,l),i=u.length;if(0===i)throw new TypeError('The value "'+n+'" is invalid for argument "value"');for(r=0;r<e-t;++r)this[r+t]=u[r%i]}return this};const K={};function D(n,t,e){K[n]=class extends e{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${n}]`,this.stack,delete this.name}get code(){return n}set code(n){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:n,writable:!0})}toString(){return`${this.name} [${n}]: ${this.message}`}}}function W(n){let t="",e=n.length;const l="-"===n[0]?1:0;for(;e>=l+4;e-=3)t=`_${n.slice(e-3,e)}${t}`;return`${n.slice(0,e)}${t}`}function j(n,t,e,l,r,u){if(n>e||n<t){const l="bigint"==typeof t?"n":"";let r;throw r=u>3?0===t||t===BigInt(0)?`>= 0${l} and < 2${l} ** ${8*(u+1)}${l}`:`>= -(2${l} ** ${8*(u+1)-1}${l}) and < 2 ** ${8*(u+1)-1}${l}`:`>= ${t}${l} and <= ${e}${l}`,new K.ERR_OUT_OF_RANGE("value",r,n)}!function(n,t,e){F(t,"offset"),void 0!==n[t]&&void 0!==n[t+e]||q(t,n.length-(e+1))}(l,r,u)}function F(n,t){if("number"!=typeof n)throw new K.ERR_INVALID_ARG_TYPE(t,"number",n)}function q(n,t,e){if(Math.floor(n)!==n)throw F(n,e),new K.ERR_OUT_OF_RANGE(e||"offset","an integer",n);if(t<0)throw new K.ERR_BUFFER_OUT_OF_BOUNDS;throw new K.ERR_OUT_OF_RANGE(e||"offset",`>= ${e?1:0} and <= ${t}`,n)}D("ERR_BUFFER_OUT_OF_BOUNDS",(function(n){return n?`${n} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),D("ERR_INVALID_ARG_TYPE",(function(n,t){return`The "${n}" argument must be of type number. Received type ${typeof t}`}),TypeError),D("ERR_OUT_OF_RANGE",(function(n,t,e){let l=`The value of "${n}" is out of range.`,r=e;return Number.isInteger(e)&&Math.abs(e)>2**32?r=W(String(e)):"bigint"==typeof e&&(r=String(e),(e>BigInt(2)**BigInt(32)||e<-(BigInt(2)**BigInt(32)))&&(r=W(r)),r+="n"),l+=` It must be ${t}. Received ${r}`,l}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function G(n,t){let e;t=t||1/0;const l=n.length;let r=null;const u=[];for(let i=0;i<l;++i){if(e=n.charCodeAt(i),e>55295&&e<57344){if(!r){if(e>56319){(t-=3)>-1&&u.push(239,191,189);continue}if(i+1===l){(t-=3)>-1&&u.push(239,191,189);continue}r=e;continue}if(e<56320){(t-=3)>-1&&u.push(239,191,189),r=e;continue}e=65536+(r-55296<<10|e-56320)}else r&&(t-=3)>-1&&u.push(239,191,189);if(r=null,e<128){if((t-=1)<0)break;u.push(e)}else if(e<2048){if((t-=2)<0)break;u.push(e>>6|192,63&e|128)}else if(e<65536){if((t-=3)<0)break;u.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;u.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return u}function $(n){return l.toByteArray(function(n){if((n=(n=n.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;n.length%4!=0;)n+="=";return n}(n))}function Z(n,t,e,l){let r;for(r=0;r<l&&!(r+e>=t.length||r>=n.length);++r)t[r+e]=n[r];return r}function V(n,t){return n instanceof t||null!=n&&null!=n.constructor&&null!=n.constructor.name&&n.constructor.name===t.name}function X(n){return n!=n}const Y=function(){const n="0123456789abcdef",t=new Array(256);for(let e=0;e<16;++e){const l=16*e;for(let r=0;r<16;++r)t[l+r]=n[e]+n[r]}return t}();function J(n){return"undefined"==typeof BigInt?Q:n}function Q(){throw new Error("BigInt not supported")}},89644:(n,t,e)=>{n.exports=e(25644)},70353:(n,t,e)=>{"use strict";var l=e(93044),r=e(86955),u=e(92233),i=e(68030),o=e(97948),s=e(51875),a=e(60842),c=e(98560),h=e(21218),d=e(68047),f=e(10738);n.exports=function(n){return new Promise((function(t,e){var p,g=n.data,y=n.headers,m=n.responseType;function b(){n.cancelToken&&n.cancelToken.unsubscribe(p),n.signal&&n.signal.removeEventListener("abort",p)}l.isFormData(g)&&l.isStandardBrowserEnv()&&delete y["Content-Type"];var w=new XMLHttpRequest;if(n.auth){var v=n.auth.username||"",k=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";y.Authorization="Basic "+btoa(v+":"+k)}var I=o(n.baseURL,n.url);function A(){if(w){var l="getAllResponseHeaders"in w?s(w.getAllResponseHeaders()):null,u={data:m&&"text"!==m&&"json"!==m?w.response:w.responseText,status:w.status,statusText:w.statusText,headers:l,config:n,request:w};r((function(n){t(n),b()}),(function(n){e(n),b()}),u),w=null}}if(w.open(n.method.toUpperCase(),i(I,n.params,n.paramsSerializer),!0),w.timeout=n.timeout,"onloadend"in w?w.onloadend=A:w.onreadystatechange=function(){w&&4===w.readyState&&(0!==w.status||w.responseURL&&0===w.responseURL.indexOf("file:"))&&setTimeout(A)},w.onabort=function(){w&&(e(new h("Request aborted",h.ECONNABORTED,n,w)),w=null)},w.onerror=function(){e(new h("Network Error",h.ERR_NETWORK,n,w,w)),w=null},w.ontimeout=function(){var t=n.timeout?"timeout of "+n.timeout+"ms exceeded":"timeout exceeded",l=n.transitional||c;n.timeoutErrorMessage&&(t=n.timeoutErrorMessage),e(new h(t,l.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,n,w)),w=null},l.isStandardBrowserEnv()){var _=(n.withCredentials||a(I))&&n.xsrfCookieName?u.read(n.xsrfCookieName):void 0;_&&(y[n.xsrfHeaderName]=_)}"setRequestHeader"in w&&l.forEach(y,(function(n,t){void 0===g&&"content-type"===t.toLowerCase()?delete y[t]:w.setRequestHeader(t,n)})),l.isUndefined(n.withCredentials)||(w.withCredentials=!!n.withCredentials),m&&"json"!==m&&(w.responseType=n.responseType),"function"==typeof n.onDownloadProgress&&w.addEventListener("progress",n.onDownloadProgress),"function"==typeof n.onUploadProgress&&w.upload&&w.upload.addEventListener("progress",n.onUploadProgress),(n.cancelToken||n.signal)&&(p=function(n){w&&(e(!n||n&&n.type?new d:n),w.abort(),w=null)},n.cancelToken&&n.cancelToken.subscribe(p),n.signal&&(n.signal.aborted?p():n.signal.addEventListener("abort",p))),g||(g=null);var E=f(I);E&&-1===["http","https","file"].indexOf(E)?e(new h("Unsupported protocol "+E+":",h.ERR_BAD_REQUEST,n)):w.send(g)}))}},25644:(n,t,e)=>{"use strict";var l=e(93044),r=e(73644),u=e(62215),i=e(92937);var o=function n(t){var e=new u(t),o=r(u.prototype.request,e);return l.extend(o,u.prototype,e),l.extend(o,e),o.create=function(e){return n(i(t,e))},o}(e(10663));o.Axios=u,o.CanceledError=e(68047),o.CancelToken=e(34089),o.isCancel=e(98041),o.VERSION=e(29241).version,o.toFormData=e(49027),o.AxiosError=e(21218),o.Cancel=o.CanceledError,o.all=function(n){return Promise.all(n)},o.spread=e(70783),o.isAxiosError=e(65587),n.exports=o,n.exports.default=o},34089:(n,t,e)=>{"use strict";var l=e(68047);function r(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(n){t=n}));var e=this;this.promise.then((function(n){if(e._listeners){var t,l=e._listeners.length;for(t=0;t<l;t++)e._listeners[t](n);e._listeners=null}})),this.promise.then=function(n){var t,l=new Promise((function(n){e.subscribe(n),t=n})).then(n);return l.cancel=function(){e.unsubscribe(t)},l},n((function(n){e.reason||(e.reason=new l(n),t(e.reason))}))}r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.prototype.subscribe=function(n){this.reason?n(this.reason):this._listeners?this._listeners.push(n):this._listeners=[n]},r.prototype.unsubscribe=function(n){if(this._listeners){var t=this._listeners.indexOf(n);-1!==t&&this._listeners.splice(t,1)}},r.source=function(){var n;return{token:new r((function(t){n=t})),cancel:n}},n.exports=r},68047:(n,t,e)=>{"use strict";var l=e(21218);function r(n){l.call(this,null==n?"canceled":n,l.ERR_CANCELED),this.name="CanceledError"}e(93044).inherits(r,l,{__CANCEL__:!0}),n.exports=r},98041:n=>{"use strict";n.exports=function(n){return!(!n||!n.__CANCEL__)}},62215:(n,t,e)=>{"use strict";var l=e(93044),r=e(68030),u=e(946),i=e(6895),o=e(92937),s=e(97948),a=e(17525),c=a.validators;function h(n){this.defaults=n,this.interceptors={request:new u,response:new u}}h.prototype.request=function(n,t){"string"==typeof n?(t=t||{}).url=n:t=n||{},(t=o(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var e=t.transitional;void 0!==e&&a.assertOptions(e,{silentJSONParsing:c.transitional(c.boolean),forcedJSONParsing:c.transitional(c.boolean),clarifyTimeoutError:c.transitional(c.boolean)},!1);var l=[],r=!0;this.interceptors.request.forEach((function(n){"function"==typeof n.runWhen&&!1===n.runWhen(t)||(r=r&&n.synchronous,l.unshift(n.fulfilled,n.rejected))}));var u,s=[];if(this.interceptors.response.forEach((function(n){s.push(n.fulfilled,n.rejected)})),!r){var h=[i,void 0];for(Array.prototype.unshift.apply(h,l),h=h.concat(s),u=Promise.resolve(t);h.length;)u=u.then(h.shift(),h.shift());return u}for(var d=t;l.length;){var f=l.shift(),p=l.shift();try{d=f(d)}catch(g){p(g);break}}try{u=i(d)}catch(g){return Promise.reject(g)}for(;s.length;)u=u.then(s.shift(),s.shift());return u},h.prototype.getUri=function(n){n=o(this.defaults,n);var t=s(n.baseURL,n.url);return r(t,n.params,n.paramsSerializer)},l.forEach(["delete","get","head","options"],(function(n){h.prototype[n]=function(t,e){return this.request(o(e||{},{method:n,url:t,data:(e||{}).data}))}})),l.forEach(["post","put","patch"],(function(n){function t(t){return function(e,l,r){return this.request(o(r||{},{method:n,headers:t?{"Content-Type":"multipart/form-data"}:{},url:e,data:l}))}}h.prototype[n]=t(),h.prototype[n+"Form"]=t(!0)})),n.exports=h},21218:(n,t,e)=>{"use strict";var l=e(93044);function r(n,t,e,l,r){Error.call(this),this.message=n,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),l&&(this.request=l),r&&(this.response=r)}l.inherits(r,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var u=r.prototype,i={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach((function(n){i[n]={value:n}})),Object.defineProperties(r,i),Object.defineProperty(u,"isAxiosError",{value:!0}),r.from=function(n,t,e,i,o,s){var a=Object.create(u);return l.toFlatObject(n,a,(function(n){return n!==Error.prototype})),r.call(a,n.message,t,e,i,o),a.name=n.name,s&&Object.assign(a,s),a},n.exports=r},946:(n,t,e)=>{"use strict";var l=e(93044);function r(){this.handlers=[]}r.prototype.use=function(n,t,e){return this.handlers.push({fulfilled:n,rejected:t,synchronous:!!e&&e.synchronous,runWhen:e?e.runWhen:null}),this.handlers.length-1},r.prototype.eject=function(n){this.handlers[n]&&(this.handlers[n]=null)},r.prototype.forEach=function(n){l.forEach(this.handlers,(function(t){null!==t&&n(t)}))},n.exports=r},97948:(n,t,e)=>{"use strict";var l=e(99192),r=e(48762);n.exports=function(n,t){return n&&!l(t)?r(n,t):t}},6895:(n,t,e)=>{"use strict";var l=e(93044),r=e(38556),u=e(98041),i=e(10663),o=e(68047);function s(n){if(n.cancelToken&&n.cancelToken.throwIfRequested(),n.signal&&n.signal.aborted)throw new o}n.exports=function(n){return s(n),n.headers=n.headers||{},n.data=r.call(n,n.data,n.headers,n.transformRequest),n.headers=l.merge(n.headers.common||{},n.headers[n.method]||{},n.headers),l.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete n.headers[t]})),(n.adapter||i.adapter)(n).then((function(t){return s(n),t.data=r.call(n,t.data,t.headers,n.transformResponse),t}),(function(t){return u(t)||(s(n),t&&t.response&&(t.response.data=r.call(n,t.response.data,t.response.headers,n.transformResponse))),Promise.reject(t)}))}},92937:(n,t,e)=>{"use strict";var l=e(93044);n.exports=function(n,t){t=t||{};var e={};function r(n,t){return l.isPlainObject(n)&&l.isPlainObject(t)?l.merge(n,t):l.isPlainObject(t)?l.merge({},t):l.isArray(t)?t.slice():t}function u(e){return l.isUndefined(t[e])?l.isUndefined(n[e])?void 0:r(void 0,n[e]):r(n[e],t[e])}function i(n){if(!l.isUndefined(t[n]))return r(void 0,t[n])}function o(e){return l.isUndefined(t[e])?l.isUndefined(n[e])?void 0:r(void 0,n[e]):r(void 0,t[e])}function s(e){return e in t?r(n[e],t[e]):e in n?r(void 0,n[e]):void 0}var a={url:i,method:i,data:i,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:s};return l.forEach(Object.keys(n).concat(Object.keys(t)),(function(n){var t=a[n]||u,r=t(n);l.isUndefined(r)&&t!==s||(e[n]=r)})),e}},86955:(n,t,e)=>{"use strict";var l=e(21218);n.exports=function(n,t,e){var r=e.config.validateStatus;e.status&&r&&!r(e.status)?t(new l("Request failed with status code "+e.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e)):n(e)}},38556:(n,t,e)=>{"use strict";var l=e(93044),r=e(10663);n.exports=function(n,t,e){var u=this||r;return l.forEach(e,(function(e){n=e.call(u,n,t)})),n}},10663:(n,t,e)=>{"use strict";var l=e(93044),r=e(98868),u=e(21218),i=e(98560),o=e(49027),s={"Content-Type":"application/x-www-form-urlencoded"};function a(n,t){!l.isUndefined(n)&&l.isUndefined(n["Content-Type"])&&(n["Content-Type"]=t)}var c,h={transitional:i,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=e(70353)),c),transformRequest:[function(n,t){if(r(t,"Accept"),r(t,"Content-Type"),l.isFormData(n)||l.isArrayBuffer(n)||l.isBuffer(n)||l.isStream(n)||l.isFile(n)||l.isBlob(n))return n;if(l.isArrayBufferView(n))return n.buffer;if(l.isURLSearchParams(n))return a(t,"application/x-www-form-urlencoded;charset=utf-8"),n.toString();var e,u=l.isObject(n),i=t&&t["Content-Type"];if((e=l.isFileList(n))||u&&"multipart/form-data"===i){var s=this.env&&this.env.FormData;return o(e?{"files[]":n}:n,s&&new s)}return u||"application/json"===i?(a(t,"application/json"),function(n,t,e){if(l.isString(n))try{return(t||JSON.parse)(n),l.trim(n)}catch(r){if("SyntaxError"!==r.name)throw r}return(e||JSON.stringify)(n)}(n)):n}],transformResponse:[function(n){var t=this.transitional||h.transitional,e=t&&t.silentJSONParsing,r=t&&t.forcedJSONParsing,i=!e&&"json"===this.responseType;if(i||r&&l.isString(n)&&n.length)try{return JSON.parse(n)}catch(o){if(i){if("SyntaxError"===o.name)throw u.from(o,u.ERR_BAD_RESPONSE,this,null,this.response);throw o}}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:e(84684)},validateStatus:function(n){return n>=200&&n<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};l.forEach(["delete","get","head"],(function(n){h.headers[n]={}})),l.forEach(["post","put","patch"],(function(n){h.headers[n]=l.merge(s)})),n.exports=h},98560:n=>{"use strict";n.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},29241:n=>{n.exports={version:"0.27.2"}},73644:n=>{"use strict";n.exports=function(n,t){return function(){for(var e=new Array(arguments.length),l=0;l<e.length;l++)e[l]=arguments[l];return n.apply(t,e)}}},68030:(n,t,e)=>{"use strict";var l=e(93044);function r(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}n.exports=function(n,t,e){if(!t)return n;var u;if(e)u=e(t);else if(l.isURLSearchParams(t))u=t.toString();else{var i=[];l.forEach(t,(function(n,t){null!=n&&(l.isArray(n)?t+="[]":n=[n],l.forEach(n,(function(n){l.isDate(n)?n=n.toISOString():l.isObject(n)&&(n=JSON.stringify(n)),i.push(r(t)+"="+r(n))})))})),u=i.join("&")}if(u){var o=n.indexOf("#");-1!==o&&(n=n.slice(0,o)),n+=(-1===n.indexOf("?")?"?":"&")+u}return n}},48762:n=>{"use strict";n.exports=function(n,t){return t?n.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):n}},92233:(n,t,e)=>{"use strict";var l=e(93044);n.exports=l.isStandardBrowserEnv()?{write:function(n,t,e,r,u,i){var o=[];o.push(n+"="+encodeURIComponent(t)),l.isNumber(e)&&o.push("expires="+new Date(e).toGMTString()),l.isString(r)&&o.push("path="+r),l.isString(u)&&o.push("domain="+u),!0===i&&o.push("secure"),document.cookie=o.join("; ")},read:function(n){var t=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(n){this.write(n,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},99192:n=>{"use strict";n.exports=function(n){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(n)}},65587:(n,t,e)=>{"use strict";var l=e(93044);n.exports=function(n){return l.isObject(n)&&!0===n.isAxiosError}},60842:(n,t,e)=>{"use strict";var l=e(93044);n.exports=l.isStandardBrowserEnv()?function(){var n,t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a");function r(n){var l=n;return t&&(e.setAttribute("href",l),l=e.href),e.setAttribute("href",l),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\?/,""):"",hash:e.hash?e.hash.replace(/^#/,""):"",hostname:e.hostname,port:e.port,pathname:"/"===e.pathname.charAt(0)?e.pathname:"/"+e.pathname}}return n=r(window.location.href),function(t){var e=l.isString(t)?r(t):t;return e.protocol===n.protocol&&e.host===n.host}}():function(){return!0}},98868:(n,t,e)=>{"use strict";var l=e(93044);n.exports=function(n,t){l.forEach(n,(function(e,l){l!==t&&l.toUpperCase()===t.toUpperCase()&&(n[t]=e,delete n[l])}))}},84684:n=>{n.exports=null},51875:(n,t,e)=>{"use strict";var l=e(93044),r=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];n.exports=function(n){var t,e,u,i={};return n?(l.forEach(n.split("\n"),(function(n){if(u=n.indexOf(":"),t=l.trim(n.substr(0,u)).toLowerCase(),e=l.trim(n.substr(u+1)),t){if(i[t]&&r.indexOf(t)>=0)return;i[t]="set-cookie"===t?(i[t]?i[t]:[]).concat([e]):i[t]?i[t]+", "+e:e}})),i):i}},10738:n=>{"use strict";n.exports=function(n){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(n);return t&&t[1]||""}},70783:n=>{"use strict";n.exports=function(n){return function(t){return n.apply(null,t)}}},49027:(n,t,e)=>{"use strict";var l=e(93044);n.exports=function(n,t){t=t||new FormData;var e=[];function r(n){return null===n?"":l.isDate(n)?n.toISOString():l.isArrayBuffer(n)||l.isTypedArray(n)?"function"==typeof Blob?new Blob([n]):Buffer.from(n):n}return function n(u,i){if(l.isPlainObject(u)||l.isArray(u)){if(-1!==e.indexOf(u))throw Error("Circular reference detected in "+i);e.push(u),l.forEach(u,(function(e,u){if(!l.isUndefined(e)){var o,s=i?i+"."+u:u;if(e&&!i&&"object"==typeof e)if(l.endsWith(u,"{}"))e=JSON.stringify(e);else if(l.endsWith(u,"[]")&&(o=l.toArray(e)))return void o.forEach((function(n){!l.isUndefined(n)&&t.append(s,r(n))}));n(e,s)}})),e.pop()}else t.append(i,r(u))}(n),t}},17525:(n,t,e)=>{"use strict";var l=e(29241).version,r=e(21218),u={};["object","boolean","number","function","string","symbol"].forEach((function(n,t){u[n]=function(e){return typeof e===n||"a"+(t<1?"n ":" ")+n}}));var i={};u.transitional=function(n,t,e){function u(n,t){return"[Axios v"+l+"] Transitional option '"+n+"'"+t+(e?". "+e:"")}return function(e,l,o){if(!1===n)throw new r(u(l," has been removed"+(t?" in "+t:"")),r.ERR_DEPRECATED);return t&&!i[l]&&(i[l]=!0,console.warn(u(l," has been deprecated since v"+t+" and will be removed in the near future"))),!n||n(e,l,o)}},n.exports={assertOptions:function(n,t,e){if("object"!=typeof n)throw new r("options must be an object",r.ERR_BAD_OPTION_VALUE);for(var l=Object.keys(n),u=l.length;u-- >0;){var i=l[u],o=t[i];if(o){var s=n[i],a=void 0===s||o(s,i,n);if(!0!==a)throw new r("option "+i+" must be "+a,r.ERR_BAD_OPTION_VALUE)}else if(!0!==e)throw new r("Unknown option "+i,r.ERR_BAD_OPTION)}},validators:u}},93044:(n,t,e)=>{"use strict";var l,r=e(73644),u=Object.prototype.toString,i=(l=Object.create(null),function(n){var t=u.call(n);return l[t]||(l[t]=t.slice(8,-1).toLowerCase())});function o(n){return n=n.toLowerCase(),function(t){return i(t)===n}}function s(n){return Array.isArray(n)}function a(n){return void 0===n}var c=o("ArrayBuffer");function h(n){return null!==n&&"object"==typeof n}function d(n){if("object"!==i(n))return!1;var t=Object.getPrototypeOf(n);return null===t||t===Object.prototype}var f=o("Date"),p=o("File"),g=o("Blob"),y=o("FileList");function m(n){return"[object Function]"===u.call(n)}var b=o("URLSearchParams");function w(n,t){if(null!=n)if("object"!=typeof n&&(n=[n]),s(n))for(var e=0,l=n.length;e<l;e++)t.call(null,n[e],e,n);else for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.call(null,n[r],r,n)}var v,k=(v="undefined"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array),function(n){return v&&n instanceof v});n.exports={isArray:s,isArrayBuffer:c,isBuffer:function(n){return null!==n&&!a(n)&&null!==n.constructor&&!a(n.constructor)&&"function"==typeof n.constructor.isBuffer&&n.constructor.isBuffer(n)},isFormData:function(n){var t="[object FormData]";return n&&("function"==typeof FormData&&n instanceof FormData||u.call(n)===t||m(n.toString)&&n.toString()===t)},isArrayBufferView:function(n){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&c(n.buffer)},isString:function(n){return"string"==typeof n},isNumber:function(n){return"number"==typeof n},isObject:h,isPlainObject:d,isUndefined:a,isDate:f,isFile:p,isBlob:g,isFunction:m,isStream:function(n){return h(n)&&m(n.pipe)},isURLSearchParams:b,isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:w,merge:function n(){var t={};function e(e,l){d(t[l])&&d(e)?t[l]=n(t[l],e):d(e)?t[l]=n({},e):s(e)?t[l]=e.slice():t[l]=e}for(var l=0,r=arguments.length;l<r;l++)w(arguments[l],e);return t},extend:function(n,t,e){return w(t,(function(t,l){n[l]=e&&"function"==typeof t?r(t,e):t})),n},trim:function(n){return n.trim?n.trim():n.replace(/^\s+|\s+$/g,"")},stripBOM:function(n){return 65279===n.charCodeAt(0)&&(n=n.slice(1)),n},inherits:function(n,t,e,l){n.prototype=Object.create(t.prototype,l),n.prototype.constructor=n,e&&Object.assign(n.prototype,e)},toFlatObject:function(n,t,e){var l,r,u,i={};t=t||{};do{for(r=(l=Object.getOwnPropertyNames(n)).length;r-- >0;)i[u=l[r]]||(t[u]=n[u],i[u]=!0);n=Object.getPrototypeOf(n)}while(n&&(!e||e(n,t))&&n!==Object.prototype);return t},kindOf:i,kindOfTest:o,endsWith:function(n,t,e){n=String(n),(void 0===e||e>n.length)&&(e=n.length),e-=t.length;var l=n.indexOf(t,e);return-1!==l&&l===e},toArray:function(n){if(!n)return null;var t=n.length;if(a(t))return null;for(var e=new Array(t);t-- >0;)e[t]=n[t];return e},isTypedArray:k,isFileList:y}},18166:(n,t,e)=>{"use strict";var l=e(77834).Buffer;n.exports=function(n){if(n.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),e=0;e<t.length;e++)t[e]=255;for(var r=0;r<n.length;r++){var u=n.charAt(r),i=u.charCodeAt(0);if(255!==t[i])throw new TypeError(u+" is ambiguous");t[i]=r}var o=n.length,s=n.charAt(0),a=Math.log(o)/Math.log(256),c=Math.log(256)/Math.log(o);function h(n){if("string"!=typeof n)throw new TypeError("Expected String");if(0===n.length)return l.alloc(0);for(var e=0,r=0,u=0;n[e]===s;)r++,e++;for(var i=(n.length-e)*a+1>>>0,c=new Uint8Array(i);n[e];){var h=t[n.charCodeAt(e)];if(255===h)return;for(var d=0,f=i-1;(0!==h||d<u)&&-1!==f;f--,d++)h+=o*c[f]>>>0,c[f]=h%256>>>0,h=h/256>>>0;if(0!==h)throw new Error("Non-zero carry");u=d,e++}for(var p=i-u;p!==i&&0===c[p];)p++;var g=l.allocUnsafe(r+(i-p));g.fill(0,0,r);for(var y=r;p!==i;)g[y++]=c[p++];return g}return{encode:function(t){if((Array.isArray(t)||t instanceof Uint8Array)&&(t=l.from(t)),!l.isBuffer(t))throw new TypeError("Expected Buffer");if(0===t.length)return"";for(var e=0,r=0,u=0,i=t.length;u!==i&&0===t[u];)u++,e++;for(var a=(i-u)*c+1>>>0,h=new Uint8Array(a);u!==i;){for(var d=t[u],f=0,p=a-1;(0!==d||f<r)&&-1!==p;p--,f++)d+=256*h[p]>>>0,h[p]=d%o>>>0,d=d/o>>>0;if(0!==d)throw new Error("Non-zero carry");r=f,u++}for(var g=a-r;g!==a&&0===h[g];)g++;for(var y=s.repeat(e);g<a;++g)y+=n.charAt(h[g]);return y},decodeUnsafe:h,decode:function(n){var t=h(n);if(t)return t;throw new Error("Non-base"+o+" character")}}}},95766:(n,t)=>{"use strict";t.byteLength=function(n){var t=s(n),e=t[0],l=t[1];return 3*(e+l)/4-l},t.toByteArray=function(n){var t,e,u=s(n),i=u[0],o=u[1],a=new r(function(n,t,e){return 3*(t+e)/4-e}(0,i,o)),c=0,h=o>0?i-4:i;for(e=0;e<h;e+=4)t=l[n.charCodeAt(e)]<<18|l[n.charCodeAt(e+1)]<<12|l[n.charCodeAt(e+2)]<<6|l[n.charCodeAt(e+3)],a[c++]=t>>16&255,a[c++]=t>>8&255,a[c++]=255&t;2===o&&(t=l[n.charCodeAt(e)]<<2|l[n.charCodeAt(e+1)]>>4,a[c++]=255&t);1===o&&(t=l[n.charCodeAt(e)]<<10|l[n.charCodeAt(e+1)]<<4|l[n.charCodeAt(e+2)]>>2,a[c++]=t>>8&255,a[c++]=255&t);return a},t.fromByteArray=function(n){for(var t,l=n.length,r=l%3,u=[],i=16383,o=0,s=l-r;o<s;o+=i)u.push(a(n,o,o+i>s?s:o+i));1===r?(t=n[l-1],u.push(e[t>>2]+e[t<<4&63]+"==")):2===r&&(t=(n[l-2]<<8)+n[l-1],u.push(e[t>>10]+e[t>>4&63]+e[t<<2&63]+"="));return u.join("")};for(var e=[],l=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,o=u.length;i<o;++i)e[i]=u[i],l[u.charCodeAt(i)]=i;function s(n){var t=n.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=n.indexOf("=");return-1===e&&(e=t),[e,e===t?0:4-e%4]}function a(n,t,l){for(var r,u,i=[],o=t;o<l;o+=3)r=(n[o]<<16&16711680)+(n[o+1]<<8&65280)+(255&n[o+2]),i.push(e[(u=r)>>18&63]+e[u>>12&63]+e[u>>6&63]+e[63&u]);return i.join("")}l["-".charCodeAt(0)]=62,l["_".charCodeAt(0)]=63},41528:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toBigIntLE=function(n){{const t=Buffer.from(n);t.reverse();const e=t.toString("hex");return 0===e.length?BigInt(0):BigInt(`0x${e}`)}},t.toBigIntBE=function(n){{const t=n.toString("hex");return 0===t.length?BigInt(0):BigInt(`0x${t}`)}},t.toBufferLE=function(n,t){{const e=n.toString(16),l=Buffer.from(e.padStart(2*t,"0").slice(0,2*t),"hex");return l.reverse(),l}},t.toBufferBE=function(n,t){{const e=n.toString(16);return Buffer.from(e.padStart(2*t,"0").slice(0,2*t),"hex")}}},6391:function(n,t,e){var l;!function(r){"use strict";var u,i=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,o=Math.ceil,s=Math.floor,a="[BigNumber Error] ",c=a+"Number primitive has more than 15 significant digits: ",h=1e14,d=14,f=9007199254740991,p=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],g=1e7,y=1e9;function m(n){var t=0|n;return n>0||n===t?t:t-1}function b(n){for(var t,e,l=1,r=n.length,u=n[0]+"";l<r;){for(t=n[l++]+"",e=d-t.length;e--;t="0"+t);u+=t}for(r=u.length;48===u.charCodeAt(--r););return u.slice(0,r+1||1)}function w(n,t){var e,l,r=n.c,u=t.c,i=n.s,o=t.s,s=n.e,a=t.e;if(!i||!o)return null;if(e=r&&!r[0],l=u&&!u[0],e||l)return e?l?0:-o:i;if(i!=o)return i;if(e=i<0,l=s==a,!r||!u)return l?0:!r^e?1:-1;if(!l)return s>a^e?1:-1;for(o=(s=r.length)<(a=u.length)?s:a,i=0;i<o;i++)if(r[i]!=u[i])return r[i]>u[i]^e?1:-1;return s==a?0:s>a^e?1:-1}function v(n,t,e,l){if(n<t||n>e||n!==s(n))throw Error(a+(l||"Argument")+("number"==typeof n?n<t||n>e?" out of range: ":" not an integer: ":" not a primitive number: ")+String(n))}function k(n){var t=n.c.length-1;return m(n.e/d)==t&&n.c[t]%2!=0}function I(n,t){return(n.length>1?n.charAt(0)+"."+n.slice(1):n)+(t<0?"e":"e+")+t}function A(n,t,e){var l,r;if(t<0){for(r=e+".";++t;r+=e);n=r+n}else if(++t>(l=n.length)){for(r=e,t-=l;--t;r+=e);n+=r}else t<l&&(n=n.slice(0,t)+"."+n.slice(t));return n}u=function n(t){var e,l,r,u,_,E,S,T,x,B,P=q.prototype={constructor:q,toString:null,valueOf:null},R=new q(1),O=20,M=4,C=-7,U=21,L=-1e7,N=1e7,z=!1,K=1,D=0,W={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:"\xa0",suffix:""},j="0123456789abcdefghijklmnopqrstuvwxyz",F=!0;function q(n,t){var e,u,o,a,h,p,g,y,m=this;if(!(m instanceof q))return new q(n,t);if(null==t){if(n&&!0===n._isBigNumber)return m.s=n.s,void(!n.c||n.e>N?m.c=m.e=null:n.e<L?m.c=[m.e=0]:(m.e=n.e,m.c=n.c.slice()));if((p="number"==typeof n)&&0*n==0){if(m.s=1/n<0?(n=-n,-1):1,n===~~n){for(a=0,h=n;h>=10;h/=10,a++);return void(a>N?m.c=m.e=null:(m.e=a,m.c=[n]))}y=String(n)}else{if(!i.test(y=String(n)))return r(m,y,p);m.s=45==y.charCodeAt(0)?(y=y.slice(1),-1):1}(a=y.indexOf("."))>-1&&(y=y.replace(".","")),(h=y.search(/e/i))>0?(a<0&&(a=h),a+=+y.slice(h+1),y=y.substring(0,h)):a<0&&(a=y.length)}else{if(v(t,2,j.length,"Base"),10==t&&F)return Z(m=new q(n),O+m.e+1,M);if(y=String(n),p="number"==typeof n){if(0*n!=0)return r(m,y,p,t);if(m.s=1/n<0?(y=y.slice(1),-1):1,q.DEBUG&&y.replace(/^0\.0*|\./,"").length>15)throw Error(c+n)}else m.s=45===y.charCodeAt(0)?(y=y.slice(1),-1):1;for(e=j.slice(0,t),a=h=0,g=y.length;h<g;h++)if(e.indexOf(u=y.charAt(h))<0){if("."==u){if(h>a){a=g;continue}}else if(!o&&(y==y.toUpperCase()&&(y=y.toLowerCase())||y==y.toLowerCase()&&(y=y.toUpperCase()))){o=!0,h=-1,a=0;continue}return r(m,String(n),p,t)}p=!1,(a=(y=l(y,t,10,m.s)).indexOf("."))>-1?y=y.replace(".",""):a=y.length}for(h=0;48===y.charCodeAt(h);h++);for(g=y.length;48===y.charCodeAt(--g););if(y=y.slice(h,++g)){if(g-=h,p&&q.DEBUG&&g>15&&(n>f||n!==s(n)))throw Error(c+m.s*n);if((a=a-h-1)>N)m.c=m.e=null;else if(a<L)m.c=[m.e=0];else{if(m.e=a,m.c=[],h=(a+1)%d,a<0&&(h+=d),h<g){for(h&&m.c.push(+y.slice(0,h)),g-=d;h<g;)m.c.push(+y.slice(h,h+=d));h=d-(y=y.slice(h)).length}else h-=g;for(;h--;y+="0");m.c.push(+y)}}else m.c=[m.e=0]}function H(n,t,e,l){var r,u,i,o,s;if(null==e?e=M:v(e,0,8),!n.c)return n.toString();if(r=n.c[0],i=n.e,null==t)s=b(n.c),s=1==l||2==l&&(i<=C||i>=U)?I(s,i):A(s,i,"0");else if(u=(n=Z(new q(n),t,e)).e,o=(s=b(n.c)).length,1==l||2==l&&(t<=u||u<=C)){for(;o<t;s+="0",o++);s=I(s,u)}else if(t-=i,s=A(s,u,"0"),u+1>o){if(--t>0)for(s+=".";t--;s+="0");}else if((t+=u-o)>0)for(u+1==o&&(s+=".");t--;s+="0");return n.s<0&&r?"-"+s:s}function G(n,t){for(var e,l=1,r=new q(n[0]);l<n.length;l++){if(!(e=new q(n[l])).s){r=e;break}t.call(r,e)&&(r=e)}return r}function $(n,t,e){for(var l=1,r=t.length;!t[--r];t.pop());for(r=t[0];r>=10;r/=10,l++);return(e=l+e*d-1)>N?n.c=n.e=null:e<L?n.c=[n.e=0]:(n.e=e,n.c=t),n}function Z(n,t,e,l){var r,u,i,a,c,f,g,y=n.c,m=p;if(y){n:{for(r=1,a=y[0];a>=10;a/=10,r++);if((u=t-r)<0)u+=d,i=t,g=(c=y[f=0])/m[r-i-1]%10|0;else if((f=o((u+1)/d))>=y.length){if(!l)break n;for(;y.length<=f;y.push(0));c=g=0,r=1,i=(u%=d)-d+1}else{for(c=a=y[f],r=1;a>=10;a/=10,r++);g=(i=(u%=d)-d+r)<0?0:c/m[r-i-1]%10|0}if(l=l||t<0||null!=y[f+1]||(i<0?c:c%m[r-i-1]),l=e<4?(g||l)&&(0==e||e==(n.s<0?3:2)):g>5||5==g&&(4==e||l||6==e&&(u>0?i>0?c/m[r-i]:0:y[f-1])%10&1||e==(n.s<0?8:7)),t<1||!y[0])return y.length=0,l?(t-=n.e+1,y[0]=m[(d-t%d)%d],n.e=-t||0):y[0]=n.e=0,n;if(0==u?(y.length=f,a=1,f--):(y.length=f+1,a=m[d-u],y[f]=i>0?s(c/m[r-i]%m[i])*a:0),l)for(;;){if(0==f){for(u=1,i=y[0];i>=10;i/=10,u++);for(i=y[0]+=a,a=1;i>=10;i/=10,a++);u!=a&&(n.e++,y[0]==h&&(y[0]=1));break}if(y[f]+=a,y[f]!=h)break;y[f--]=0,a=1}for(u=y.length;0===y[--u];y.pop());}n.e>N?n.c=n.e=null:n.e<L&&(n.c=[n.e=0])}return n}function V(n){var t,e=n.e;return null===e?n.toString():(t=b(n.c),t=e<=C||e>=U?I(t,e):A(t,e,"0"),n.s<0?"-"+t:t)}return q.clone=n,q.ROUND_UP=0,q.ROUND_DOWN=1,q.ROUND_CEIL=2,q.ROUND_FLOOR=3,q.ROUND_HALF_UP=4,q.ROUND_HALF_DOWN=5,q.ROUND_HALF_EVEN=6,q.ROUND_HALF_CEIL=7,q.ROUND_HALF_FLOOR=8,q.EUCLID=9,q.config=q.set=function(n){var t,e;if(null!=n){if("object"!=typeof n)throw Error(a+"Object expected: "+n);if(n.hasOwnProperty(t="DECIMAL_PLACES")&&(v(e=n[t],0,y,t),O=e),n.hasOwnProperty(t="ROUNDING_MODE")&&(v(e=n[t],0,8,t),M=e),n.hasOwnProperty(t="EXPONENTIAL_AT")&&((e=n[t])&&e.pop?(v(e[0],-y,0,t),v(e[1],0,y,t),C=e[0],U=e[1]):(v(e,-y,y,t),C=-(U=e<0?-e:e))),n.hasOwnProperty(t="RANGE"))if((e=n[t])&&e.pop)v(e[0],-y,-1,t),v(e[1],1,y,t),L=e[0],N=e[1];else{if(v(e,-y,y,t),!e)throw Error(a+t+" cannot be zero: "+e);L=-(N=e<0?-e:e)}if(n.hasOwnProperty(t="CRYPTO")){if((e=n[t])!==!!e)throw Error(a+t+" not true or false: "+e);if(e){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw z=!e,Error(a+"crypto unavailable");z=e}else z=e}if(n.hasOwnProperty(t="MODULO_MODE")&&(v(e=n[t],0,9,t),K=e),n.hasOwnProperty(t="POW_PRECISION")&&(v(e=n[t],0,y,t),D=e),n.hasOwnProperty(t="FORMAT")){if("object"!=typeof(e=n[t]))throw Error(a+t+" not an object: "+e);W=e}if(n.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(e=n[t])||/^.?$|[+\-.\s]|(.).*\1/.test(e))throw Error(a+t+" invalid: "+e);F="0123456789"==e.slice(0,10),j=e}}return{DECIMAL_PLACES:O,ROUNDING_MODE:M,EXPONENTIAL_AT:[C,U],RANGE:[L,N],CRYPTO:z,MODULO_MODE:K,POW_PRECISION:D,FORMAT:W,ALPHABET:j}},q.isBigNumber=function(n){if(!n||!0!==n._isBigNumber)return!1;if(!q.DEBUG)return!0;var t,e,l=n.c,r=n.e,u=n.s;n:if("[object Array]"=={}.toString.call(l)){if((1===u||-1===u)&&r>=-y&&r<=y&&r===s(r)){if(0===l[0]){if(0===r&&1===l.length)return!0;break n}if((t=(r+1)%d)<1&&(t+=d),String(l[0]).length==t){for(t=0;t<l.length;t++)if((e=l[t])<0||e>=h||e!==s(e))break n;if(0!==e)return!0}}}else if(null===l&&null===r&&(null===u||1===u||-1===u))return!0;throw Error(a+"Invalid BigNumber: "+n)},q.maximum=q.max=function(){return G(arguments,P.lt)},q.minimum=q.min=function(){return G(arguments,P.gt)},q.random=(u=9007199254740992,_=Math.random()*u&2097151?function(){return s(Math.random()*u)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(n){var t,e,l,r,u,i=0,c=[],h=new q(R);if(null==n?n=O:v(n,0,y),r=o(n/d),z)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(r*=2));i<r;)(u=131072*t[i]+(t[i+1]>>>11))>=9e15?(e=crypto.getRandomValues(new Uint32Array(2)),t[i]=e[0],t[i+1]=e[1]):(c.push(u%1e14),i+=2);i=r/2}else{if(!crypto.randomBytes)throw z=!1,Error(a+"crypto unavailable");for(t=crypto.randomBytes(r*=7);i<r;)(u=281474976710656*(31&t[i])+1099511627776*t[i+1]+4294967296*t[i+2]+16777216*t[i+3]+(t[i+4]<<16)+(t[i+5]<<8)+t[i+6])>=9e15?crypto.randomBytes(7).copy(t,i):(c.push(u%1e14),i+=7);i=r/7}if(!z)for(;i<r;)(u=_())<9e15&&(c[i++]=u%1e14);for(r=c[--i],n%=d,r&&n&&(u=p[d-n],c[i]=s(r/u)*u);0===c[i];c.pop(),i--);if(i<0)c=[l=0];else{for(l=-1;0===c[0];c.splice(0,1),l-=d);for(i=1,u=c[0];u>=10;u/=10,i++);i<d&&(l-=d-i)}return h.e=l,h.c=c,h}),q.sum=function(){for(var n=1,t=arguments,e=new q(t[0]);n<t.length;)e=e.plus(t[n++]);return e},l=function(){var n="0123456789";function t(n,t,e,l){for(var r,u,i=[0],o=0,s=n.length;o<s;){for(u=i.length;u--;i[u]*=t);for(i[0]+=l.indexOf(n.charAt(o++)),r=0;r<i.length;r++)i[r]>e-1&&(null==i[r+1]&&(i[r+1]=0),i[r+1]+=i[r]/e|0,i[r]%=e)}return i.reverse()}return function(l,r,u,i,o){var s,a,c,h,d,f,p,g,y=l.indexOf("."),m=O,w=M;for(y>=0&&(h=D,D=0,l=l.replace(".",""),f=(g=new q(r)).pow(l.length-y),D=h,g.c=t(A(b(f.c),f.e,"0"),10,u,n),g.e=g.c.length),c=h=(p=t(l,r,u,o?(s=j,n):(s=n,j))).length;0==p[--h];p.pop());if(!p[0])return s.charAt(0);if(y<0?--c:(f.c=p,f.e=c,f.s=i,p=(f=e(f,g,m,w,u)).c,d=f.r,c=f.e),y=p[a=c+m+1],h=u/2,d=d||a<0||null!=p[a+1],d=w<4?(null!=y||d)&&(0==w||w==(f.s<0?3:2)):y>h||y==h&&(4==w||d||6==w&&1&p[a-1]||w==(f.s<0?8:7)),a<1||!p[0])l=d?A(s.charAt(1),-m,s.charAt(0)):s.charAt(0);else{if(p.length=a,d)for(--u;++p[--a]>u;)p[a]=0,a||(++c,p=[1].concat(p));for(h=p.length;!p[--h];);for(y=0,l="";y<=h;l+=s.charAt(p[y++]));l=A(l,c,s.charAt(0))}return l}}(),e=function(){function n(n,t,e){var l,r,u,i,o=0,s=n.length,a=t%g,c=t/g|0;for(n=n.slice();s--;)o=((r=a*(u=n[s]%g)+(l=c*u+(i=n[s]/g|0)*a)%g*g+o)/e|0)+(l/g|0)+c*i,n[s]=r%e;return o&&(n=[o].concat(n)),n}function t(n,t,e,l){var r,u;if(e!=l)u=e>l?1:-1;else for(r=u=0;r<e;r++)if(n[r]!=t[r]){u=n[r]>t[r]?1:-1;break}return u}function e(n,t,e,l){for(var r=0;e--;)n[e]-=r,r=n[e]<t[e]?1:0,n[e]=r*l+n[e]-t[e];for(;!n[0]&&n.length>1;n.splice(0,1));}return function(l,r,u,i,o){var a,c,f,p,g,y,b,w,v,k,I,A,_,E,S,T,x,B=l.s==r.s?1:-1,P=l.c,R=r.c;if(!(P&&P[0]&&R&&R[0]))return new q(l.s&&r.s&&(P?!R||P[0]!=R[0]:R)?P&&0==P[0]||!R?0*B:B/0:NaN);for(v=(w=new q(B)).c=[],B=u+(c=l.e-r.e)+1,o||(o=h,c=m(l.e/d)-m(r.e/d),B=B/d|0),f=0;R[f]==(P[f]||0);f++);if(R[f]>(P[f]||0)&&c--,B<0)v.push(1),p=!0;else{for(E=P.length,T=R.length,f=0,B+=2,(g=s(o/(R[0]+1)))>1&&(R=n(R,g,o),P=n(P,g,o),T=R.length,E=P.length),_=T,I=(k=P.slice(0,T)).length;I<T;k[I++]=0);x=R.slice(),x=[0].concat(x),S=R[0],R[1]>=o/2&&S++;do{if(g=0,(a=t(R,k,T,I))<0){if(A=k[0],T!=I&&(A=A*o+(k[1]||0)),(g=s(A/S))>1)for(g>=o&&(g=o-1),b=(y=n(R,g,o)).length,I=k.length;1==t(y,k,b,I);)g--,e(y,T<b?x:R,b,o),b=y.length,a=1;else 0==g&&(a=g=1),b=(y=R.slice()).length;if(b<I&&(y=[0].concat(y)),e(k,y,I,o),I=k.length,-1==a)for(;t(R,k,T,I)<1;)g++,e(k,T<I?x:R,I,o),I=k.length}else 0===a&&(g++,k=[0]);v[f++]=g,k[0]?k[I++]=P[_]||0:(k=[P[_]],I=1)}while((_++<E||null!=k[0])&&B--);p=null!=k[0],v[0]||v.splice(0,1)}if(o==h){for(f=1,B=v[0];B>=10;B/=10,f++);Z(w,u+(w.e=f+c*d-1)+1,i,p)}else w.e=c,w.r=+p;return w}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,S=/^([^.]+)\.$/,T=/^\.([^.]+)$/,x=/^-?(Infinity|NaN)$/,B=/^\s*\+(?=[\w.])|^\s+|\s+$/g,r=function(n,t,e,l){var r,u=e?t:t.replace(B,"");if(x.test(u))n.s=isNaN(u)?null:u<0?-1:1;else{if(!e&&(u=u.replace(E,(function(n,t,e){return r="x"==(e=e.toLowerCase())?16:"b"==e?2:8,l&&l!=r?n:t})),l&&(r=l,u=u.replace(S,"$1").replace(T,"0.$1")),t!=u))return new q(u,r);if(q.DEBUG)throw Error(a+"Not a"+(l?" base "+l:"")+" number: "+t);n.s=null}n.c=n.e=null},P.absoluteValue=P.abs=function(){var n=new q(this);return n.s<0&&(n.s=1),n},P.comparedTo=function(n,t){return w(this,new q(n,t))},P.decimalPlaces=P.dp=function(n,t){var e,l,r,u=this;if(null!=n)return v(n,0,y),null==t?t=M:v(t,0,8),Z(new q(u),n+u.e+1,t);if(!(e=u.c))return null;if(l=((r=e.length-1)-m(this.e/d))*d,r=e[r])for(;r%10==0;r/=10,l--);return l<0&&(l=0),l},P.dividedBy=P.div=function(n,t){return e(this,new q(n,t),O,M)},P.dividedToIntegerBy=P.idiv=function(n,t){return e(this,new q(n,t),0,1)},P.exponentiatedBy=P.pow=function(n,t){var e,l,r,u,i,c,h,f,p=this;if((n=new q(n)).c&&!n.isInteger())throw Error(a+"Exponent not an integer: "+V(n));if(null!=t&&(t=new q(t)),i=n.e>14,!p.c||!p.c[0]||1==p.c[0]&&!p.e&&1==p.c.length||!n.c||!n.c[0])return f=new q(Math.pow(+V(p),i?2-k(n):+V(n))),t?f.mod(t):f;if(c=n.s<0,t){if(t.c?!t.c[0]:!t.s)return new q(NaN);(l=!c&&p.isInteger()&&t.isInteger())&&(p=p.mod(t))}else{if(n.e>9&&(p.e>0||p.e<-1||(0==p.e?p.c[0]>1||i&&p.c[1]>=24e7:p.c[0]<8e13||i&&p.c[0]<=9999975e7)))return u=p.s<0&&k(n)?-0:0,p.e>-1&&(u=1/u),new q(c?1/u:u);D&&(u=o(D/d+2))}for(i?(e=new q(.5),c&&(n.s=1),h=k(n)):h=(r=Math.abs(+V(n)))%2,f=new q(R);;){if(h){if(!(f=f.times(p)).c)break;u?f.c.length>u&&(f.c.length=u):l&&(f=f.mod(t))}if(r){if(0===(r=s(r/2)))break;h=r%2}else if(Z(n=n.times(e),n.e+1,1),n.e>14)h=k(n);else{if(0===(r=+V(n)))break;h=r%2}p=p.times(p),u?p.c&&p.c.length>u&&(p.c.length=u):l&&(p=p.mod(t))}return l?f:(c&&(f=R.div(f)),t?f.mod(t):u?Z(f,D,M,undefined):f)},P.integerValue=function(n){var t=new q(this);return null==n?n=M:v(n,0,8),Z(t,t.e+1,n)},P.isEqualTo=P.eq=function(n,t){return 0===w(this,new q(n,t))},P.isFinite=function(){return!!this.c},P.isGreaterThan=P.gt=function(n,t){return w(this,new q(n,t))>0},P.isGreaterThanOrEqualTo=P.gte=function(n,t){return 1===(t=w(this,new q(n,t)))||0===t},P.isInteger=function(){return!!this.c&&m(this.e/d)>this.c.length-2},P.isLessThan=P.lt=function(n,t){return w(this,new q(n,t))<0},P.isLessThanOrEqualTo=P.lte=function(n,t){return-1===(t=w(this,new q(n,t)))||0===t},P.isNaN=function(){return!this.s},P.isNegative=function(){return this.s<0},P.isPositive=function(){return this.s>0},P.isZero=function(){return!!this.c&&0==this.c[0]},P.minus=function(n,t){var e,l,r,u,i=this,o=i.s;if(t=(n=new q(n,t)).s,!o||!t)return new q(NaN);if(o!=t)return n.s=-t,i.plus(n);var s=i.e/d,a=n.e/d,c=i.c,f=n.c;if(!s||!a){if(!c||!f)return c?(n.s=-t,n):new q(f?i:NaN);if(!c[0]||!f[0])return f[0]?(n.s=-t,n):new q(c[0]?i:3==M?-0:0)}if(s=m(s),a=m(a),c=c.slice(),o=s-a){for((u=o<0)?(o=-o,r=c):(a=s,r=f),r.reverse(),t=o;t--;r.push(0));r.reverse()}else for(l=(u=(o=c.length)<(t=f.length))?o:t,o=t=0;t<l;t++)if(c[t]!=f[t]){u=c[t]<f[t];break}if(u&&(r=c,c=f,f=r,n.s=-n.s),(t=(l=f.length)-(e=c.length))>0)for(;t--;c[e++]=0);for(t=h-1;l>o;){if(c[--l]<f[l]){for(e=l;e&&!c[--e];c[e]=t);--c[e],c[l]+=h}c[l]-=f[l]}for(;0==c[0];c.splice(0,1),--a);return c[0]?$(n,c,a):(n.s=3==M?-1:1,n.c=[n.e=0],n)},P.modulo=P.mod=function(n,t){var l,r,u=this;return n=new q(n,t),!u.c||!n.s||n.c&&!n.c[0]?new q(NaN):!n.c||u.c&&!u.c[0]?new q(u):(9==K?(r=n.s,n.s=1,l=e(u,n,0,3),n.s=r,l.s*=r):l=e(u,n,0,K),(n=u.minus(l.times(n))).c[0]||1!=K||(n.s=u.s),n)},P.multipliedBy=P.times=function(n,t){var e,l,r,u,i,o,s,a,c,f,p,y,b,w,v,k=this,I=k.c,A=(n=new q(n,t)).c;if(!(I&&A&&I[0]&&A[0]))return!k.s||!n.s||I&&!I[0]&&!A||A&&!A[0]&&!I?n.c=n.e=n.s=null:(n.s*=k.s,I&&A?(n.c=[0],n.e=0):n.c=n.e=null),n;for(l=m(k.e/d)+m(n.e/d),n.s*=k.s,(s=I.length)<(f=A.length)&&(b=I,I=A,A=b,r=s,s=f,f=r),r=s+f,b=[];r--;b.push(0));for(w=h,v=g,r=f;--r>=0;){for(e=0,p=A[r]%v,y=A[r]/v|0,u=r+(i=s);u>r;)e=((a=p*(a=I[--i]%v)+(o=y*a+(c=I[i]/v|0)*p)%v*v+b[u]+e)/w|0)+(o/v|0)+y*c,b[u--]=a%w;b[u]=e}return e?++l:b.splice(0,1),$(n,b,l)},P.negated=function(){var n=new q(this);return n.s=-n.s||null,n},P.plus=function(n,t){var e,l=this,r=l.s;if(t=(n=new q(n,t)).s,!r||!t)return new q(NaN);if(r!=t)return n.s=-t,l.minus(n);var u=l.e/d,i=n.e/d,o=l.c,s=n.c;if(!u||!i){if(!o||!s)return new q(r/0);if(!o[0]||!s[0])return s[0]?n:new q(o[0]?l:0*r)}if(u=m(u),i=m(i),o=o.slice(),r=u-i){for(r>0?(i=u,e=s):(r=-r,e=o),e.reverse();r--;e.push(0));e.reverse()}for((r=o.length)-(t=s.length)<0&&(e=s,s=o,o=e,t=r),r=0;t;)r=(o[--t]=o[t]+s[t]+r)/h|0,o[t]=h===o[t]?0:o[t]%h;return r&&(o=[r].concat(o),++i),$(n,o,i)},P.precision=P.sd=function(n,t){var e,l,r,u=this;if(null!=n&&n!==!!n)return v(n,1,y),null==t?t=M:v(t,0,8),Z(new q(u),n,t);if(!(e=u.c))return null;if(l=(r=e.length-1)*d+1,r=e[r]){for(;r%10==0;r/=10,l--);for(r=e[0];r>=10;r/=10,l++);}return n&&u.e+1>l&&(l=u.e+1),l},P.shiftedBy=function(n){return v(n,-9007199254740991,f),this.times("1e"+n)},P.squareRoot=P.sqrt=function(){var n,t,l,r,u,i=this,o=i.c,s=i.s,a=i.e,c=O+4,h=new q("0.5");if(1!==s||!o||!o[0])return new q(!s||s<0&&(!o||o[0])?NaN:o?i:1/0);if(0==(s=Math.sqrt(+V(i)))||s==1/0?(((t=b(o)).length+a)%2==0&&(t+="0"),s=Math.sqrt(+t),a=m((a+1)/2)-(a<0||a%2),l=new q(t=s==1/0?"5e"+a:(t=s.toExponential()).slice(0,t.indexOf("e")+1)+a)):l=new q(s+""),l.c[0])for((s=(a=l.e)+c)<3&&(s=0);;)if(u=l,l=h.times(u.plus(e(i,u,c,1))),b(u.c).slice(0,s)===(t=b(l.c)).slice(0,s)){if(l.e<a&&--s,"9999"!=(t=t.slice(s-3,s+1))&&(r||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(Z(l,l.e+O+2,1),n=!l.times(l).eq(i));break}if(!r&&(Z(u,u.e+O+2,0),u.times(u).eq(i))){l=u;break}c+=4,s+=4,r=1}return Z(l,l.e+O+1,M,n)},P.toExponential=function(n,t){return null!=n&&(v(n,0,y),n++),H(this,n,t,1)},P.toFixed=function(n,t){return null!=n&&(v(n,0,y),n=n+this.e+1),H(this,n,t)},P.toFormat=function(n,t,e){var l,r=this;if(null==e)null!=n&&t&&"object"==typeof t?(e=t,t=null):n&&"object"==typeof n?(e=n,n=t=null):e=W;else if("object"!=typeof e)throw Error(a+"Argument not an object: "+e);if(l=r.toFixed(n,t),r.c){var u,i=l.split("."),o=+e.groupSize,s=+e.secondaryGroupSize,c=e.groupSeparator||"",h=i[0],d=i[1],f=r.s<0,p=f?h.slice(1):h,g=p.length;if(s&&(u=o,o=s,s=u,g-=u),o>0&&g>0){for(u=g%o||o,h=p.substr(0,u);u<g;u+=o)h+=c+p.substr(u,o);s>0&&(h+=c+p.slice(u)),f&&(h="-"+h)}l=d?h+(e.decimalSeparator||"")+((s=+e.fractionGroupSize)?d.replace(new RegExp("\\d{"+s+"}\\B","g"),"$&"+(e.fractionGroupSeparator||"")):d):h}return(e.prefix||"")+l+(e.suffix||"")},P.toFraction=function(n){var t,l,r,u,i,o,s,c,h,f,g,y,m=this,w=m.c;if(null!=n&&(!(s=new q(n)).isInteger()&&(s.c||1!==s.s)||s.lt(R)))throw Error(a+"Argument "+(s.isInteger()?"out of range: ":"not an integer: ")+V(s));if(!w)return new q(m);for(t=new q(R),h=l=new q(R),r=c=new q(R),y=b(w),i=t.e=y.length-m.e-1,t.c[0]=p[(o=i%d)<0?d+o:o],n=!n||s.comparedTo(t)>0?i>0?t:h:s,o=N,N=1/0,s=new q(y),c.c[0]=0;f=e(s,t,0,1),1!=(u=l.plus(f.times(r))).comparedTo(n);)l=r,r=u,h=c.plus(f.times(u=h)),c=u,t=s.minus(f.times(u=t)),s=u;return u=e(n.minus(l),r,0,1),c=c.plus(u.times(h)),l=l.plus(u.times(r)),c.s=h.s=m.s,g=e(h,r,i*=2,M).minus(m).abs().comparedTo(e(c,l,i,M).minus(m).abs())<1?[h,r]:[c,l],N=o,g},P.toNumber=function(){return+V(this)},P.toPrecision=function(n,t){return null!=n&&v(n,1,y),H(this,n,t,2)},P.toString=function(n){var t,e=this,r=e.s,u=e.e;return null===u?r?(t="Infinity",r<0&&(t="-"+t)):t="NaN":(null==n?t=u<=C||u>=U?I(b(e.c),u):A(b(e.c),u,"0"):10===n&&F?t=A(b((e=Z(new q(e),O+u+1,M)).c),e.e,"0"):(v(n,2,j.length,"Base"),t=l(A(b(e.c),u,"0"),10,n,r,!0)),r<0&&e.c[0]&&(t="-"+t)),t},P.valueOf=P.toJSON=function(){return V(this)},P._isBigNumber=!0,null!=t&&q.set(t),q}(),u.default=u.BigNumber=u,void 0===(l=(function(){return u}).call(t,e,t,n))||(n.exports=l)}()},62197:function(n,t,e){!function(n,t){"use strict";function l(n,t){if(!n)throw new Error(t||"Assertion failed")}function r(n,t){n.super_=t;var e=function(){};e.prototype=t.prototype,n.prototype=new e,n.prototype.constructor=n}function u(n,t,e){if(u.isBN(n))return n;this.negative=0,this.words=null,this.length=0,this.red=null,null!==n&&("le"!==t&&"be"!==t||(e=t,t=10),this._init(n||0,t||10,e||"be"))}var i;"object"==typeof n?n.exports=u:t.BN=u,u.BN=u,u.wordSize=26;try{i="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(33196).Buffer}catch(x){}function o(n,t){var e=n.charCodeAt(t);return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:void l(!1,"Invalid character in "+n)}function s(n,t,e){var l=o(n,e);return e-1>=t&&(l|=o(n,e-1)<<4),l}function a(n,t,e,r){for(var u=0,i=0,o=Math.min(n.length,e),s=t;s<o;s++){var a=n.charCodeAt(s)-48;u*=r,i=a>=49?a-49+10:a>=17?a-17+10:a,l(a>=0&&i<r,"Invalid character"),u+=i}return u}function c(n,t){n.words=t.words,n.length=t.length,n.negative=t.negative,n.red=t.red}if(u.isBN=function(n){return n instanceof u||null!==n&&"object"==typeof n&&n.constructor.wordSize===u.wordSize&&Array.isArray(n.words)},u.max=function(n,t){return n.cmp(t)>0?n:t},u.min=function(n,t){return n.cmp(t)<0?n:t},u.prototype._init=function(n,t,e){if("number"==typeof n)return this._initNumber(n,t,e);if("object"==typeof n)return this._initArray(n,t,e);"hex"===t&&(t=16),l(t===(0|t)&&t>=2&&t<=36);var r=0;"-"===(n=n.toString().replace(/\s+/g,""))[0]&&(r++,this.negative=1),r<n.length&&(16===t?this._parseHex(n,r,e):(this._parseBase(n,t,r),"le"===e&&this._initArray(this.toArray(),t,e)))},u.prototype._initNumber=function(n,t,e){n<0&&(this.negative=1,n=-n),n<67108864?(this.words=[67108863&n],this.length=1):n<4503599627370496?(this.words=[67108863&n,n/67108864&67108863],this.length=2):(l(n<9007199254740992),this.words=[67108863&n,n/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),t,e)},u.prototype._initArray=function(n,t,e){if(l("number"==typeof n.length),n.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(n.length/3),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var u,i,o=0;if("be"===e)for(r=n.length-1,u=0;r>=0;r-=3)i=n[r]|n[r-1]<<8|n[r-2]<<16,this.words[u]|=i<<o&67108863,this.words[u+1]=i>>>26-o&67108863,(o+=24)>=26&&(o-=26,u++);else if("le"===e)for(r=0,u=0;r<n.length;r+=3)i=n[r]|n[r+1]<<8|n[r+2]<<16,this.words[u]|=i<<o&67108863,this.words[u+1]=i>>>26-o&67108863,(o+=24)>=26&&(o-=26,u++);return this._strip()},u.prototype._parseHex=function(n,t,e){this.length=Math.ceil((n.length-t)/6),this.words=new Array(this.length);for(var l=0;l<this.length;l++)this.words[l]=0;var r,u=0,i=0;if("be"===e)for(l=n.length-1;l>=t;l-=2)r=s(n,t,l)<<u,this.words[i]|=67108863&r,u>=18?(u-=18,i+=1,this.words[i]|=r>>>26):u+=8;else for(l=(n.length-t)%2==0?t+1:t;l<n.length;l+=2)r=s(n,t,l)<<u,this.words[i]|=67108863&r,u>=18?(u-=18,i+=1,this.words[i]|=r>>>26):u+=8;this._strip()},u.prototype._parseBase=function(n,t,e){this.words=[0],this.length=1;for(var l=0,r=1;r<=67108863;r*=t)l++;l--,r=r/t|0;for(var u=n.length-e,i=u%l,o=Math.min(u,u-i)+e,s=0,c=e;c<o;c+=l)s=a(n,c,c+l,t),this.imuln(r),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s);if(0!==i){var h=1;for(s=a(n,c,n.length,t),c=0;c<i;c++)h*=t;this.imuln(h),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s)}this._strip()},u.prototype.copy=function(n){n.words=new Array(this.length);for(var t=0;t<this.length;t++)n.words[t]=this.words[t];n.length=this.length,n.negative=this.negative,n.red=this.red},u.prototype._move=function(n){c(n,this)},u.prototype.clone=function(){var n=new u(null);return this.copy(n),n},u.prototype._expand=function(n){for(;this.length<n;)this.words[this.length++]=0;return this},u.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},u.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{u.prototype[Symbol.for("nodejs.util.inspect.custom")]=h}catch(x){u.prototype.inspect=h}else u.prototype.inspect=h;function h(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];u.prototype.toString=function(n,t){var e;if(t=0|t||1,16===(n=n||10)||"hex"===n){e="";for(var r=0,u=0,i=0;i<this.length;i++){var o=this.words[i],s=(16777215&(o<<r|u)).toString(16);u=o>>>24-r&16777215,(r+=2)>=26&&(r-=26,i--),e=0!==u||i!==this.length-1?d[6-s.length]+s+e:s+e}for(0!==u&&(e=u.toString(16)+e);e.length%t!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(n===(0|n)&&n>=2&&n<=36){var a=f[n],c=p[n];e="";var h=this.clone();for(h.negative=0;!h.isZero();){var g=h.modrn(c).toString(n);e=(h=h.idivn(c)).isZero()?g+e:d[a-g.length]+g+e}for(this.isZero()&&(e="0"+e);e.length%t!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}l(!1,"Base should be between 2 and 36")},u.prototype.toNumber=function(){var n=this.words[0];return 2===this.length?n+=67108864*this.words[1]:3===this.length&&1===this.words[2]?n+=4503599627370496+67108864*this.words[1]:this.length>2&&l(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-n:n},u.prototype.toJSON=function(){return this.toString(16,2)},i&&(u.prototype.toBuffer=function(n,t){return this.toArrayLike(i,n,t)}),u.prototype.toArray=function(n,t){return this.toArrayLike(Array,n,t)};function g(n,t,e){e.negative=t.negative^n.negative;var l=n.length+t.length|0;e.length=l,l=l-1|0;var r=0|n.words[0],u=0|t.words[0],i=r*u,o=67108863&i,s=i/67108864|0;e.words[0]=o;for(var a=1;a<l;a++){for(var c=s>>>26,h=67108863&s,d=Math.min(a,t.length-1),f=Math.max(0,a-n.length+1);f<=d;f++){var p=a-f|0;c+=(i=(r=0|n.words[p])*(u=0|t.words[f])+h)/67108864|0,h=67108863&i}e.words[a]=0|h,s=0|c}return 0!==s?e.words[a]=0|s:e.length--,e._strip()}u.prototype.toArrayLike=function(n,t,e){this._strip();var r=this.byteLength(),u=e||Math.max(1,r);l(r<=u,"byte array longer than desired length"),l(u>0,"Requested array length <= 0");var i=function(n,t){return n.allocUnsafe?n.allocUnsafe(t):new n(t)}(n,u);return this["_toArrayLike"+("le"===t?"LE":"BE")](i,r),i},u.prototype._toArrayLikeLE=function(n,t){for(var e=0,l=0,r=0,u=0;r<this.length;r++){var i=this.words[r]<<u|l;n[e++]=255&i,e<n.length&&(n[e++]=i>>8&255),e<n.length&&(n[e++]=i>>16&255),6===u?(e<n.length&&(n[e++]=i>>24&255),l=0,u=0):(l=i>>>24,u+=2)}if(e<n.length)for(n[e++]=l;e<n.length;)n[e++]=0},u.prototype._toArrayLikeBE=function(n,t){for(var e=n.length-1,l=0,r=0,u=0;r<this.length;r++){var i=this.words[r]<<u|l;n[e--]=255&i,e>=0&&(n[e--]=i>>8&255),e>=0&&(n[e--]=i>>16&255),6===u?(e>=0&&(n[e--]=i>>24&255),l=0,u=0):(l=i>>>24,u+=2)}if(e>=0)for(n[e--]=l;e>=0;)n[e--]=0},Math.clz32?u.prototype._countBits=function(n){return 32-Math.clz32(n)}:u.prototype._countBits=function(n){var t=n,e=0;return t>=4096&&(e+=13,t>>>=13),t>=64&&(e+=7,t>>>=7),t>=8&&(e+=4,t>>>=4),t>=2&&(e+=2,t>>>=2),e+t},u.prototype._zeroBits=function(n){if(0===n)return 26;var t=n,e=0;return 0==(8191&t)&&(e+=13,t>>>=13),0==(127&t)&&(e+=7,t>>>=7),0==(15&t)&&(e+=4,t>>>=4),0==(3&t)&&(e+=2,t>>>=2),0==(1&t)&&e++,e},u.prototype.bitLength=function(){var n=this.words[this.length-1],t=this._countBits(n);return 26*(this.length-1)+t},u.prototype.zeroBits=function(){if(this.isZero())return 0;for(var n=0,t=0;t<this.length;t++){var e=this._zeroBits(this.words[t]);if(n+=e,26!==e)break}return n},u.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},u.prototype.toTwos=function(n){return 0!==this.negative?this.abs().inotn(n).iaddn(1):this.clone()},u.prototype.fromTwos=function(n){return this.testn(n-1)?this.notn(n).iaddn(1).ineg():this.clone()},u.prototype.isNeg=function(){return 0!==this.negative},u.prototype.neg=function(){return this.clone().ineg()},u.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},u.prototype.iuor=function(n){for(;this.length<n.length;)this.words[this.length++]=0;for(var t=0;t<n.length;t++)this.words[t]=this.words[t]|n.words[t];return this._strip()},u.prototype.ior=function(n){return l(0==(this.negative|n.negative)),this.iuor(n)},u.prototype.or=function(n){return this.length>n.length?this.clone().ior(n):n.clone().ior(this)},u.prototype.uor=function(n){return this.length>n.length?this.clone().iuor(n):n.clone().iuor(this)},u.prototype.iuand=function(n){var t;t=this.length>n.length?n:this;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]&n.words[e];return this.length=t.length,this._strip()},u.prototype.iand=function(n){return l(0==(this.negative|n.negative)),this.iuand(n)},u.prototype.and=function(n){return this.length>n.length?this.clone().iand(n):n.clone().iand(this)},u.prototype.uand=function(n){return this.length>n.length?this.clone().iuand(n):n.clone().iuand(this)},u.prototype.iuxor=function(n){var t,e;this.length>n.length?(t=this,e=n):(t=n,e=this);for(var l=0;l<e.length;l++)this.words[l]=t.words[l]^e.words[l];if(this!==t)for(;l<t.length;l++)this.words[l]=t.words[l];return this.length=t.length,this._strip()},u.prototype.ixor=function(n){return l(0==(this.negative|n.negative)),this.iuxor(n)},u.prototype.xor=function(n){return this.length>n.length?this.clone().ixor(n):n.clone().ixor(this)},u.prototype.uxor=function(n){return this.length>n.length?this.clone().iuxor(n):n.clone().iuxor(this)},u.prototype.inotn=function(n){l("number"==typeof n&&n>=0);var t=0|Math.ceil(n/26),e=n%26;this._expand(t),e>0&&t--;for(var r=0;r<t;r++)this.words[r]=67108863&~this.words[r];return e>0&&(this.words[r]=~this.words[r]&67108863>>26-e),this._strip()},u.prototype.notn=function(n){return this.clone().inotn(n)},u.prototype.setn=function(n,t){l("number"==typeof n&&n>=0);var e=n/26|0,r=n%26;return this._expand(e+1),this.words[e]=t?this.words[e]|1<<r:this.words[e]&~(1<<r),this._strip()},u.prototype.iadd=function(n){var t,e,l;if(0!==this.negative&&0===n.negative)return this.negative=0,t=this.isub(n),this.negative^=1,this._normSign();if(0===this.negative&&0!==n.negative)return n.negative=0,t=this.isub(n),n.negative=1,t._normSign();this.length>n.length?(e=this,l=n):(e=n,l=this);for(var r=0,u=0;u<l.length;u++)t=(0|e.words[u])+(0|l.words[u])+r,this.words[u]=67108863&t,r=t>>>26;for(;0!==r&&u<e.length;u++)t=(0|e.words[u])+r,this.words[u]=67108863&t,r=t>>>26;if(this.length=e.length,0!==r)this.words[this.length]=r,this.length++;else if(e!==this)for(;u<e.length;u++)this.words[u]=e.words[u];return this},u.prototype.add=function(n){var t;return 0!==n.negative&&0===this.negative?(n.negative=0,t=this.sub(n),n.negative^=1,t):0===n.negative&&0!==this.negative?(this.negative=0,t=n.sub(this),this.negative=1,t):this.length>n.length?this.clone().iadd(n):n.clone().iadd(this)},u.prototype.isub=function(n){if(0!==n.negative){n.negative=0;var t=this.iadd(n);return n.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(n),this.negative=1,this._normSign();var e,l,r=this.cmp(n);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;r>0?(e=this,l=n):(e=n,l=this);for(var u=0,i=0;i<l.length;i++)u=(t=(0|e.words[i])-(0|l.words[i])+u)>>26,this.words[i]=67108863&t;for(;0!==u&&i<e.length;i++)u=(t=(0|e.words[i])+u)>>26,this.words[i]=67108863&t;if(0===u&&i<e.length&&e!==this)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=Math.max(this.length,i),e!==this&&(this.negative=1),this._strip()},u.prototype.sub=function(n){return this.clone().isub(n)};var y=function(n,t,e){var l,r,u,i=n.words,o=t.words,s=e.words,a=0,c=0|i[0],h=8191&c,d=c>>>13,f=0|i[1],p=8191&f,g=f>>>13,y=0|i[2],m=8191&y,b=y>>>13,w=0|i[3],v=8191&w,k=w>>>13,I=0|i[4],A=8191&I,_=I>>>13,E=0|i[5],S=8191&E,T=E>>>13,x=0|i[6],B=8191&x,P=x>>>13,R=0|i[7],O=8191&R,M=R>>>13,C=0|i[8],U=8191&C,L=C>>>13,N=0|i[9],z=8191&N,K=N>>>13,D=0|o[0],W=8191&D,j=D>>>13,F=0|o[1],q=8191&F,H=F>>>13,G=0|o[2],$=8191&G,Z=G>>>13,V=0|o[3],X=8191&V,Y=V>>>13,J=0|o[4],Q=8191&J,nn=J>>>13,tn=0|o[5],en=8191&tn,ln=tn>>>13,rn=0|o[6],un=8191&rn,on=rn>>>13,sn=0|o[7],an=8191&sn,cn=sn>>>13,hn=0|o[8],dn=8191&hn,fn=hn>>>13,pn=0|o[9],gn=8191&pn,yn=pn>>>13;e.negative=n.negative^t.negative,e.length=19;var mn=(a+(l=Math.imul(h,W))|0)+((8191&(r=(r=Math.imul(h,j))+Math.imul(d,W)|0))<<13)|0;a=((u=Math.imul(d,j))+(r>>>13)|0)+(mn>>>26)|0,mn&=67108863,l=Math.imul(p,W),r=(r=Math.imul(p,j))+Math.imul(g,W)|0,u=Math.imul(g,j);var bn=(a+(l=l+Math.imul(h,q)|0)|0)+((8191&(r=(r=r+Math.imul(h,H)|0)+Math.imul(d,q)|0))<<13)|0;a=((u=u+Math.imul(d,H)|0)+(r>>>13)|0)+(bn>>>26)|0,bn&=67108863,l=Math.imul(m,W),r=(r=Math.imul(m,j))+Math.imul(b,W)|0,u=Math.imul(b,j),l=l+Math.imul(p,q)|0,r=(r=r+Math.imul(p,H)|0)+Math.imul(g,q)|0,u=u+Math.imul(g,H)|0;var wn=(a+(l=l+Math.imul(h,$)|0)|0)+((8191&(r=(r=r+Math.imul(h,Z)|0)+Math.imul(d,$)|0))<<13)|0;a=((u=u+Math.imul(d,Z)|0)+(r>>>13)|0)+(wn>>>26)|0,wn&=67108863,l=Math.imul(v,W),r=(r=Math.imul(v,j))+Math.imul(k,W)|0,u=Math.imul(k,j),l=l+Math.imul(m,q)|0,r=(r=r+Math.imul(m,H)|0)+Math.imul(b,q)|0,u=u+Math.imul(b,H)|0,l=l+Math.imul(p,$)|0,r=(r=r+Math.imul(p,Z)|0)+Math.imul(g,$)|0,u=u+Math.imul(g,Z)|0;var vn=(a+(l=l+Math.imul(h,X)|0)|0)+((8191&(r=(r=r+Math.imul(h,Y)|0)+Math.imul(d,X)|0))<<13)|0;a=((u=u+Math.imul(d,Y)|0)+(r>>>13)|0)+(vn>>>26)|0,vn&=67108863,l=Math.imul(A,W),r=(r=Math.imul(A,j))+Math.imul(_,W)|0,u=Math.imul(_,j),l=l+Math.imul(v,q)|0,r=(r=r+Math.imul(v,H)|0)+Math.imul(k,q)|0,u=u+Math.imul(k,H)|0,l=l+Math.imul(m,$)|0,r=(r=r+Math.imul(m,Z)|0)+Math.imul(b,$)|0,u=u+Math.imul(b,Z)|0,l=l+Math.imul(p,X)|0,r=(r=r+Math.imul(p,Y)|0)+Math.imul(g,X)|0,u=u+Math.imul(g,Y)|0;var kn=(a+(l=l+Math.imul(h,Q)|0)|0)+((8191&(r=(r=r+Math.imul(h,nn)|0)+Math.imul(d,Q)|0))<<13)|0;a=((u=u+Math.imul(d,nn)|0)+(r>>>13)|0)+(kn>>>26)|0,kn&=67108863,l=Math.imul(S,W),r=(r=Math.imul(S,j))+Math.imul(T,W)|0,u=Math.imul(T,j),l=l+Math.imul(A,q)|0,r=(r=r+Math.imul(A,H)|0)+Math.imul(_,q)|0,u=u+Math.imul(_,H)|0,l=l+Math.imul(v,$)|0,r=(r=r+Math.imul(v,Z)|0)+Math.imul(k,$)|0,u=u+Math.imul(k,Z)|0,l=l+Math.imul(m,X)|0,r=(r=r+Math.imul(m,Y)|0)+Math.imul(b,X)|0,u=u+Math.imul(b,Y)|0,l=l+Math.imul(p,Q)|0,r=(r=r+Math.imul(p,nn)|0)+Math.imul(g,Q)|0,u=u+Math.imul(g,nn)|0;var In=(a+(l=l+Math.imul(h,en)|0)|0)+((8191&(r=(r=r+Math.imul(h,ln)|0)+Math.imul(d,en)|0))<<13)|0;a=((u=u+Math.imul(d,ln)|0)+(r>>>13)|0)+(In>>>26)|0,In&=67108863,l=Math.imul(B,W),r=(r=Math.imul(B,j))+Math.imul(P,W)|0,u=Math.imul(P,j),l=l+Math.imul(S,q)|0,r=(r=r+Math.imul(S,H)|0)+Math.imul(T,q)|0,u=u+Math.imul(T,H)|0,l=l+Math.imul(A,$)|0,r=(r=r+Math.imul(A,Z)|0)+Math.imul(_,$)|0,u=u+Math.imul(_,Z)|0,l=l+Math.imul(v,X)|0,r=(r=r+Math.imul(v,Y)|0)+Math.imul(k,X)|0,u=u+Math.imul(k,Y)|0,l=l+Math.imul(m,Q)|0,r=(r=r+Math.imul(m,nn)|0)+Math.imul(b,Q)|0,u=u+Math.imul(b,nn)|0,l=l+Math.imul(p,en)|0,r=(r=r+Math.imul(p,ln)|0)+Math.imul(g,en)|0,u=u+Math.imul(g,ln)|0;var An=(a+(l=l+Math.imul(h,un)|0)|0)+((8191&(r=(r=r+Math.imul(h,on)|0)+Math.imul(d,un)|0))<<13)|0;a=((u=u+Math.imul(d,on)|0)+(r>>>13)|0)+(An>>>26)|0,An&=67108863,l=Math.imul(O,W),r=(r=Math.imul(O,j))+Math.imul(M,W)|0,u=Math.imul(M,j),l=l+Math.imul(B,q)|0,r=(r=r+Math.imul(B,H)|0)+Math.imul(P,q)|0,u=u+Math.imul(P,H)|0,l=l+Math.imul(S,$)|0,r=(r=r+Math.imul(S,Z)|0)+Math.imul(T,$)|0,u=u+Math.imul(T,Z)|0,l=l+Math.imul(A,X)|0,r=(r=r+Math.imul(A,Y)|0)+Math.imul(_,X)|0,u=u+Math.imul(_,Y)|0,l=l+Math.imul(v,Q)|0,r=(r=r+Math.imul(v,nn)|0)+Math.imul(k,Q)|0,u=u+Math.imul(k,nn)|0,l=l+Math.imul(m,en)|0,r=(r=r+Math.imul(m,ln)|0)+Math.imul(b,en)|0,u=u+Math.imul(b,ln)|0,l=l+Math.imul(p,un)|0,r=(r=r+Math.imul(p,on)|0)+Math.imul(g,un)|0,u=u+Math.imul(g,on)|0;var _n=(a+(l=l+Math.imul(h,an)|0)|0)+((8191&(r=(r=r+Math.imul(h,cn)|0)+Math.imul(d,an)|0))<<13)|0;a=((u=u+Math.imul(d,cn)|0)+(r>>>13)|0)+(_n>>>26)|0,_n&=67108863,l=Math.imul(U,W),r=(r=Math.imul(U,j))+Math.imul(L,W)|0,u=Math.imul(L,j),l=l+Math.imul(O,q)|0,r=(r=r+Math.imul(O,H)|0)+Math.imul(M,q)|0,u=u+Math.imul(M,H)|0,l=l+Math.imul(B,$)|0,r=(r=r+Math.imul(B,Z)|0)+Math.imul(P,$)|0,u=u+Math.imul(P,Z)|0,l=l+Math.imul(S,X)|0,r=(r=r+Math.imul(S,Y)|0)+Math.imul(T,X)|0,u=u+Math.imul(T,Y)|0,l=l+Math.imul(A,Q)|0,r=(r=r+Math.imul(A,nn)|0)+Math.imul(_,Q)|0,u=u+Math.imul(_,nn)|0,l=l+Math.imul(v,en)|0,r=(r=r+Math.imul(v,ln)|0)+Math.imul(k,en)|0,u=u+Math.imul(k,ln)|0,l=l+Math.imul(m,un)|0,r=(r=r+Math.imul(m,on)|0)+Math.imul(b,un)|0,u=u+Math.imul(b,on)|0,l=l+Math.imul(p,an)|0,r=(r=r+Math.imul(p,cn)|0)+Math.imul(g,an)|0,u=u+Math.imul(g,cn)|0;var En=(a+(l=l+Math.imul(h,dn)|0)|0)+((8191&(r=(r=r+Math.imul(h,fn)|0)+Math.imul(d,dn)|0))<<13)|0;a=((u=u+Math.imul(d,fn)|0)+(r>>>13)|0)+(En>>>26)|0,En&=67108863,l=Math.imul(z,W),r=(r=Math.imul(z,j))+Math.imul(K,W)|0,u=Math.imul(K,j),l=l+Math.imul(U,q)|0,r=(r=r+Math.imul(U,H)|0)+Math.imul(L,q)|0,u=u+Math.imul(L,H)|0,l=l+Math.imul(O,$)|0,r=(r=r+Math.imul(O,Z)|0)+Math.imul(M,$)|0,u=u+Math.imul(M,Z)|0,l=l+Math.imul(B,X)|0,r=(r=r+Math.imul(B,Y)|0)+Math.imul(P,X)|0,u=u+Math.imul(P,Y)|0,l=l+Math.imul(S,Q)|0,r=(r=r+Math.imul(S,nn)|0)+Math.imul(T,Q)|0,u=u+Math.imul(T,nn)|0,l=l+Math.imul(A,en)|0,r=(r=r+Math.imul(A,ln)|0)+Math.imul(_,en)|0,u=u+Math.imul(_,ln)|0,l=l+Math.imul(v,un)|0,r=(r=r+Math.imul(v,on)|0)+Math.imul(k,un)|0,u=u+Math.imul(k,on)|0,l=l+Math.imul(m,an)|0,r=(r=r+Math.imul(m,cn)|0)+Math.imul(b,an)|0,u=u+Math.imul(b,cn)|0,l=l+Math.imul(p,dn)|0,r=(r=r+Math.imul(p,fn)|0)+Math.imul(g,dn)|0,u=u+Math.imul(g,fn)|0;var Sn=(a+(l=l+Math.imul(h,gn)|0)|0)+((8191&(r=(r=r+Math.imul(h,yn)|0)+Math.imul(d,gn)|0))<<13)|0;a=((u=u+Math.imul(d,yn)|0)+(r>>>13)|0)+(Sn>>>26)|0,Sn&=67108863,l=Math.imul(z,q),r=(r=Math.imul(z,H))+Math.imul(K,q)|0,u=Math.imul(K,H),l=l+Math.imul(U,$)|0,r=(r=r+Math.imul(U,Z)|0)+Math.imul(L,$)|0,u=u+Math.imul(L,Z)|0,l=l+Math.imul(O,X)|0,r=(r=r+Math.imul(O,Y)|0)+Math.imul(M,X)|0,u=u+Math.imul(M,Y)|0,l=l+Math.imul(B,Q)|0,r=(r=r+Math.imul(B,nn)|0)+Math.imul(P,Q)|0,u=u+Math.imul(P,nn)|0,l=l+Math.imul(S,en)|0,r=(r=r+Math.imul(S,ln)|0)+Math.imul(T,en)|0,u=u+Math.imul(T,ln)|0,l=l+Math.imul(A,un)|0,r=(r=r+Math.imul(A,on)|0)+Math.imul(_,un)|0,u=u+Math.imul(_,on)|0,l=l+Math.imul(v,an)|0,r=(r=r+Math.imul(v,cn)|0)+Math.imul(k,an)|0,u=u+Math.imul(k,cn)|0,l=l+Math.imul(m,dn)|0,r=(r=r+Math.imul(m,fn)|0)+Math.imul(b,dn)|0,u=u+Math.imul(b,fn)|0;var Tn=(a+(l=l+Math.imul(p,gn)|0)|0)+((8191&(r=(r=r+Math.imul(p,yn)|0)+Math.imul(g,gn)|0))<<13)|0;a=((u=u+Math.imul(g,yn)|0)+(r>>>13)|0)+(Tn>>>26)|0,Tn&=67108863,l=Math.imul(z,$),r=(r=Math.imul(z,Z))+Math.imul(K,$)|0,u=Math.imul(K,Z),l=l+Math.imul(U,X)|0,r=(r=r+Math.imul(U,Y)|0)+Math.imul(L,X)|0,u=u+Math.imul(L,Y)|0,l=l+Math.imul(O,Q)|0,r=(r=r+Math.imul(O,nn)|0)+Math.imul(M,Q)|0,u=u+Math.imul(M,nn)|0,l=l+Math.imul(B,en)|0,r=(r=r+Math.imul(B,ln)|0)+Math.imul(P,en)|0,u=u+Math.imul(P,ln)|0,l=l+Math.imul(S,un)|0,r=(r=r+Math.imul(S,on)|0)+Math.imul(T,un)|0,u=u+Math.imul(T,on)|0,l=l+Math.imul(A,an)|0,r=(r=r+Math.imul(A,cn)|0)+Math.imul(_,an)|0,u=u+Math.imul(_,cn)|0,l=l+Math.imul(v,dn)|0,r=(r=r+Math.imul(v,fn)|0)+Math.imul(k,dn)|0,u=u+Math.imul(k,fn)|0;var xn=(a+(l=l+Math.imul(m,gn)|0)|0)+((8191&(r=(r=r+Math.imul(m,yn)|0)+Math.imul(b,gn)|0))<<13)|0;a=((u=u+Math.imul(b,yn)|0)+(r>>>13)|0)+(xn>>>26)|0,xn&=67108863,l=Math.imul(z,X),r=(r=Math.imul(z,Y))+Math.imul(K,X)|0,u=Math.imul(K,Y),l=l+Math.imul(U,Q)|0,r=(r=r+Math.imul(U,nn)|0)+Math.imul(L,Q)|0,u=u+Math.imul(L,nn)|0,l=l+Math.imul(O,en)|0,r=(r=r+Math.imul(O,ln)|0)+Math.imul(M,en)|0,u=u+Math.imul(M,ln)|0,l=l+Math.imul(B,un)|0,r=(r=r+Math.imul(B,on)|0)+Math.imul(P,un)|0,u=u+Math.imul(P,on)|0,l=l+Math.imul(S,an)|0,r=(r=r+Math.imul(S,cn)|0)+Math.imul(T,an)|0,u=u+Math.imul(T,cn)|0,l=l+Math.imul(A,dn)|0,r=(r=r+Math.imul(A,fn)|0)+Math.imul(_,dn)|0,u=u+Math.imul(_,fn)|0;var Bn=(a+(l=l+Math.imul(v,gn)|0)|0)+((8191&(r=(r=r+Math.imul(v,yn)|0)+Math.imul(k,gn)|0))<<13)|0;a=((u=u+Math.imul(k,yn)|0)+(r>>>13)|0)+(Bn>>>26)|0,Bn&=67108863,l=Math.imul(z,Q),r=(r=Math.imul(z,nn))+Math.imul(K,Q)|0,u=Math.imul(K,nn),l=l+Math.imul(U,en)|0,r=(r=r+Math.imul(U,ln)|0)+Math.imul(L,en)|0,u=u+Math.imul(L,ln)|0,l=l+Math.imul(O,un)|0,r=(r=r+Math.imul(O,on)|0)+Math.imul(M,un)|0,u=u+Math.imul(M,on)|0,l=l+Math.imul(B,an)|0,r=(r=r+Math.imul(B,cn)|0)+Math.imul(P,an)|0,u=u+Math.imul(P,cn)|0,l=l+Math.imul(S,dn)|0,r=(r=r+Math.imul(S,fn)|0)+Math.imul(T,dn)|0,u=u+Math.imul(T,fn)|0;var Pn=(a+(l=l+Math.imul(A,gn)|0)|0)+((8191&(r=(r=r+Math.imul(A,yn)|0)+Math.imul(_,gn)|0))<<13)|0;a=((u=u+Math.imul(_,yn)|0)+(r>>>13)|0)+(Pn>>>26)|0,Pn&=67108863,l=Math.imul(z,en),r=(r=Math.imul(z,ln))+Math.imul(K,en)|0,u=Math.imul(K,ln),l=l+Math.imul(U,un)|0,r=(r=r+Math.imul(U,on)|0)+Math.imul(L,un)|0,u=u+Math.imul(L,on)|0,l=l+Math.imul(O,an)|0,r=(r=r+Math.imul(O,cn)|0)+Math.imul(M,an)|0,u=u+Math.imul(M,cn)|0,l=l+Math.imul(B,dn)|0,r=(r=r+Math.imul(B,fn)|0)+Math.imul(P,dn)|0,u=u+Math.imul(P,fn)|0;var Rn=(a+(l=l+Math.imul(S,gn)|0)|0)+((8191&(r=(r=r+Math.imul(S,yn)|0)+Math.imul(T,gn)|0))<<13)|0;a=((u=u+Math.imul(T,yn)|0)+(r>>>13)|0)+(Rn>>>26)|0,Rn&=67108863,l=Math.imul(z,un),r=(r=Math.imul(z,on))+Math.imul(K,un)|0,u=Math.imul(K,on),l=l+Math.imul(U,an)|0,r=(r=r+Math.imul(U,cn)|0)+Math.imul(L,an)|0,u=u+Math.imul(L,cn)|0,l=l+Math.imul(O,dn)|0,r=(r=r+Math.imul(O,fn)|0)+Math.imul(M,dn)|0,u=u+Math.imul(M,fn)|0;var On=(a+(l=l+Math.imul(B,gn)|0)|0)+((8191&(r=(r=r+Math.imul(B,yn)|0)+Math.imul(P,gn)|0))<<13)|0;a=((u=u+Math.imul(P,yn)|0)+(r>>>13)|0)+(On>>>26)|0,On&=67108863,l=Math.imul(z,an),r=(r=Math.imul(z,cn))+Math.imul(K,an)|0,u=Math.imul(K,cn),l=l+Math.imul(U,dn)|0,r=(r=r+Math.imul(U,fn)|0)+Math.imul(L,dn)|0,u=u+Math.imul(L,fn)|0;var Mn=(a+(l=l+Math.imul(O,gn)|0)|0)+((8191&(r=(r=r+Math.imul(O,yn)|0)+Math.imul(M,gn)|0))<<13)|0;a=((u=u+Math.imul(M,yn)|0)+(r>>>13)|0)+(Mn>>>26)|0,Mn&=67108863,l=Math.imul(z,dn),r=(r=Math.imul(z,fn))+Math.imul(K,dn)|0,u=Math.imul(K,fn);var Cn=(a+(l=l+Math.imul(U,gn)|0)|0)+((8191&(r=(r=r+Math.imul(U,yn)|0)+Math.imul(L,gn)|0))<<13)|0;a=((u=u+Math.imul(L,yn)|0)+(r>>>13)|0)+(Cn>>>26)|0,Cn&=67108863;var Un=(a+(l=Math.imul(z,gn))|0)+((8191&(r=(r=Math.imul(z,yn))+Math.imul(K,gn)|0))<<13)|0;return a=((u=Math.imul(K,yn))+(r>>>13)|0)+(Un>>>26)|0,Un&=67108863,s[0]=mn,s[1]=bn,s[2]=wn,s[3]=vn,s[4]=kn,s[5]=In,s[6]=An,s[7]=_n,s[8]=En,s[9]=Sn,s[10]=Tn,s[11]=xn,s[12]=Bn,s[13]=Pn,s[14]=Rn,s[15]=On,s[16]=Mn,s[17]=Cn,s[18]=Un,0!==a&&(s[19]=a,e.length++),e};function m(n,t,e){e.negative=t.negative^n.negative,e.length=n.length+t.length;for(var l=0,r=0,u=0;u<e.length-1;u++){var i=r;r=0;for(var o=67108863&l,s=Math.min(u,t.length-1),a=Math.max(0,u-n.length+1);a<=s;a++){var c=u-a,h=(0|n.words[c])*(0|t.words[a]),d=67108863&h;o=67108863&(d=d+o|0),r+=(i=(i=i+(h/67108864|0)|0)+(d>>>26)|0)>>>26,i&=67108863}e.words[u]=o,l=i,i=r}return 0!==l?e.words[u]=l:e.length--,e._strip()}function b(n,t,e){return m(n,t,e)}function w(n,t){this.x=n,this.y=t}Math.imul||(y=g),u.prototype.mulTo=function(n,t){var e=this.length+n.length;return 10===this.length&&10===n.length?y(this,n,t):e<63?g(this,n,t):e<1024?m(this,n,t):b(this,n,t)},w.prototype.makeRBT=function(n){for(var t=new Array(n),e=u.prototype._countBits(n)-1,l=0;l<n;l++)t[l]=this.revBin(l,e,n);return t},w.prototype.revBin=function(n,t,e){if(0===n||n===e-1)return n;for(var l=0,r=0;r<t;r++)l|=(1&n)<<t-r-1,n>>=1;return l},w.prototype.permute=function(n,t,e,l,r,u){for(var i=0;i<u;i++)l[i]=t[n[i]],r[i]=e[n[i]]},w.prototype.transform=function(n,t,e,l,r,u){this.permute(u,n,t,e,l,r);for(var i=1;i<r;i<<=1)for(var o=i<<1,s=Math.cos(2*Math.PI/o),a=Math.sin(2*Math.PI/o),c=0;c<r;c+=o)for(var h=s,d=a,f=0;f<i;f++){var p=e[c+f],g=l[c+f],y=e[c+f+i],m=l[c+f+i],b=h*y-d*m;m=h*m+d*y,y=b,e[c+f]=p+y,l[c+f]=g+m,e[c+f+i]=p-y,l[c+f+i]=g-m,f!==o&&(b=s*h-a*d,d=s*d+a*h,h=b)}},w.prototype.guessLen13b=function(n,t){var e=1|Math.max(t,n),l=1&e,r=0;for(e=e/2|0;e;e>>>=1)r++;return 1<<r+1+l},w.prototype.conjugate=function(n,t,e){if(!(e<=1))for(var l=0;l<e/2;l++){var r=n[l];n[l]=n[e-l-1],n[e-l-1]=r,r=t[l],t[l]=-t[e-l-1],t[e-l-1]=-r}},w.prototype.normalize13b=function(n,t){for(var e=0,l=0;l<t/2;l++){var r=8192*Math.round(n[2*l+1]/t)+Math.round(n[2*l]/t)+e;n[l]=67108863&r,e=r<67108864?0:r/67108864|0}return n},w.prototype.convert13b=function(n,t,e,r){for(var u=0,i=0;i<t;i++)u+=0|n[i],e[2*i]=8191&u,u>>>=13,e[2*i+1]=8191&u,u>>>=13;for(i=2*t;i<r;++i)e[i]=0;l(0===u),l(0==(-8192&u))},w.prototype.stub=function(n){for(var t=new Array(n),e=0;e<n;e++)t[e]=0;return t},w.prototype.mulp=function(n,t,e){var l=2*this.guessLen13b(n.length,t.length),r=this.makeRBT(l),u=this.stub(l),i=new Array(l),o=new Array(l),s=new Array(l),a=new Array(l),c=new Array(l),h=new Array(l),d=e.words;d.length=l,this.convert13b(n.words,n.length,i,l),this.convert13b(t.words,t.length,a,l),this.transform(i,u,o,s,l,r),this.transform(a,u,c,h,l,r);for(var f=0;f<l;f++){var p=o[f]*c[f]-s[f]*h[f];s[f]=o[f]*h[f]+s[f]*c[f],o[f]=p}return this.conjugate(o,s,l),this.transform(o,s,d,u,l,r),this.conjugate(d,u,l),this.normalize13b(d,l),e.negative=n.negative^t.negative,e.length=n.length+t.length,e._strip()},u.prototype.mul=function(n){var t=new u(null);return t.words=new Array(this.length+n.length),this.mulTo(n,t)},u.prototype.mulf=function(n){var t=new u(null);return t.words=new Array(this.length+n.length),b(this,n,t)},u.prototype.imul=function(n){return this.clone().mulTo(n,this)},u.prototype.imuln=function(n){var t=n<0;t&&(n=-n),l("number"==typeof n),l(n<67108864);for(var e=0,r=0;r<this.length;r++){var u=(0|this.words[r])*n,i=(67108863&u)+(67108863&e);e>>=26,e+=u/67108864|0,e+=i>>>26,this.words[r]=67108863&i}return 0!==e&&(this.words[r]=e,this.length++),t?this.ineg():this},u.prototype.muln=function(n){return this.clone().imuln(n)},u.prototype.sqr=function(){return this.mul(this)},u.prototype.isqr=function(){return this.imul(this.clone())},u.prototype.pow=function(n){var t=function(n){for(var t=new Array(n.bitLength()),e=0;e<t.length;e++){var l=e/26|0,r=e%26;t[e]=n.words[l]>>>r&1}return t}(n);if(0===t.length)return new u(1);for(var e=this,l=0;l<t.length&&0===t[l];l++,e=e.sqr());if(++l<t.length)for(var r=e.sqr();l<t.length;l++,r=r.sqr())0!==t[l]&&(e=e.mul(r));return e},u.prototype.iushln=function(n){l("number"==typeof n&&n>=0);var t,e=n%26,r=(n-e)/26,u=67108863>>>26-e<<26-e;if(0!==e){var i=0;for(t=0;t<this.length;t++){var o=this.words[t]&u,s=(0|this.words[t])-o<<e;this.words[t]=s|i,i=o>>>26-e}i&&(this.words[t]=i,this.length++)}if(0!==r){for(t=this.length-1;t>=0;t--)this.words[t+r]=this.words[t];for(t=0;t<r;t++)this.words[t]=0;this.length+=r}return this._strip()},u.prototype.ishln=function(n){return l(0===this.negative),this.iushln(n)},u.prototype.iushrn=function(n,t,e){var r;l("number"==typeof n&&n>=0),r=t?(t-t%26)/26:0;var u=n%26,i=Math.min((n-u)/26,this.length),o=67108863^67108863>>>u<<u,s=e;if(r-=i,r=Math.max(0,r),s){for(var a=0;a<i;a++)s.words[a]=this.words[a];s.length=i}if(0===i);else if(this.length>i)for(this.length-=i,a=0;a<this.length;a++)this.words[a]=this.words[a+i];else this.words[0]=0,this.length=1;var c=0;for(a=this.length-1;a>=0&&(0!==c||a>=r);a--){var h=0|this.words[a];this.words[a]=c<<26-u|h>>>u,c=h&o}return s&&0!==c&&(s.words[s.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},u.prototype.ishrn=function(n,t,e){return l(0===this.negative),this.iushrn(n,t,e)},u.prototype.shln=function(n){return this.clone().ishln(n)},u.prototype.ushln=function(n){return this.clone().iushln(n)},u.prototype.shrn=function(n){return this.clone().ishrn(n)},u.prototype.ushrn=function(n){return this.clone().iushrn(n)},u.prototype.testn=function(n){l("number"==typeof n&&n>=0);var t=n%26,e=(n-t)/26,r=1<<t;return!(this.length<=e)&&!!(this.words[e]&r)},u.prototype.imaskn=function(n){l("number"==typeof n&&n>=0);var t=n%26,e=(n-t)/26;if(l(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==t&&e++,this.length=Math.min(e,this.length),0!==t){var r=67108863^67108863>>>t<<t;this.words[this.length-1]&=r}return this._strip()},u.prototype.maskn=function(n){return this.clone().imaskn(n)},u.prototype.iaddn=function(n){return l("number"==typeof n),l(n<67108864),n<0?this.isubn(-n):0!==this.negative?1===this.length&&(0|this.words[0])<=n?(this.words[0]=n-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(n),this.negative=1,this):this._iaddn(n)},u.prototype._iaddn=function(n){this.words[0]+=n;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},u.prototype.isubn=function(n){if(l("number"==typeof n),l(n<67108864),n<0)return this.iaddn(-n);if(0!==this.negative)return this.negative=0,this.iaddn(n),this.negative=1,this;if(this.words[0]-=n,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},u.prototype.addn=function(n){return this.clone().iaddn(n)},u.prototype.subn=function(n){return this.clone().isubn(n)},u.prototype.iabs=function(){return this.negative=0,this},u.prototype.abs=function(){return this.clone().iabs()},u.prototype._ishlnsubmul=function(n,t,e){var r,u,i=n.length+e;this._expand(i);var o=0;for(r=0;r<n.length;r++){u=(0|this.words[r+e])+o;var s=(0|n.words[r])*t;o=((u-=67108863&s)>>26)-(s/67108864|0),this.words[r+e]=67108863&u}for(;r<this.length-e;r++)o=(u=(0|this.words[r+e])+o)>>26,this.words[r+e]=67108863&u;if(0===o)return this._strip();for(l(-1===o),o=0,r=0;r<this.length;r++)o=(u=-(0|this.words[r])+o)>>26,this.words[r]=67108863&u;return this.negative=1,this._strip()},u.prototype._wordDiv=function(n,t){var e=(this.length,n.length),l=this.clone(),r=n,i=0|r.words[r.length-1];0!==(e=26-this._countBits(i))&&(r=r.ushln(e),l.iushln(e),i=0|r.words[r.length-1]);var o,s=l.length-r.length;if("mod"!==t){(o=new u(null)).length=s+1,o.words=new Array(o.length);for(var a=0;a<o.length;a++)o.words[a]=0}var c=l.clone()._ishlnsubmul(r,1,s);0===c.negative&&(l=c,o&&(o.words[s]=1));for(var h=s-1;h>=0;h--){var d=67108864*(0|l.words[r.length+h])+(0|l.words[r.length+h-1]);for(d=Math.min(d/i|0,67108863),l._ishlnsubmul(r,d,h);0!==l.negative;)d--,l.negative=0,l._ishlnsubmul(r,1,h),l.isZero()||(l.negative^=1);o&&(o.words[h]=d)}return o&&o._strip(),l._strip(),"div"!==t&&0!==e&&l.iushrn(e),{div:o||null,mod:l}},u.prototype.divmod=function(n,t,e){return l(!n.isZero()),this.isZero()?{div:new u(0),mod:new u(0)}:0!==this.negative&&0===n.negative?(o=this.neg().divmod(n,t),"mod"!==t&&(r=o.div.neg()),"div"!==t&&(i=o.mod.neg(),e&&0!==i.negative&&i.iadd(n)),{div:r,mod:i}):0===this.negative&&0!==n.negative?(o=this.divmod(n.neg(),t),"mod"!==t&&(r=o.div.neg()),{div:r,mod:o.mod}):0!=(this.negative&n.negative)?(o=this.neg().divmod(n.neg(),t),"div"!==t&&(i=o.mod.neg(),e&&0!==i.negative&&i.isub(n)),{div:o.div,mod:i}):n.length>this.length||this.cmp(n)<0?{div:new u(0),mod:this}:1===n.length?"div"===t?{div:this.divn(n.words[0]),mod:null}:"mod"===t?{div:null,mod:new u(this.modrn(n.words[0]))}:{div:this.divn(n.words[0]),mod:new u(this.modrn(n.words[0]))}:this._wordDiv(n,t);var r,i,o},u.prototype.div=function(n){return this.divmod(n,"div",!1).div},u.prototype.mod=function(n){return this.divmod(n,"mod",!1).mod},u.prototype.umod=function(n){return this.divmod(n,"mod",!0).mod},u.prototype.divRound=function(n){var t=this.divmod(n);if(t.mod.isZero())return t.div;var e=0!==t.div.negative?t.mod.isub(n):t.mod,l=n.ushrn(1),r=n.andln(1),u=e.cmp(l);return u<0||1===r&&0===u?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},u.prototype.modrn=function(n){var t=n<0;t&&(n=-n),l(n<=67108863);for(var e=(1<<26)%n,r=0,u=this.length-1;u>=0;u--)r=(e*r+(0|this.words[u]))%n;return t?-r:r},u.prototype.modn=function(n){return this.modrn(n)},u.prototype.idivn=function(n){var t=n<0;t&&(n=-n),l(n<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var u=(0|this.words[r])+67108864*e;this.words[r]=u/n|0,e=u%n}return this._strip(),t?this.ineg():this},u.prototype.divn=function(n){return this.clone().idivn(n)},u.prototype.egcd=function(n){l(0===n.negative),l(!n.isZero());var t=this,e=n.clone();t=0!==t.negative?t.umod(n):t.clone();for(var r=new u(1),i=new u(0),o=new u(0),s=new u(1),a=0;t.isEven()&&e.isEven();)t.iushrn(1),e.iushrn(1),++a;for(var c=e.clone(),h=t.clone();!t.isZero();){for(var d=0,f=1;0==(t.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(r.isOdd()||i.isOdd())&&(r.iadd(c),i.isub(h)),r.iushrn(1),i.iushrn(1);for(var p=0,g=1;0==(e.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(e.iushrn(p);p-- >0;)(o.isOdd()||s.isOdd())&&(o.iadd(c),s.isub(h)),o.iushrn(1),s.iushrn(1);t.cmp(e)>=0?(t.isub(e),r.isub(o),i.isub(s)):(e.isub(t),o.isub(r),s.isub(i))}return{a:o,b:s,gcd:e.iushln(a)}},u.prototype._invmp=function(n){l(0===n.negative),l(!n.isZero());var t=this,e=n.clone();t=0!==t.negative?t.umod(n):t.clone();for(var r,i=new u(1),o=new u(0),s=e.clone();t.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,c=1;0==(t.words[0]&c)&&a<26;++a,c<<=1);if(a>0)for(t.iushrn(a);a-- >0;)i.isOdd()&&i.iadd(s),i.iushrn(1);for(var h=0,d=1;0==(e.words[0]&d)&&h<26;++h,d<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(s),o.iushrn(1);t.cmp(e)>=0?(t.isub(e),i.isub(o)):(e.isub(t),o.isub(i))}return(r=0===t.cmpn(1)?i:o).cmpn(0)<0&&r.iadd(n),r},u.prototype.gcd=function(n){if(this.isZero())return n.abs();if(n.isZero())return this.abs();var t=this.clone(),e=n.clone();t.negative=0,e.negative=0;for(var l=0;t.isEven()&&e.isEven();l++)t.iushrn(1),e.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;e.isEven();)e.iushrn(1);var r=t.cmp(e);if(r<0){var u=t;t=e,e=u}else if(0===r||0===e.cmpn(1))break;t.isub(e)}return e.iushln(l)},u.prototype.invm=function(n){return this.egcd(n).a.umod(n)},u.prototype.isEven=function(){return 0==(1&this.words[0])},u.prototype.isOdd=function(){return 1==(1&this.words[0])},u.prototype.andln=function(n){return this.words[0]&n},u.prototype.bincn=function(n){l("number"==typeof n);var t=n%26,e=(n-t)/26,r=1<<t;if(this.length<=e)return this._expand(e+1),this.words[e]|=r,this;for(var u=r,i=e;0!==u&&i<this.length;i++){var o=0|this.words[i];u=(o+=u)>>>26,o&=67108863,this.words[i]=o}return 0!==u&&(this.words[i]=u,this.length++),this},u.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},u.prototype.cmpn=function(n){var t,e=n<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this._strip(),this.length>1)t=1;else{e&&(n=-n),l(n<=67108863,"Number is too big");var r=0|this.words[0];t=r===n?0:r<n?-1:1}return 0!==this.negative?0|-t:t},u.prototype.cmp=function(n){if(0!==this.negative&&0===n.negative)return-1;if(0===this.negative&&0!==n.negative)return 1;var t=this.ucmp(n);return 0!==this.negative?0|-t:t},u.prototype.ucmp=function(n){if(this.length>n.length)return 1;if(this.length<n.length)return-1;for(var t=0,e=this.length-1;e>=0;e--){var l=0|this.words[e],r=0|n.words[e];if(l!==r){l<r?t=-1:l>r&&(t=1);break}}return t},u.prototype.gtn=function(n){return 1===this.cmpn(n)},u.prototype.gt=function(n){return 1===this.cmp(n)},u.prototype.gten=function(n){return this.cmpn(n)>=0},u.prototype.gte=function(n){return this.cmp(n)>=0},u.prototype.ltn=function(n){return-1===this.cmpn(n)},u.prototype.lt=function(n){return-1===this.cmp(n)},u.prototype.lten=function(n){return this.cmpn(n)<=0},u.prototype.lte=function(n){return this.cmp(n)<=0},u.prototype.eqn=function(n){return 0===this.cmpn(n)},u.prototype.eq=function(n){return 0===this.cmp(n)},u.red=function(n){return new S(n)},u.prototype.toRed=function(n){return l(!this.red,"Already a number in reduction context"),l(0===this.negative,"red works only with positives"),n.convertTo(this)._forceRed(n)},u.prototype.fromRed=function(){return l(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},u.prototype._forceRed=function(n){return this.red=n,this},u.prototype.forceRed=function(n){return l(!this.red,"Already a number in reduction context"),this._forceRed(n)},u.prototype.redAdd=function(n){return l(this.red,"redAdd works only with red numbers"),this.red.add(this,n)},u.prototype.redIAdd=function(n){return l(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,n)},u.prototype.redSub=function(n){return l(this.red,"redSub works only with red numbers"),this.red.sub(this,n)},u.prototype.redISub=function(n){return l(this.red,"redISub works only with red numbers"),this.red.isub(this,n)},u.prototype.redShl=function(n){return l(this.red,"redShl works only with red numbers"),this.red.shl(this,n)},u.prototype.redMul=function(n){return l(this.red,"redMul works only with red numbers"),this.red._verify2(this,n),this.red.mul(this,n)},u.prototype.redIMul=function(n){return l(this.red,"redMul works only with red numbers"),this.red._verify2(this,n),this.red.imul(this,n)},u.prototype.redSqr=function(){return l(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},u.prototype.redISqr=function(){return l(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},u.prototype.redSqrt=function(){return l(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},u.prototype.redInvm=function(){return l(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},u.prototype.redNeg=function(){return l(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},u.prototype.redPow=function(n){return l(this.red&&!n.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,n)};var v={k256:null,p224:null,p192:null,p25519:null};function k(n,t){this.name=n,this.p=new u(t,16),this.n=this.p.bitLength(),this.k=new u(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function I(){k.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function A(){k.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function _(){k.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function E(){k.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function S(n){if("string"==typeof n){var t=u._prime(n);this.m=t.p,this.prime=t}else l(n.gtn(1),"modulus must be greater than 1"),this.m=n,this.prime=null}function T(n){S.call(this,n),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new u(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}k.prototype._tmp=function(){var n=new u(null);return n.words=new Array(Math.ceil(this.n/13)),n},k.prototype.ireduce=function(n){var t,e=n;do{this.split(e,this.tmp),t=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(t>this.n);var l=t<this.n?-1:e.ucmp(this.p);return 0===l?(e.words[0]=0,e.length=1):l>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},k.prototype.split=function(n,t){n.iushrn(this.n,0,t)},k.prototype.imulK=function(n){return n.imul(this.k)},r(I,k),I.prototype.split=function(n,t){for(var e=4194303,l=Math.min(n.length,9),r=0;r<l;r++)t.words[r]=n.words[r];if(t.length=l,n.length<=9)return n.words[0]=0,void(n.length=1);var u=n.words[9];for(t.words[t.length++]=u&e,r=10;r<n.length;r++){var i=0|n.words[r];n.words[r-10]=(i&e)<<4|u>>>22,u=i}u>>>=22,n.words[r-10]=u,0===u&&n.length>10?n.length-=10:n.length-=9},I.prototype.imulK=function(n){n.words[n.length]=0,n.words[n.length+1]=0,n.length+=2;for(var t=0,e=0;e<n.length;e++){var l=0|n.words[e];t+=977*l,n.words[e]=67108863&t,t=64*l+(t/67108864|0)}return 0===n.words[n.length-1]&&(n.length--,0===n.words[n.length-1]&&n.length--),n},r(A,k),r(_,k),r(E,k),E.prototype.imulK=function(n){for(var t=0,e=0;e<n.length;e++){var l=19*(0|n.words[e])+t,r=67108863&l;l>>>=26,n.words[e]=r,t=l}return 0!==t&&(n.words[n.length++]=t),n},u._prime=function(n){if(v[n])return v[n];var t;if("k256"===n)t=new I;else if("p224"===n)t=new A;else if("p192"===n)t=new _;else{if("p25519"!==n)throw new Error("Unknown prime "+n);t=new E}return v[n]=t,t},S.prototype._verify1=function(n){l(0===n.negative,"red works only with positives"),l(n.red,"red works only with red numbers")},S.prototype._verify2=function(n,t){l(0==(n.negative|t.negative),"red works only with positives"),l(n.red&&n.red===t.red,"red works only with red numbers")},S.prototype.imod=function(n){return this.prime?this.prime.ireduce(n)._forceRed(this):(c(n,n.umod(this.m)._forceRed(this)),n)},S.prototype.neg=function(n){return n.isZero()?n.clone():this.m.sub(n)._forceRed(this)},S.prototype.add=function(n,t){this._verify2(n,t);var e=n.add(t);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},S.prototype.iadd=function(n,t){this._verify2(n,t);var e=n.iadd(t);return e.cmp(this.m)>=0&&e.isub(this.m),e},S.prototype.sub=function(n,t){this._verify2(n,t);var e=n.sub(t);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},S.prototype.isub=function(n,t){this._verify2(n,t);var e=n.isub(t);return e.cmpn(0)<0&&e.iadd(this.m),e},S.prototype.shl=function(n,t){return this._verify1(n),this.imod(n.ushln(t))},S.prototype.imul=function(n,t){return this._verify2(n,t),this.imod(n.imul(t))},S.prototype.mul=function(n,t){return this._verify2(n,t),this.imod(n.mul(t))},S.prototype.isqr=function(n){return this.imul(n,n.clone())},S.prototype.sqr=function(n){return this.mul(n,n)},S.prototype.sqrt=function(n){if(n.isZero())return n.clone();var t=this.m.andln(3);if(l(t%2==1),3===t){var e=this.m.add(new u(1)).iushrn(2);return this.pow(n,e)}for(var r=this.m.subn(1),i=0;!r.isZero()&&0===r.andln(1);)i++,r.iushrn(1);l(!r.isZero());var o=new u(1).toRed(this),s=o.redNeg(),a=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new u(2*c*c).toRed(this);0!==this.pow(c,a).cmp(s);)c.redIAdd(s);for(var h=this.pow(c,r),d=this.pow(n,r.addn(1).iushrn(1)),f=this.pow(n,r),p=i;0!==f.cmp(o);){for(var g=f,y=0;0!==g.cmp(o);y++)g=g.redSqr();l(y<p);var m=this.pow(h,new u(1).iushln(p-y-1));d=d.redMul(m),h=m.redSqr(),f=f.redMul(h),p=y}return d},S.prototype.invm=function(n){var t=n._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},S.prototype.pow=function(n,t){if(t.isZero())return new u(1).toRed(this);if(0===t.cmpn(1))return n.clone();var e=new Array(16);e[0]=new u(1).toRed(this),e[1]=n;for(var l=2;l<e.length;l++)e[l]=this.mul(e[l-1],n);var r=e[0],i=0,o=0,s=t.bitLength()%26;for(0===s&&(s=26),l=t.length-1;l>=0;l--){for(var a=t.words[l],c=s-1;c>=0;c--){var h=a>>c&1;r!==e[0]&&(r=this.sqr(r)),0!==h||0!==i?(i<<=1,i|=h,(4===++o||0===l&&0===c)&&(r=this.mul(r,e[i]),o=0,i=0)):o=0}s=26}return r},S.prototype.convertTo=function(n){var t=n.umod(this.m);return t===n?t.clone():t},S.prototype.convertFrom=function(n){var t=n.clone();return t.red=null,t},u.mont=function(n){return new T(n)},r(T,S),T.prototype.convertTo=function(n){return this.imod(n.ushln(this.shift))},T.prototype.convertFrom=function(n){var t=this.imod(n.mul(this.rinv));return t.red=null,t},T.prototype.imul=function(n,t){if(n.isZero()||t.isZero())return n.words[0]=0,n.length=1,n;var e=n.imul(t),l=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=e.isub(l).iushrn(this.shift),u=r;return r.cmp(this.m)>=0?u=r.isub(this.m):r.cmpn(0)<0&&(u=r.iadd(this.m)),u._forceRed(this)},T.prototype.mul=function(n,t){if(n.isZero()||t.isZero())return new u(0)._forceRed(this);var e=n.mul(t),l=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=e.isub(l).iushrn(this.shift),i=r;return r.cmp(this.m)>=0?i=r.isub(this.m):r.cmpn(0)<0&&(i=r.iadd(this.m)),i._forceRed(this)},T.prototype.invm=function(n){return this.imod(n._invmp(this.m).mul(this.r2))._forceRed(this)}}(n=e.nmd(n),this)},83871:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e),Object.defineProperty(n,l,{enumerable:!0,get:function(){return t[e]}})}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__setModuleDefault||(Object.create?function(n,t){Object.defineProperty(n,"default",{enumerable:!0,value:t})}:function(n,t){n.default=t}),u=this&&this.__decorate||function(n,t,e,l){var r,u=arguments.length,i=u<3?t:null===l?l=Object.getOwnPropertyDescriptor(t,e):l;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,t,e,l);else for(var o=n.length-1;o>=0;o--)(r=n[o])&&(i=(u<3?r(i):u>3?r(t,e,i):r(t,e))||i);return u>3&&i&&Object.defineProperty(t,e,i),i},i=this&&this.__importStar||function(n){if(n&&n.__esModule)return n;var t={};if(null!=n)for(var e in n)"default"!==e&&Object.hasOwnProperty.call(n,e)&&l(t,n,e);return r(t,n),t},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(t,"__esModule",{value:!0}),t.deserializeUnchecked=t.deserialize=t.serialize=t.BinaryReader=t.BinaryWriter=t.BorshError=t.baseDecode=t.baseEncode=void 0;const s=o(e(62197)),a=o(e(17022)),c=i(e(92338)),h=new("function"!=typeof TextDecoder?c.TextDecoder:TextDecoder)("utf-8",{fatal:!0});t.baseEncode=function(n){return"string"==typeof n&&(n=Buffer.from(n,"utf8")),a.default.encode(Buffer.from(n))},t.baseDecode=function(n){return Buffer.from(a.default.decode(n))};const d=1024;class f extends Error{constructor(n){super(n),this.fieldPath=[],this.originalMessage=n}addToFieldPath(n){this.fieldPath.splice(0,0,n),this.message=this.originalMessage+": "+this.fieldPath.join(".")}}t.BorshError=f;class p{constructor(){this.buf=Buffer.alloc(d),this.length=0}maybeResize(){this.buf.length<16+this.length&&(this.buf=Buffer.concat([this.buf,Buffer.alloc(d)]))}writeU8(n){this.maybeResize(),this.buf.writeUInt8(n,this.length),this.length+=1}writeU16(n){this.maybeResize(),this.buf.writeUInt16LE(n,this.length),this.length+=2}writeU32(n){this.maybeResize(),this.buf.writeUInt32LE(n,this.length),this.length+=4}writeU64(n){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(n).toArray("le",8)))}writeU128(n){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(n).toArray("le",16)))}writeU256(n){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(n).toArray("le",32)))}writeU512(n){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(n).toArray("le",64)))}writeBuffer(n){this.buf=Buffer.concat([Buffer.from(this.buf.subarray(0,this.length)),n,Buffer.alloc(d)]),this.length+=n.length}writeString(n){this.maybeResize();const t=Buffer.from(n,"utf8");this.writeU32(t.length),this.writeBuffer(t)}writeFixedArray(n){this.writeBuffer(Buffer.from(n))}writeArray(n,t){this.maybeResize(),this.writeU32(n.length);for(const e of n)this.maybeResize(),t(e)}toArray(){return this.buf.subarray(0,this.length)}}function g(n,t,e){const l=e.value;e.value=function(...n){try{return l.apply(this,n)}catch(t){if(t instanceof RangeError){const n=t.code;if(["ERR_BUFFER_OUT_OF_BOUNDS","ERR_OUT_OF_RANGE"].indexOf(n)>=0)throw new f("Reached the end of buffer when deserializing")}throw t}}}t.BinaryWriter=p;class y{constructor(n){this.buf=n,this.offset=0}readU8(){const n=this.buf.readUInt8(this.offset);return this.offset+=1,n}readU16(){const n=this.buf.readUInt16LE(this.offset);return this.offset+=2,n}readU32(){const n=this.buf.readUInt32LE(this.offset);return this.offset+=4,n}readU64(){const n=this.readBuffer(8);return new s.default(n,"le")}readU128(){const n=this.readBuffer(16);return new s.default(n,"le")}readU256(){const n=this.readBuffer(32);return new s.default(n,"le")}readU512(){const n=this.readBuffer(64);return new s.default(n,"le")}readBuffer(n){if(this.offset+n>this.buf.length)throw new f(`Expected buffer length ${n} isn't within bounds`);const t=this.buf.slice(this.offset,this.offset+n);return this.offset+=n,t}readString(){const n=this.readU32(),t=this.readBuffer(n);try{return h.decode(t)}catch(e){throw new f(`Error decoding UTF-8 string: ${e}`)}}readFixedArray(n){return new Uint8Array(this.readBuffer(n))}readArray(n){const t=this.readU32(),e=Array();for(let l=0;l<t;++l)e.push(n());return e}}function m(n){return n.charAt(0).toUpperCase()+n.slice(1)}function b(n,t,e,l,r){try{if("string"==typeof l)r[`write${m(l)}`](e);else if(l instanceof Array)if("number"==typeof l[0]){if(e.length!==l[0])throw new f(`Expecting byte array of length ${l[0]}, but got ${e.length} bytes`);r.writeFixedArray(e)}else if(2===l.length&&"number"==typeof l[1]){if(e.length!==l[1])throw new f(`Expecting byte array of length ${l[1]}, but got ${e.length} bytes`);for(let t=0;t<l[1];t++)b(n,null,e[t],l[0],r)}else r.writeArray(e,(e=>{b(n,t,e,l[0],r)}));else if(void 0!==l.kind)switch(l.kind){case"option":null==e?r.writeU8(0):(r.writeU8(1),b(n,t,e,l.type,r));break;case"map":r.writeU32(e.size),e.forEach(((e,u)=>{b(n,t,u,l.key,r),b(n,t,e,l.value,r)}));break;default:throw new f(`FieldType ${l} unrecognized`)}else w(n,e,r)}catch(u){throw u instanceof f&&u.addToFieldPath(t),u}}function w(n,t,e){if("function"==typeof t.borshSerialize)return void t.borshSerialize(e);const l=n.get(t.constructor);if(!l)throw new f(`Class ${t.constructor.name} is missing in schema`);if("struct"===l.kind)l.fields.map((([l,r])=>{b(n,l,t[l],r,e)}));else{if("enum"!==l.kind)throw new f(`Unexpected schema kind: ${l.kind} for ${t.constructor.name}`);{const r=t[l.field];for(let u=0;u<l.values.length;++u){const[i,o]=l.values[u];if(i===r){e.writeU8(u),b(n,i,t[i],o,e);break}}}}}function v(n,t,e,l){try{if("string"==typeof e)return l[`read${m(e)}`]();if(e instanceof Array){if("number"==typeof e[0])return l.readFixedArray(e[0]);if("number"==typeof e[1]){const t=[];for(let r=0;r<e[1];r++)t.push(v(n,null,e[0],l));return t}return l.readArray((()=>v(n,t,e[0],l)))}if("option"===e.kind){return l.readU8()?v(n,t,e.type,l):void 0}if("map"===e.kind){let r=new Map;const u=l.readU32();for(let i=0;i<u;i++){const u=v(n,t,e.key,l),i=v(n,t,e.value,l);r.set(u,i)}return r}return k(n,e,l)}catch(r){throw r instanceof f&&r.addToFieldPath(t),r}}function k(n,t,e){if("function"==typeof t.borshDeserialize)return t.borshDeserialize(e);const l=n.get(t);if(!l)throw new f(`Class ${t.name} is missing in schema`);if("struct"===l.kind){const l={};for(const[r,u]of n.get(t).fields)l[r]=v(n,r,u,e);return new t(l)}if("enum"===l.kind){const r=e.readU8();if(r>=l.values.length)throw new f(`Enum index: ${r} is out of range`);const[u,i]=l.values[r];return new t({[u]:v(n,u,i,e)})}throw new f(`Unexpected schema kind: ${l.kind} for ${t.constructor.name}`)}u([g],y.prototype,"readU8",null),u([g],y.prototype,"readU16",null),u([g],y.prototype,"readU32",null),u([g],y.prototype,"readU64",null),u([g],y.prototype,"readU128",null),u([g],y.prototype,"readU256",null),u([g],y.prototype,"readU512",null),u([g],y.prototype,"readString",null),u([g],y.prototype,"readFixedArray",null),u([g],y.prototype,"readArray",null),t.BinaryReader=y,t.serialize=function(n,t,e=p){const l=new e;return w(n,t,l),l.toArray()},t.deserialize=function(n,t,e,l=y){const r=new l(e),u=k(n,t,r);if(r.offset<e.length)throw new f(`Unexpected ${e.length-r.offset} bytes after deserialized data`);return u},t.deserializeUnchecked=function(n,t,e,l=y){return k(n,t,new l(e))}},17022:(n,t,e)=>{var l=e(18166);n.exports=l("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},48834:(n,t,e)=>{"use strict";var l=e(95766),r=e(62333),u="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=s,t.SlowBuffer=function(n){+n!=n&&(n=0);return s.alloc(+n)},t.INSPECT_MAX_BYTES=50;var i=2147483647;function o(n){if(n>i)throw new RangeError('The value "'+n+'" is invalid for option "size"');var t=new Uint8Array(n);return Object.setPrototypeOf(t,s.prototype),t}function s(n,t,e){if("number"==typeof n){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(n)}return a(n,t,e)}function a(n,t,e){if("string"==typeof n)return function(n,t){"string"==typeof t&&""!==t||(t="utf8");if(!s.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var e=0|g(n,t),l=o(e),r=l.write(n,t);r!==e&&(l=l.slice(0,r));return l}(n,t);if(ArrayBuffer.isView(n))return function(n){if(W(n,Uint8Array)){var t=new Uint8Array(n);return f(t.buffer,t.byteOffset,t.byteLength)}return d(n)}(n);if(null==n)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n);if(W(n,ArrayBuffer)||n&&W(n.buffer,ArrayBuffer))return f(n,t,e);if("undefined"!=typeof SharedArrayBuffer&&(W(n,SharedArrayBuffer)||n&&W(n.buffer,SharedArrayBuffer)))return f(n,t,e);if("number"==typeof n)throw new TypeError('The "value" argument must not be of type number. Received type number');var l=n.valueOf&&n.valueOf();if(null!=l&&l!==n)return s.from(l,t,e);var r=function(n){if(s.isBuffer(n)){var t=0|p(n.length),e=o(t);return 0===e.length||n.copy(e,0,0,t),e}if(void 0!==n.length)return"number"!=typeof n.length||j(n.length)?o(0):d(n);if("Buffer"===n.type&&Array.isArray(n.data))return d(n.data)}(n);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof n[Symbol.toPrimitive])return s.from(n[Symbol.toPrimitive]("string"),t,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof n)}function c(n){if("number"!=typeof n)throw new TypeError('"size" argument must be of type number');if(n<0)throw new RangeError('The value "'+n+'" is invalid for option "size"')}function h(n){return c(n),o(n<0?0:0|p(n))}function d(n){for(var t=n.length<0?0:0|p(n.length),e=o(t),l=0;l<t;l+=1)e[l]=255&n[l];return e}function f(n,t,e){if(t<0||n.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(n.byteLength<t+(e||0))throw new RangeError('"length" is outside of buffer bounds');var l;return l=void 0===t&&void 0===e?new Uint8Array(n):void 0===e?new Uint8Array(n,t):new Uint8Array(n,t,e),Object.setPrototypeOf(l,s.prototype),l}function p(n){if(n>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|n}function g(n,t){if(s.isBuffer(n))return n.length;if(ArrayBuffer.isView(n)||W(n,ArrayBuffer))return n.byteLength;if("string"!=typeof n)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof n);var e=n.length,l=arguments.length>2&&!0===arguments[2];if(!l&&0===e)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return z(n).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return K(n).length;default:if(r)return l?-1:z(n).length;t=(""+t).toLowerCase(),r=!0}}function y(n,t,e){var l=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(t>>>=0))return"";for(n||(n="utf8");;)switch(n){case"hex":return P(this,t,e);case"utf8":case"utf-8":return S(this,t,e);case"ascii":return x(this,t,e);case"latin1":case"binary":return B(this,t,e);case"base64":return E(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,e);default:if(l)throw new TypeError("Unknown encoding: "+n);n=(n+"").toLowerCase(),l=!0}}function m(n,t,e){var l=n[t];n[t]=n[e],n[e]=l}function b(n,t,e,l,r){if(0===n.length)return-1;if("string"==typeof e?(l=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),j(e=+e)&&(e=r?0:n.length-1),e<0&&(e=n.length+e),e>=n.length){if(r)return-1;e=n.length-1}else if(e<0){if(!r)return-1;e=0}if("string"==typeof t&&(t=s.from(t,l)),s.isBuffer(t))return 0===t.length?-1:w(n,t,e,l,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(n,t,e):Uint8Array.prototype.lastIndexOf.call(n,t,e):w(n,[t],e,l,r);throw new TypeError("val must be string, number or Buffer")}function w(n,t,e,l,r){var u,i=1,o=n.length,s=t.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(n.length<2||t.length<2)return-1;i=2,o/=2,s/=2,e/=2}function a(n,t){return 1===i?n[t]:n.readUInt16BE(t*i)}if(r){var c=-1;for(u=e;u<o;u++)if(a(n,u)===a(t,-1===c?0:u-c)){if(-1===c&&(c=u),u-c+1===s)return c*i}else-1!==c&&(u-=u-c),c=-1}else for(e+s>o&&(e=o-s),u=e;u>=0;u--){for(var h=!0,d=0;d<s;d++)if(a(n,u+d)!==a(t,d)){h=!1;break}if(h)return u}return-1}function v(n,t,e,l){e=Number(e)||0;var r=n.length-e;l?(l=Number(l))>r&&(l=r):l=r;var u=t.length;l>u/2&&(l=u/2);for(var i=0;i<l;++i){var o=parseInt(t.substr(2*i,2),16);if(j(o))return i;n[e+i]=o}return i}function k(n,t,e,l){return D(z(t,n.length-e),n,e,l)}function I(n,t,e,l){return D(function(n){for(var t=[],e=0;e<n.length;++e)t.push(255&n.charCodeAt(e));return t}(t),n,e,l)}function A(n,t,e,l){return D(K(t),n,e,l)}function _(n,t,e,l){return D(function(n,t){for(var e,l,r,u=[],i=0;i<n.length&&!((t-=2)<0);++i)l=(e=n.charCodeAt(i))>>8,r=e%256,u.push(r),u.push(l);return u}(t,n.length-e),n,e,l)}function E(n,t,e){return 0===t&&e===n.length?l.fromByteArray(n):l.fromByteArray(n.slice(t,e))}function S(n,t,e){e=Math.min(n.length,e);for(var l=[],r=t;r<e;){var u,i,o,s,a=n[r],c=null,h=a>239?4:a>223?3:a>191?2:1;if(r+h<=e)switch(h){case 1:a<128&&(c=a);break;case 2:128==(192&(u=n[r+1]))&&(s=(31&a)<<6|63&u)>127&&(c=s);break;case 3:u=n[r+1],i=n[r+2],128==(192&u)&&128==(192&i)&&(s=(15&a)<<12|(63&u)<<6|63&i)>2047&&(s<55296||s>57343)&&(c=s);break;case 4:u=n[r+1],i=n[r+2],o=n[r+3],128==(192&u)&&128==(192&i)&&128==(192&o)&&(s=(15&a)<<18|(63&u)<<12|(63&i)<<6|63&o)>65535&&s<1114112&&(c=s)}null===c?(c=65533,h=1):c>65535&&(c-=65536,l.push(c>>>10&1023|55296),c=56320|1023&c),l.push(c),r+=h}return function(n){var t=n.length;if(t<=T)return String.fromCharCode.apply(String,n);var e="",l=0;for(;l<t;)e+=String.fromCharCode.apply(String,n.slice(l,l+=T));return e}(l)}t.kMaxLength=i,s.TYPED_ARRAY_SUPPORT=function(){try{var n=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(n,t),42===n.foo()}catch(e){return!1}}(),s.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(s.prototype,"parent",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.buffer}}),Object.defineProperty(s.prototype,"offset",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.byteOffset}}),s.poolSize=8192,s.from=function(n,t,e){return a(n,t,e)},Object.setPrototypeOf(s.prototype,Uint8Array.prototype),Object.setPrototypeOf(s,Uint8Array),s.alloc=function(n,t,e){return function(n,t,e){return c(n),n<=0?o(n):void 0!==t?"string"==typeof e?o(n).fill(t,e):o(n).fill(t):o(n)}(n,t,e)},s.allocUnsafe=function(n){return h(n)},s.allocUnsafeSlow=function(n){return h(n)},s.isBuffer=function(n){return null!=n&&!0===n._isBuffer&&n!==s.prototype},s.compare=function(n,t){if(W(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),W(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(n)||!s.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(n===t)return 0;for(var e=n.length,l=t.length,r=0,u=Math.min(e,l);r<u;++r)if(n[r]!==t[r]){e=n[r],l=t[r];break}return e<l?-1:l<e?1:0},s.isEncoding=function(n){switch(String(n).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(n,t){if(!Array.isArray(n))throw new TypeError('"list" argument must be an Array of Buffers');if(0===n.length)return s.alloc(0);var e;if(void 0===t)for(t=0,e=0;e<n.length;++e)t+=n[e].length;var l=s.allocUnsafe(t),r=0;for(e=0;e<n.length;++e){var u=n[e];if(W(u,Uint8Array))r+u.length>l.length?s.from(u).copy(l,r):Uint8Array.prototype.set.call(l,u,r);else{if(!s.isBuffer(u))throw new TypeError('"list" argument must be an Array of Buffers');u.copy(l,r)}r+=u.length}return l},s.byteLength=g,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var n=this.length;if(n%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<n;t+=2)m(this,t,t+1);return this},s.prototype.swap32=function(){var n=this.length;if(n%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<n;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},s.prototype.swap64=function(){var n=this.length;if(n%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<n;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},s.prototype.toString=function(){var n=this.length;return 0===n?"":0===arguments.length?S(this,0,n):y.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(n){if(!s.isBuffer(n))throw new TypeError("Argument must be a Buffer");return this===n||0===s.compare(this,n)},s.prototype.inspect=function(){var n="",e=t.INSPECT_MAX_BYTES;return n=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(n+=" ... "),"<Buffer "+n+">"},u&&(s.prototype[u]=s.prototype.inspect),s.prototype.compare=function(n,t,e,l,r){if(W(n,Uint8Array)&&(n=s.from(n,n.offset,n.byteLength)),!s.isBuffer(n))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof n);if(void 0===t&&(t=0),void 0===e&&(e=n?n.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),t<0||e>n.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&t>=e)return 0;if(l>=r)return-1;if(t>=e)return 1;if(this===n)return 0;for(var u=(r>>>=0)-(l>>>=0),i=(e>>>=0)-(t>>>=0),o=Math.min(u,i),a=this.slice(l,r),c=n.slice(t,e),h=0;h<o;++h)if(a[h]!==c[h]){u=a[h],i=c[h];break}return u<i?-1:i<u?1:0},s.prototype.includes=function(n,t,e){return-1!==this.indexOf(n,t,e)},s.prototype.indexOf=function(n,t,e){return b(this,n,t,e,!0)},s.prototype.lastIndexOf=function(n,t,e){return b(this,n,t,e,!1)},s.prototype.write=function(n,t,e,l){if(void 0===t)l="utf8",e=this.length,t=0;else if(void 0===e&&"string"==typeof t)l=t,e=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(e)?(e>>>=0,void 0===l&&(l="utf8")):(l=e,e=void 0)}var r=this.length-t;if((void 0===e||e>r)&&(e=r),n.length>0&&(e<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");for(var u=!1;;)switch(l){case"hex":return v(this,n,t,e);case"utf8":case"utf-8":return k(this,n,t,e);case"ascii":case"latin1":case"binary":return I(this,n,t,e);case"base64":return A(this,n,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,n,t,e);default:if(u)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),u=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var T=4096;function x(n,t,e){var l="";e=Math.min(n.length,e);for(var r=t;r<e;++r)l+=String.fromCharCode(127&n[r]);return l}function B(n,t,e){var l="";e=Math.min(n.length,e);for(var r=t;r<e;++r)l+=String.fromCharCode(n[r]);return l}function P(n,t,e){var l=n.length;(!t||t<0)&&(t=0),(!e||e<0||e>l)&&(e=l);for(var r="",u=t;u<e;++u)r+=F[n[u]];return r}function R(n,t,e){for(var l=n.slice(t,e),r="",u=0;u<l.length-1;u+=2)r+=String.fromCharCode(l[u]+256*l[u+1]);return r}function O(n,t,e){if(n%1!=0||n<0)throw new RangeError("offset is not uint");if(n+t>e)throw new RangeError("Trying to access beyond buffer length")}function M(n,t,e,l,r,u){if(!s.isBuffer(n))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<u)throw new RangeError('"value" argument is out of bounds');if(e+l>n.length)throw new RangeError("Index out of range")}function C(n,t,e,l,r,u){if(e+l>n.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function U(n,t,e,l,u){return t=+t,e>>>=0,u||C(n,0,e,4),r.write(n,t,e,l,23,4),e+4}function L(n,t,e,l,u){return t=+t,e>>>=0,u||C(n,0,e,8),r.write(n,t,e,l,52,8),e+8}s.prototype.slice=function(n,t){var e=this.length;(n=~~n)<0?(n+=e)<0&&(n=0):n>e&&(n=e),(t=void 0===t?e:~~t)<0?(t+=e)<0&&(t=0):t>e&&(t=e),t<n&&(t=n);var l=this.subarray(n,t);return Object.setPrototypeOf(l,s.prototype),l},s.prototype.readUintLE=s.prototype.readUIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);for(var l=this[n],r=1,u=0;++u<t&&(r*=256);)l+=this[n+u]*r;return l},s.prototype.readUintBE=s.prototype.readUIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);for(var l=this[n+--t],r=1;t>0&&(r*=256);)l+=this[n+--t]*r;return l},s.prototype.readUint8=s.prototype.readUInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),this[n]},s.prototype.readUint16LE=s.prototype.readUInt16LE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]|this[n+1]<<8},s.prototype.readUint16BE=s.prototype.readUInt16BE=function(n,t){return n>>>=0,t||O(n,2,this.length),this[n]<<8|this[n+1]},s.prototype.readUint32LE=s.prototype.readUInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),(this[n]|this[n+1]<<8|this[n+2]<<16)+16777216*this[n+3]},s.prototype.readUint32BE=s.prototype.readUInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),16777216*this[n]+(this[n+1]<<16|this[n+2]<<8|this[n+3])},s.prototype.readIntLE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);for(var l=this[n],r=1,u=0;++u<t&&(r*=256);)l+=this[n+u]*r;return l>=(r*=128)&&(l-=Math.pow(2,8*t)),l},s.prototype.readIntBE=function(n,t,e){n>>>=0,t>>>=0,e||O(n,t,this.length);for(var l=t,r=1,u=this[n+--l];l>0&&(r*=256);)u+=this[n+--l]*r;return u>=(r*=128)&&(u-=Math.pow(2,8*t)),u},s.prototype.readInt8=function(n,t){return n>>>=0,t||O(n,1,this.length),128&this[n]?-1*(255-this[n]+1):this[n]},s.prototype.readInt16LE=function(n,t){n>>>=0,t||O(n,2,this.length);var e=this[n]|this[n+1]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt16BE=function(n,t){n>>>=0,t||O(n,2,this.length);var e=this[n+1]|this[n]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt32LE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]|this[n+1]<<8|this[n+2]<<16|this[n+3]<<24},s.prototype.readInt32BE=function(n,t){return n>>>=0,t||O(n,4,this.length),this[n]<<24|this[n+1]<<16|this[n+2]<<8|this[n+3]},s.prototype.readFloatLE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!0,23,4)},s.prototype.readFloatBE=function(n,t){return n>>>=0,t||O(n,4,this.length),r.read(this,n,!1,23,4)},s.prototype.readDoubleLE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!0,52,8)},s.prototype.readDoubleBE=function(n,t){return n>>>=0,t||O(n,8,this.length),r.read(this,n,!1,52,8)},s.prototype.writeUintLE=s.prototype.writeUIntLE=function(n,t,e,l){(n=+n,t>>>=0,e>>>=0,l)||M(this,n,t,e,Math.pow(2,8*e)-1,0);var r=1,u=0;for(this[t]=255&n;++u<e&&(r*=256);)this[t+u]=n/r&255;return t+e},s.prototype.writeUintBE=s.prototype.writeUIntBE=function(n,t,e,l){(n=+n,t>>>=0,e>>>=0,l)||M(this,n,t,e,Math.pow(2,8*e)-1,0);var r=e-1,u=1;for(this[t+r]=255&n;--r>=0&&(u*=256);)this[t+r]=n/u&255;return t+e},s.prototype.writeUint8=s.prototype.writeUInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,255,0),this[t]=255&n,t+1},s.prototype.writeUint16LE=s.prototype.writeUInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeUint16BE=s.prototype.writeUInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,65535,0),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeUint32LE=s.prototype.writeUInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t+3]=n>>>24,this[t+2]=n>>>16,this[t+1]=n>>>8,this[t]=255&n,t+4},s.prototype.writeUint32BE=s.prototype.writeUInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,4294967295,0),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeIntLE=function(n,t,e,l){if(n=+n,t>>>=0,!l){var r=Math.pow(2,8*e-1);M(this,n,t,e,r-1,-r)}var u=0,i=1,o=0;for(this[t]=255&n;++u<e&&(i*=256);)n<0&&0===o&&0!==this[t+u-1]&&(o=1),this[t+u]=(n/i>>0)-o&255;return t+e},s.prototype.writeIntBE=function(n,t,e,l){if(n=+n,t>>>=0,!l){var r=Math.pow(2,8*e-1);M(this,n,t,e,r-1,-r)}var u=e-1,i=1,o=0;for(this[t+u]=255&n;--u>=0&&(i*=256);)n<0&&0===o&&0!==this[t+u+1]&&(o=1),this[t+u]=(n/i>>0)-o&255;return t+e},s.prototype.writeInt8=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,1,127,-128),n<0&&(n=255+n+1),this[t]=255&n,t+1},s.prototype.writeInt16LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=255&n,this[t+1]=n>>>8,t+2},s.prototype.writeInt16BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,2,32767,-32768),this[t]=n>>>8,this[t+1]=255&n,t+2},s.prototype.writeInt32LE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),this[t]=255&n,this[t+1]=n>>>8,this[t+2]=n>>>16,this[t+3]=n>>>24,t+4},s.prototype.writeInt32BE=function(n,t,e){return n=+n,t>>>=0,e||M(this,n,t,4,2147483647,-2147483648),n<0&&(n=4294967295+n+1),this[t]=n>>>24,this[t+1]=n>>>16,this[t+2]=n>>>8,this[t+3]=255&n,t+4},s.prototype.writeFloatLE=function(n,t,e){return U(this,n,t,!0,e)},s.prototype.writeFloatBE=function(n,t,e){return U(this,n,t,!1,e)},s.prototype.writeDoubleLE=function(n,t,e){return L(this,n,t,!0,e)},s.prototype.writeDoubleBE=function(n,t,e){return L(this,n,t,!1,e)},s.prototype.copy=function(n,t,e,l){if(!s.isBuffer(n))throw new TypeError("argument should be a Buffer");if(e||(e=0),l||0===l||(l=this.length),t>=n.length&&(t=n.length),t||(t=0),l>0&&l<e&&(l=e),l===e)return 0;if(0===n.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),n.length-t<l-e&&(l=n.length-t+e);var r=l-e;return this===n&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,e,l):Uint8Array.prototype.set.call(n,this.subarray(e,l),t),r},s.prototype.fill=function(n,t,e,l){if("string"==typeof n){if("string"==typeof t?(l=t,t=0,e=this.length):"string"==typeof e&&(l=e,e=this.length),void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!s.isEncoding(l))throw new TypeError("Unknown encoding: "+l);if(1===n.length){var r=n.charCodeAt(0);("utf8"===l&&r<128||"latin1"===l)&&(n=r)}}else"number"==typeof n?n&=255:"boolean"==typeof n&&(n=Number(n));if(t<0||this.length<t||this.length<e)throw new RangeError("Out of range index");if(e<=t)return this;var u;if(t>>>=0,e=void 0===e?this.length:e>>>0,n||(n=0),"number"==typeof n)for(u=t;u<e;++u)this[u]=n;else{var i=s.isBuffer(n)?n:s.from(n,l),o=i.length;if(0===o)throw new TypeError('The value "'+n+'" is invalid for argument "value"');for(u=0;u<e-t;++u)this[u+t]=i[u%o]}return this};var N=/[^+/0-9A-Za-z-_]/g;function z(n,t){var e;t=t||1/0;for(var l=n.length,r=null,u=[],i=0;i<l;++i){if((e=n.charCodeAt(i))>55295&&e<57344){if(!r){if(e>56319){(t-=3)>-1&&u.push(239,191,189);continue}if(i+1===l){(t-=3)>-1&&u.push(239,191,189);continue}r=e;continue}if(e<56320){(t-=3)>-1&&u.push(239,191,189),r=e;continue}e=65536+(r-55296<<10|e-56320)}else r&&(t-=3)>-1&&u.push(239,191,189);if(r=null,e<128){if((t-=1)<0)break;u.push(e)}else if(e<2048){if((t-=2)<0)break;u.push(e>>6|192,63&e|128)}else if(e<65536){if((t-=3)<0)break;u.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;u.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return u}function K(n){return l.toByteArray(function(n){if((n=(n=n.split("=")[0]).trim().replace(N,"")).length<2)return"";for(;n.length%4!=0;)n+="=";return n}(n))}function D(n,t,e,l){for(var r=0;r<l&&!(r+e>=t.length||r>=n.length);++r)t[r+e]=n[r];return r}function W(n,t){return n instanceof t||null!=n&&null!=n.constructor&&null!=n.constructor.name&&n.constructor.name===t.name}function j(n){return n!=n}var F=function(){for(var n="0123456789abcdef",t=new Array(256),e=0;e<16;++e)for(var l=16*e,r=0;r<16;++r)t[l+r]=n[e]+n[r];return t}()},10161:n=>{"use strict";var t=Object.prototype.hasOwnProperty,e="~";function l(){}function r(n,t,e){this.fn=n,this.context=t,this.once=e||!1}function u(n,t,l,u,i){if("function"!=typeof l)throw new TypeError("The listener must be a function");var o=new r(l,u||n,i),s=e?e+t:t;return n._events[s]?n._events[s].fn?n._events[s]=[n._events[s],o]:n._events[s].push(o):(n._events[s]=o,n._eventsCount++),n}function i(n,t){0==--n._eventsCount?n._events=new l:delete n._events[t]}function o(){this._events=new l,this._eventsCount=0}Object.create&&(l.prototype=Object.create(null),(new l).__proto__||(e=!1)),o.prototype.eventNames=function(){var n,l,r=[];if(0===this._eventsCount)return r;for(l in n=this._events)t.call(n,l)&&r.push(e?l.slice(1):l);return Object.getOwnPropertySymbols?r.concat(Object.getOwnPropertySymbols(n)):r},o.prototype.listeners=function(n){var t=e?e+n:n,l=this._events[t];if(!l)return[];if(l.fn)return[l.fn];for(var r=0,u=l.length,i=new Array(u);r<u;r++)i[r]=l[r].fn;return i},o.prototype.listenerCount=function(n){var t=e?e+n:n,l=this._events[t];return l?l.fn?1:l.length:0},o.prototype.emit=function(n,t,l,r,u,i){var o=e?e+n:n;if(!this._events[o])return!1;var s,a,c=this._events[o],h=arguments.length;if(c.fn){switch(c.once&&this.removeListener(n,c.fn,void 0,!0),h){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,l),!0;case 4:return c.fn.call(c.context,t,l,r),!0;case 5:return c.fn.call(c.context,t,l,r,u),!0;case 6:return c.fn.call(c.context,t,l,r,u,i),!0}for(a=1,s=new Array(h-1);a<h;a++)s[a-1]=arguments[a];c.fn.apply(c.context,s)}else{var d,f=c.length;for(a=0;a<f;a++)switch(c[a].once&&this.removeListener(n,c[a].fn,void 0,!0),h){case 1:c[a].fn.call(c[a].context);break;case 2:c[a].fn.call(c[a].context,t);break;case 3:c[a].fn.call(c[a].context,t,l);break;case 4:c[a].fn.call(c[a].context,t,l,r);break;default:if(!s)for(d=1,s=new Array(h-1);d<h;d++)s[d-1]=arguments[d];c[a].fn.apply(c[a].context,s)}}return!0},o.prototype.on=function(n,t,e){return u(this,n,t,e,!1)},o.prototype.once=function(n,t,e){return u(this,n,t,e,!0)},o.prototype.removeListener=function(n,t,l,r){var u=e?e+n:n;if(!this._events[u])return this;if(!t)return i(this,u),this;var o=this._events[u];if(o.fn)o.fn!==t||r&&!o.once||l&&o.context!==l||i(this,u);else{for(var s=0,a=[],c=o.length;s<c;s++)(o[s].fn!==t||r&&!o[s].once||l&&o[s].context!==l)&&a.push(o[s]);a.length?this._events[u]=1===a.length?a[0]:a:i(this,u)}return this},o.prototype.removeAllListeners=function(n){var t;return n?(t=e?e+n:n,this._events[t]&&i(this,t)):(this._events=new l,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=e,o.EventEmitter=o,n.exports=o},62333:(n,t)=>{t.read=function(n,t,e,l,r){var u,i,o=8*r-l-1,s=(1<<o)-1,a=s>>1,c=-7,h=e?r-1:0,d=e?-1:1,f=n[t+h];for(h+=d,u=f&(1<<-c)-1,f>>=-c,c+=o;c>0;u=256*u+n[t+h],h+=d,c-=8);for(i=u&(1<<-c)-1,u>>=-c,c+=l;c>0;i=256*i+n[t+h],h+=d,c-=8);if(0===u)u=1-a;else{if(u===s)return i?NaN:1/0*(f?-1:1);i+=Math.pow(2,l),u-=a}return(f?-1:1)*i*Math.pow(2,u-l)},t.write=function(n,t,e,l,r,u){var i,o,s,a=8*u-r-1,c=(1<<a)-1,h=c>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=l?0:u-1,p=l?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-i))<1&&(i--,s*=2),(t+=i+h>=1?d/s:d*Math.pow(2,1-h))*s>=2&&(i++,s/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*s-1)*Math.pow(2,r),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,r),i=0));r>=8;n[e+f]=255&o,f+=p,o/=256,r-=8);for(i=i<<r|o,a+=r;a>0;n[e+f]=255&i,f+=p,i/=256,a-=8);n[e+f-p]|=128*g}},87414:(n,t,e)=>{"use strict";const l=e(55029).v4,r=e(45901),u=function(n,t){if(!(this instanceof u))return new u(n,t);t||(t={}),this.options={reviver:void 0!==t.reviver?t.reviver:null,replacer:void 0!==t.replacer?t.replacer:null,generator:void 0!==t.generator?t.generator:function(){return l()},version:void 0!==t.version?t.version:2,notificationIdNull:"boolean"==typeof t.notificationIdNull&&t.notificationIdNull},this.callServer=n};n.exports=u,u.prototype.request=function(n,t,e,l){const u=this;let i=null;const o=Array.isArray(n)&&"function"==typeof t;if(1===this.options.version&&o)throw new TypeError("JSON-RPC 1.0 does not support batching");if(o||!o&&n&&"object"==typeof n&&"function"==typeof t)l=t,i=n;else{"function"==typeof e&&(l=e,e=void 0);const u="function"==typeof l;try{i=r(n,t,e,{generator:this.options.generator,version:this.options.version,notificationIdNull:this.options.notificationIdNull})}catch(a){if(u)return l(a);throw a}if(!u)return i}let s;try{s=JSON.stringify(i,this.options.replacer)}catch(a){return l(a)}return this.callServer(s,(function(n,t){u._parseResponse(n,t,l)})),i},u.prototype._parseResponse=function(n,t,e){if(n)return void e(n);if(!t)return e();let l;try{l=JSON.parse(t,this.options.reviver)}catch(n){return e(n)}if(3===e.length){if(Array.isArray(l)){const n=function(n){return void 0!==n.error},t=function(t){return!n(t)};return e(null,l.filter(n),l.filter(t))}return e(null,l.error,l.result)}e(null,l)}},45901:(n,t,e)=>{"use strict";const l=e(55029).v4;n.exports=function(n,t,e,r){if("string"!=typeof n)throw new TypeError(n+" must be a string");const u="number"==typeof(r=r||{}).version?r.version:2;if(1!==u&&2!==u)throw new TypeError(u+" must be 1 or 2");const i={method:n};if(2===u&&(i.jsonrpc="2.0"),t){if("object"!=typeof t&&!Array.isArray(t))throw new TypeError(t+" must be an object, array or omitted");i.params=t}if(void 0===e){const n="function"==typeof r.generator?r.generator:function(){return l()};i.id=n(i,r)}else 2===u&&null===e?r.notificationIdNull&&(i.id=null):i.id=e;return i}},90394:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HDKey=t.HARDENED_OFFSET=t.MASTER_SECRET=void 0;const l=e(59696),r=e(41377),u=e(80590),i=e(96053),o=e(12540),s=e(70064),a=e(53525);l.utils.sha512Sync=(...n)=>(0,o.sha512)(l.utils.concatBytes(...n)),t.MASTER_SECRET=(0,s.utf8ToBytes)("ed25519 seed"),t.HARDENED_OFFSET=2147483648;const c=new Uint8Array([0]);function h(n,...t){return"string"==typeof n&&(n=(0,s.hexToBytes)(n)),(0,a.bytes)(n,...t),n}const d=n=>{if(!Number.isSafeInteger(n)||n<0||n>2**32-1)throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);const t=new Uint8Array(4);return(0,s.createView)(t).setUint32(0,n,!1),t};class f{constructor(n){if(this.depth=0,this.index=0,this.parentFingerprint=0,!n||"object"!=typeof n)throw new Error("HDKey.constructor must not be called directly");if((0,a.bytes)(n.privateKey,32),(0,a.bytes)(n.chainCode,32),this.depth=n.depth||0,this.index=n.index||0,this.parentFingerprint=n.parentFingerprint||0,!this.depth&&(this.parentFingerprint||this.index))throw new Error("HDKey: zero depth with non-zero index/parent fingerprint");this.chainCode=n.chainCode,this.privateKey=n.privateKey}get publicKeyRaw(){return l.sync.getPublicKey(this.privateKey)}get publicKey(){return(0,s.concatBytes)(c,this.publicKeyRaw)}get pubHash(){return n=this.publicKey,(0,u.ripemd160)((0,i.sha256)(n));var n}get fingerprint(){return n=this.pubHash,(0,s.createView)(n).getUint32(0,!1);var n}get fingerprintHex(){return(0,s.bytesToHex)(d(this.fingerprint))}get parentFingerprintHex(){return(0,s.bytesToHex)(d(this.parentFingerprint))}static fromMasterSeed(n){if(8*(n=h(n)).length<128||8*n.length>512)throw new Error(`HDKey: wrong seed length=${n.length}. Should be between 128 and 512 bits; 256 bits is advised)`);const e=(0,r.hmac)(o.sha512,t.MASTER_SECRET,n);return new f({privateKey:e.slice(0,32),chainCode:e.slice(32)})}derive(n,e=!1){if(!/^[mM]'?/.test(n))throw new Error('Path must start with "m" or "M"');if(/^[mM]'?$/.test(n))return this;const l=n.replace(/^[mM]'?\//,"").split("/");let r=this;for(const u of l){const n=/^(\d+)('?)$/.exec(u);if(!n||3!==n.length)throw new Error(`Invalid child index: ${u}`);let l=+n[1];if(!Number.isSafeInteger(l)||l>=t.HARDENED_OFFSET)throw new Error("Invalid index");(e||"'"===n[2])&&(l+=t.HARDENED_OFFSET),r=r.deriveChild(l)}return r}deriveChild(n){if(n<t.HARDENED_OFFSET)throw new Error(`Non-hardened child derivation not possible for Ed25519 (index=${n})`);const e=(0,s.concatBytes)(c,this.privateKey,d(n)),l=(0,r.hmac)(o.sha512,this.chainCode,e);return new f({chainCode:l.slice(32),depth:this.depth+1,parentFingerprint:this.fingerprint,index:n,privateKey:l.slice(0,32)})}sign(n){return n=h(n,32),l.sync.sign(n,this.privateKey)}verify(n,t){return n=h(n,32),t=h(t,64),l.sync.verify(t,n,this.publicKeyRaw)}}t.HDKey=f},50714:(n,t,e)=>{"use strict";var l=e(71600);t.K=void 0;var r=l(e(98870)),u=l(e(53100)),i=l(e(68230)),o=l(e(60421)),s=l(e(1147)),a=l(e(380));function c(n){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var e,l=(0,s.default)(n);if(t){var r=(0,s.default)(this).constructor;e=Reflect.construct(l,arguments,r)}else e=l.apply(this,arguments);return(0,o.default)(this,e)}}var h=function(n){(0,i.default)(e,n);var t=c(e);function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ws://localhost:8080",l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=l.autoconnect,i=void 0===r||r,o=l.reconnect,s=void 0===o||o,c=l.reconnect_interval,h=void 0===c?1e3:c,d=l.max_reconnects,f=void 0===d?5:d,p=arguments.length>2?arguments[2]:void 0;return(0,u.default)(this,e),t.call(this,a.default,n,{autoconnect:i,reconnect:s,reconnect_interval:h,max_reconnects:f},p)}return(0,r.default)(e)}(l(e(98904)).default);t.K=h},98904:(n,t,e)=>{"use strict";var l=e(71600);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(e(82841)),u=l(e(91461)),i=l(e(67425)),o=l(e(53100)),s=l(e(98870)),a=l(e(68230)),c=l(e(60421)),h=l(e(1147)),d=e(10161);function f(n){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var e,l=(0,h.default)(n);if(t){var r=(0,h.default)(this).constructor;e=Reflect.construct(l,arguments,r)}else e=l.apply(this,arguments);return(0,c.default)(this,e)}}var p=function(n,t){var e={};for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&t.indexOf(l)<0&&(e[l]=n[l]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(l=Object.getOwnPropertySymbols(n);r<l.length;r++)t.indexOf(l[r])<0&&Object.prototype.propertyIsEnumerable.call(n,l[r])&&(e[l[r]]=n[l[r]])}return e},g=function(n){(0,a.default)(d,n);var t,e,l,c,h=f(d);function d(n){var t,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ws://localhost:8080",l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0;(0,o.default)(this,d);var u=l.autoconnect,i=void 0===u||u,s=l.reconnect,a=void 0===s||s,c=l.reconnect_interval,f=void 0===c?1e3:c,g=l.max_reconnects,y=void 0===g?5:g,m=p(l,["autoconnect","reconnect","reconnect_interval","max_reconnects"]);return(t=h.call(this)).webSocketFactory=n,t.queue={},t.rpc_id=0,t.address=e,t.autoconnect=i,t.ready=!1,t.reconnect=a,t.reconnect_interval=f,t.max_reconnects=y,t.rest_options=m,t.current_reconnects=0,t.generate_request_id=r||function(){return++t.rpc_id},t.autoconnect&&t._connect(t.address,Object.assign({autoconnect:t.autoconnect,reconnect:t.reconnect,reconnect_interval:t.reconnect_interval,max_reconnects:t.max_reconnects},t.rest_options)),t}return(0,s.default)(d,[{key:"connect",value:function(){this.socket||this._connect(this.address,Object.assign({autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects},this.rest_options))}},{key:"call",value:function(n,t,e,l){var r=this;return l||"object"!==(0,i.default)(e)||(l=e,e=null),new Promise((function(u,i){if(!r.ready)return i(new Error("socket not ready"));var o=r.generate_request_id(n,t),s={jsonrpc:"2.0",method:n,params:t||null,id:o};r.socket.send(JSON.stringify(s),l,(function(n){if(n)return i(n);r.queue[o]={promise:[u,i]},e&&(r.queue[o].timeout=setTimeout((function(){delete r.queue[o],i(new Error("reply timeout"))}),e))}))}))}},{key:"login",value:(c=(0,u.default)(r.default.mark((function n(t){var e;return r.default.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,this.call("rpc.login",t);case 2:if(e=n.sent){n.next=5;break}throw new Error("authentication failed");case 5:return n.abrupt("return",e);case 6:case"end":return n.stop()}}),n,this)}))),function(n){return c.apply(this,arguments)})},{key:"listMethods",value:(l=(0,u.default)(r.default.mark((function n(){return r.default.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,this.call("__listMethods");case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}),n,this)}))),function(){return l.apply(this,arguments)})},{key:"notify",value:function(n,t){var e=this;return new Promise((function(l,r){if(!e.ready)return r(new Error("socket not ready"));var u={jsonrpc:"2.0",method:n,params:t||null};e.socket.send(JSON.stringify(u),(function(n){if(n)return r(n);l()}))}))}},{key:"subscribe",value:(e=(0,u.default)(r.default.mark((function n(t){var e;return r.default.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return"string"==typeof t&&(t=[t]),n.next=3,this.call("rpc.on",t);case 3:if(e=n.sent,"string"!=typeof t||"ok"===e[t]){n.next=6;break}throw new Error("Failed subscribing to an event '"+t+"' with: "+e[t]);case 6:return n.abrupt("return",e);case 7:case"end":return n.stop()}}),n,this)}))),function(n){return e.apply(this,arguments)})},{key:"unsubscribe",value:(t=(0,u.default)(r.default.mark((function n(t){var e;return r.default.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return"string"==typeof t&&(t=[t]),n.next=3,this.call("rpc.off",t);case 3:if(e=n.sent,"string"!=typeof t||"ok"===e[t]){n.next=6;break}throw new Error("Failed unsubscribing from an event with: "+e);case 6:return n.abrupt("return",e);case 7:case"end":return n.stop()}}),n,this)}))),function(n){return t.apply(this,arguments)})},{key:"close",value:function(n,t){this.socket.close(n||1e3,t)}},{key:"_connect",value:function(n,t){var e=this;this.socket=this.webSocketFactory(n,t),this.socket.addEventListener("open",(function(){e.ready=!0,e.emit("open"),e.current_reconnects=0})),this.socket.addEventListener("message",(function(n){var t=n.data;t instanceof ArrayBuffer&&(t=Buffer.from(t).toString());try{t=JSON.parse(t)}catch(u){return}if(t.notification&&e.listeners(t.notification).length){if(!Object.keys(t.params).length)return e.emit(t.notification);var l=[t.notification];if(t.params.constructor===Object)l.push(t.params);else for(var r=0;r<t.params.length;r++)l.push(t.params[r]);return Promise.resolve().then((function(){e.emit.apply(e,l)}))}if(!e.queue[t.id])return t.method&&t.params?Promise.resolve().then((function(){e.emit(t.method,t.params)})):void 0;"error"in t=="result"in t&&e.queue[t.id].promise[1](new Error('Server response malformed. Response must include either "result" or "error", but not both.')),e.queue[t.id].timeout&&clearTimeout(e.queue[t.id].timeout),t.error?e.queue[t.id].promise[1](t.error):e.queue[t.id].promise[0](t.result),delete e.queue[t.id]})),this.socket.addEventListener("error",(function(n){return e.emit("error",n)})),this.socket.addEventListener("close",(function(l){var r=l.code,u=l.reason;e.ready&&setTimeout((function(){return e.emit("close",r,u)}),0),e.ready=!1,e.socket=void 0,1e3!==r&&(e.current_reconnects++,e.reconnect&&(e.max_reconnects>e.current_reconnects||0===e.max_reconnects)&&setTimeout((function(){return e._connect(n,t)}),e.reconnect_interval))}))}}]),d}(d.EventEmitter);t.default=g},380:(n,t,e)=>{"use strict";var l=e(71600);Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(n,t){return new c(n,t)};var r=l(e(53100)),u=l(e(98870)),i=l(e(68230)),o=l(e(60421)),s=l(e(1147));function a(n){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var e,l=(0,s.default)(n);if(t){var r=(0,s.default)(this).constructor;e=Reflect.construct(l,arguments,r)}else e=l.apply(this,arguments);return(0,o.default)(this,e)}}var c=function(n){(0,i.default)(e,n);var t=a(e);function e(n,l,u){var i;return(0,r.default)(this,e),(i=t.call(this)).socket=new window.WebSocket(n,u),i.socket.onopen=function(){return i.emit("open")},i.socket.onmessage=function(n){return i.emit("message",n.data)},i.socket.onerror=function(n){return i.emit("error",n)},i.socket.onclose=function(n){i.emit("close",n.code,n.reason)},i}return(0,u.default)(e,[{key:"send",value:function(n,t,e){var l=e||t;try{this.socket.send(n),l()}catch(r){l(r)}}},{key:"close",value:function(n,t){this.socket.close(n,t)}},{key:"addEventListener",value:function(n,t,e){this.socket.addEventListener(n,t,e)}}]),e}(e(10161).EventEmitter)},77834:(n,t,e)=>{var l=e(48834),r=l.Buffer;function u(n,t){for(var e in n)t[e]=n[e]}function i(n,t,e){return r(n,t,e)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?n.exports=l:(u(l,t),t.Buffer=i),i.prototype=Object.create(r.prototype),u(r,i),i.from=function(n,t,e){if("number"==typeof n)throw new TypeError("Argument must not be a number");return r(n,t,e)},i.alloc=function(n,t,e){if("number"!=typeof n)throw new TypeError("Argument must be a number");var l=r(n);return void 0!==t?"string"==typeof e?l.fill(t,e):l.fill(t):l.fill(0),l},i.allocUnsafe=function(n){if("number"!=typeof n)throw new TypeError("Argument must be a number");return r(n)},i.allocUnsafeSlow=function(n){if("number"!=typeof n)throw new TypeError("Argument must be a number");return l.SlowBuffer(n)}},52087:(n,t,e)=>{var l=e(94951);n.exports={TextEncoder:l.TextEncoder,TextDecoder:l.TextDecoder}},46731:function(n){!function(t){"use strict";n.exports&&(n.exports=t),t["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{})},94951:function(n,t,e){!function(t){"use strict";function l(n,t,e){return t<=n&&n<=e}n.exports&&!t["encoding-indexes"]&&(t["encoding-indexes"]=e(46731)["encoding-indexes"]);var r=Math.floor;function u(n){if(void 0===n)return{};if(n===Object(n))return n;throw TypeError("Could not convert argument to dictionary")}function i(n){return 0<=n&&n<=127}var o=i,s=-1;function a(n){this.tokens=[].slice.call(n),this.tokens.reverse()}a.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():s},prepend:function(n){if(Array.isArray(n))for(var t=n;t.length;)this.tokens.push(t.pop());else this.tokens.push(n)},push:function(n){if(Array.isArray(n))for(var t=n;t.length;)this.tokens.unshift(t.shift());else this.tokens.unshift(n)}};var c=-1;function h(n,t){if(n)throw TypeError("Decoder error");return t||65533}function d(n){throw TypeError("The code point "+n+" could not be encoded.")}function f(n){return n=String(n).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(g,n)?g[n]:null}var p=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],g={};p.forEach((function(n){n.encodings.forEach((function(n){n.labels.forEach((function(t){g[t]=n}))}))}));var y,m,b={},w={};function v(n,t){return t&&t[n]||null}function k(n,t){var e=t.indexOf(n);return-1===e?null:e}function I(n){if(!("encoding-indexes"in t))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return t["encoding-indexes"][n]}var A="utf-8";function _(n,t){if(!(this instanceof _))throw TypeError("Called as a function. Did you forget 'new'?");n=void 0!==n?String(n):A,t=u(t),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var e=f(n);if(null===e||"replacement"===e.name)throw RangeError("Unknown encoding: "+n);if(!w[e.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var l=this;return l._encoding=e,Boolean(t.fatal)&&(l._error_mode="fatal"),Boolean(t.ignoreBOM)&&(l._ignoreBOM=!0),Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase(),this.fatal="fatal"===l._error_mode,this.ignoreBOM=l._ignoreBOM),l}function E(n,e){if(!(this instanceof E))throw TypeError("Called as a function. Did you forget 'new'?");e=u(e),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(e.fatal)?"fatal":"replacement";var l=this;if(Boolean(e.NONSTANDARD_allowLegacyEncoding)){var r=f(n=void 0!==n?String(n):A);if(null===r||"replacement"===r.name)throw RangeError("Unknown encoding: "+n);if(!b[r.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");l._encoding=r}else l._encoding=f("utf-8"),void 0!==n&&"console"in t&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase()),l}function S(n){var t=n.fatal,e=0,r=0,u=0,i=128,o=191;this.handler=function(n,a){if(a===s&&0!==u)return u=0,h(t);if(a===s)return c;if(0===u){if(l(a,0,127))return a;if(l(a,194,223))u=1,e=31&a;else if(l(a,224,239))224===a&&(i=160),237===a&&(o=159),u=2,e=15&a;else{if(!l(a,240,244))return h(t);240===a&&(i=144),244===a&&(o=143),u=3,e=7&a}return null}if(!l(a,i,o))return e=u=r=0,i=128,o=191,n.prepend(a),h(t);if(i=128,o=191,e=e<<6|63&a,(r+=1)!==u)return null;var d=e;return e=u=r=0,d}}function T(n){n.fatal;this.handler=function(n,t){if(t===s)return c;if(o(t))return t;var e,r;l(t,128,2047)?(e=1,r=192):l(t,2048,65535)?(e=2,r=224):l(t,65536,1114111)&&(e=3,r=240);for(var u=[(t>>6*e)+r];e>0;){var i=t>>6*(e-1);u.push(128|63&i),e-=1}return u}}function x(n,t){var e=t.fatal;this.handler=function(t,l){if(l===s)return c;if(i(l))return l;var r=n[l-128];return null===r?h(e):r}}function B(n,t){t.fatal;this.handler=function(t,e){if(e===s)return c;if(o(e))return e;var l=k(e,n);return null===l&&d(e),l+128}}function P(n){var t=n.fatal,e=0,r=0,u=0;this.handler=function(n,o){if(o===s&&0===e&&0===r&&0===u)return c;var a;if(o!==s||0===e&&0===r&&0===u||(e=0,r=0,u=0,h(t)),0!==u){a=null,l(o,48,57)&&(a=function(n){if(n>39419&&n<189e3||n>1237575)return null;if(7457===n)return 59335;var t,e=0,l=0,r=I("gb18030-ranges");for(t=0;t<r.length;++t){var u=r[t];if(!(u[0]<=n))break;e=u[0],l=u[1]}return l+n-e}(10*(126*(10*(e-129)+r-48)+u-129)+o-48));var d=[r,u,o];return e=0,r=0,u=0,null===a?(n.prepend(d),h(t)):a}if(0!==r)return l(o,129,254)?(u=o,null):(n.prepend([r,o]),e=0,r=0,h(t));if(0!==e){if(l(o,48,57))return r=o,null;var f=e,p=null;e=0;var g=o<127?64:65;return(l(o,64,126)||l(o,128,254))&&(p=190*(f-129)+(o-g)),null===(a=null===p?null:v(p,I("gb18030")))&&i(o)&&n.prepend(o),null===a?h(t):a}return i(o)?o:128===o?8364:l(o,129,254)?(e=o,null):h(t)}}function R(n,t){n.fatal;this.handler=function(n,e){if(e===s)return c;if(o(e))return e;if(58853===e)return d(e);if(t&&8364===e)return 128;var l=k(e,I("gb18030"));if(null!==l){var u=l%190;return[r(l/190)+129,u+(u<63?64:65)]}if(t)return d(e);l=function(n){if(59335===n)return 7457;var t,e=0,l=0,r=I("gb18030-ranges");for(t=0;t<r.length;++t){var u=r[t];if(!(u[1]<=n))break;e=u[1],l=u[0]}return l+n-e}(e);var i=r(l/10/126/10),a=r((l-=10*i*126*10)/10/126),h=r((l-=10*a*126)/10);return[i+129,a+48,h+129,l-10*h+48]}}function O(n){var t=n.fatal,e=0;this.handler=function(n,r){if(r===s&&0!==e)return e=0,h(t);if(r===s&&0===e)return c;if(0!==e){var u=e,o=null;e=0;var a=r<127?64:98;switch((l(r,64,126)||l(r,161,254))&&(o=157*(u-129)+(r-a)),o){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var d=null===o?null:v(o,I("big5"));return null===d&&i(r)&&n.prepend(r),null===d?h(t):d}return i(r)?r:l(r,129,254)?(e=r,null):h(t)}}function M(n){n.fatal;this.handler=function(n,t){if(t===s)return c;if(o(t))return t;var e=function(n){m=m||I("big5").map((function(n,t){return t<5024?null:n}));var t=m;return 9552===n||9566===n||9569===n||9578===n||21313===n||21317===n?t.lastIndexOf(n):k(n,t)}(t);if(null===e)return d(t);var l=r(e/157)+129;if(l<161)return d(t);var u=e%157;return[l,u+(u<63?64:98)]}}function C(n){var t=n.fatal,e=!1,r=0;this.handler=function(n,u){if(u===s&&0!==r)return r=0,h(t);if(u===s&&0===r)return c;if(142===r&&l(u,161,223))return r=0,65216+u;if(143===r&&l(u,161,254))return e=!0,r=u,null;if(0!==r){var o=r;r=0;var a=null;return l(o,161,254)&&l(u,161,254)&&(a=v(94*(o-161)+(u-161),I(e?"jis0212":"jis0208"))),e=!1,l(u,161,254)||n.prepend(u),null===a?h(t):a}return i(u)?u:142===u||143===u||l(u,161,254)?(r=u,null):h(t)}}function U(n){n.fatal;this.handler=function(n,t){if(t===s)return c;if(o(t))return t;if(165===t)return 92;if(8254===t)return 126;if(l(t,65377,65439))return[142,t-65377+161];8722===t&&(t=65293);var e=k(t,I("jis0208"));return null===e?d(t):[r(e/94)+161,e%94+161]}}function L(n){var t=n.fatal,e=0,r=1,u=2,i=3,o=4,a=5,d=6,f=e,p=e,g=0,y=!1;this.handler=function(n,m){switch(f){default:case e:return 27===m?(f=a,null):l(m,0,127)&&14!==m&&15!==m&&27!==m?(y=!1,m):m===s?c:(y=!1,h(t));case r:return 27===m?(f=a,null):92===m?(y=!1,165):126===m?(y=!1,8254):l(m,0,127)&&14!==m&&15!==m&&27!==m&&92!==m&&126!==m?(y=!1,m):m===s?c:(y=!1,h(t));case u:return 27===m?(f=a,null):l(m,33,95)?(y=!1,65344+m):m===s?c:(y=!1,h(t));case i:return 27===m?(f=a,null):l(m,33,126)?(y=!1,g=m,f=o,null):m===s?c:(y=!1,h(t));case o:if(27===m)return f=a,h(t);if(l(m,33,126)){f=i;var b=v(94*(g-33)+m-33,I("jis0208"));return null===b?h(t):b}return m===s?(f=i,n.prepend(m),h(t)):(f=i,h(t));case a:return 36===m||40===m?(g=m,f=d,null):(n.prepend(m),y=!1,f=p,h(t));case d:var w=g;g=0;var k=null;if(40===w&&66===m&&(k=e),40===w&&74===m&&(k=r),40===w&&73===m&&(k=u),36!==w||64!==m&&66!==m||(k=i),null!==k){f=f=k;var A=y;return y=!0,A?h(t):null}return n.prepend([w,m]),y=!1,f=p,h(t)}}}function N(n){n.fatal;var t=0,e=1,l=2,u=t;this.handler=function(n,i){if(i===s&&u!==t)return n.prepend(i),u=t,[27,40,66];if(i===s&&u===t)return c;if(!(u!==t&&u!==e||14!==i&&15!==i&&27!==i))return d(65533);if(u===t&&o(i))return i;if(u===e&&(o(i)&&92!==i&&126!==i||165==i||8254==i)){if(o(i))return i;if(165===i)return 92;if(8254===i)return 126}if(o(i)&&u!==t)return n.prepend(i),u=t,[27,40,66];if((165===i||8254===i)&&u!==e)return n.prepend(i),u=e,[27,40,74];8722===i&&(i=65293);var a=k(i,I("jis0208"));return null===a?d(i):u!==l?(n.prepend(i),u=l,[27,36,66]):[r(a/94)+33,a%94+33]}}function z(n){var t=n.fatal,e=0;this.handler=function(n,r){if(r===s&&0!==e)return e=0,h(t);if(r===s&&0===e)return c;if(0!==e){var u=e,o=null;e=0;var a=r<127?64:65,d=u<160?129:193;if((l(r,64,126)||l(r,128,252))&&(o=188*(u-d)+r-a),l(o,8836,10715))return 48508+o;var f=null===o?null:v(o,I("jis0208"));return null===f&&i(r)&&n.prepend(r),null===f?h(t):f}return i(r)||128===r?r:l(r,161,223)?65216+r:l(r,129,159)||l(r,224,252)?(e=r,null):h(t)}}function K(n){n.fatal;this.handler=function(n,t){if(t===s)return c;if(o(t)||128===t)return t;if(165===t)return 92;if(8254===t)return 126;if(l(t,65377,65439))return t-65377+161;8722===t&&(t=65293);var e=function(n){return y=y||I("jis0208").map((function(n,t){return l(t,8272,8835)?null:n})),y.indexOf(n)}(t);if(null===e)return d(t);var u=r(e/188),i=e%188;return[u+(u<31?129:193),i+(i<63?64:65)]}}function D(n){var t=n.fatal,e=0;this.handler=function(n,r){if(r===s&&0!==e)return e=0,h(t);if(r===s&&0===e)return c;if(0!==e){var u=e,o=null;e=0,l(r,65,254)&&(o=190*(u-129)+(r-65));var a=null===o?null:v(o,I("euc-kr"));return null===o&&i(r)&&n.prepend(r),null===a?h(t):a}return i(r)?r:l(r,129,254)?(e=r,null):h(t)}}function W(n){n.fatal;this.handler=function(n,t){if(t===s)return c;if(o(t))return t;var e=k(t,I("euc-kr"));return null===e?d(t):[r(e/190)+129,e%190+65]}}function j(n,t){var e=n>>8,l=255&n;return t?[e,l]:[l,e]}function F(n,t){var e=t.fatal,r=null,u=null;this.handler=function(t,i){if(i===s&&(null!==r||null!==u))return h(e);if(i===s&&null===r&&null===u)return c;if(null===r)return r=i,null;var o;if(o=n?(r<<8)+i:(i<<8)+r,r=null,null!==u){var a=u;return u=null,l(o,56320,57343)?65536+1024*(a-55296)+(o-56320):(t.prepend(j(o,n)),h(e))}return l(o,55296,56319)?(u=o,null):l(o,56320,57343)?h(e):o}}function q(n,t){t.fatal;this.handler=function(t,e){if(e===s)return c;if(l(e,0,65535))return j(e,n);var r=j(55296+(e-65536>>10),n),u=j(56320+(e-65536&1023),n);return r.concat(u)}}function H(n){n.fatal;this.handler=function(n,t){return t===s?c:i(t)?t:63360+t-128}}function G(n){n.fatal;this.handler=function(n,t){return t===s?c:o(t)?t:l(t,63360,63487)?t-63360+128:d(t)}}Object.defineProperty&&(Object.defineProperty(_.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(_.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(_.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),_.prototype.decode=function(n,t){var e;e="object"==typeof n&&n instanceof ArrayBuffer?new Uint8Array(n):"object"==typeof n&&"buffer"in n&&n.buffer instanceof ArrayBuffer?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):new Uint8Array(0),t=u(t),this._do_not_flush||(this._decoder=w[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(t.stream);for(var l,r=new a(e),i=[];;){var o=r.read();if(o===s)break;if((l=this._decoder.handler(r,o))===c)break;null!==l&&(Array.isArray(l)?i.push.apply(i,l):i.push(l))}if(!this._do_not_flush){do{if((l=this._decoder.handler(r,r.read()))===c)break;null!==l&&(Array.isArray(l)?i.push.apply(i,l):i.push(l))}while(!r.endOfStream());this._decoder=null}return(function(n){var t,e;return t=["UTF-8","UTF-16LE","UTF-16BE"],e=this._encoding.name,-1===t.indexOf(e)||this._ignoreBOM||this._BOMseen||(n.length>0&&65279===n[0]?(this._BOMseen=!0,n.shift()):n.length>0&&(this._BOMseen=!0)),function(n){for(var t="",e=0;e<n.length;++e){var l=n[e];l<=65535?t+=String.fromCharCode(l):(l-=65536,t+=String.fromCharCode(55296+(l>>10),56320+(1023&l)))}return t}(n)}).call(this,i)},Object.defineProperty&&Object.defineProperty(E.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),E.prototype.encode=function(n,t){n=void 0===n?"":String(n),t=u(t),this._do_not_flush||(this._encoder=b[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(t.stream);for(var e,l=new a(function(n){for(var t=String(n),e=t.length,l=0,r=[];l<e;){var u=t.charCodeAt(l);if(u<55296||u>57343)r.push(u);else if(56320<=u&&u<=57343)r.push(65533);else if(55296<=u&&u<=56319)if(l===e-1)r.push(65533);else{var i=t.charCodeAt(l+1);if(56320<=i&&i<=57343){var o=1023&u,s=1023&i;r.push(65536+(o<<10)+s),l+=1}else r.push(65533)}l+=1}return r}(n)),r=[];;){var i=l.read();if(i===s)break;if((e=this._encoder.handler(l,i))===c)break;Array.isArray(e)?r.push.apply(r,e):r.push(e)}if(!this._do_not_flush){for(;(e=this._encoder.handler(l,l.read()))!==c;)Array.isArray(e)?r.push.apply(r,e):r.push(e);this._encoder=null}return new Uint8Array(r)},b["UTF-8"]=function(n){return new T(n)},w["UTF-8"]=function(n){return new S(n)},"encoding-indexes"in t&&p.forEach((function(n){"Legacy single-byte encodings"===n.heading&&n.encodings.forEach((function(n){var t=n.name,e=I(t.toLowerCase());w[t]=function(n){return new x(e,n)},b[t]=function(n){return new B(e,n)}}))})),w.GBK=function(n){return new P(n)},b.GBK=function(n){return new R(n,!0)},b.gb18030=function(n){return new R(n)},w.gb18030=function(n){return new P(n)},b.Big5=function(n){return new M(n)},w.Big5=function(n){return new O(n)},b["EUC-JP"]=function(n){return new U(n)},w["EUC-JP"]=function(n){return new C(n)},b["ISO-2022-JP"]=function(n){return new N(n)},w["ISO-2022-JP"]=function(n){return new L(n)},b.Shift_JIS=function(n){return new K(n)},w.Shift_JIS=function(n){return new z(n)},b["EUC-KR"]=function(n){return new W(n)},w["EUC-KR"]=function(n){return new D(n)},b["UTF-16BE"]=function(n){return new q(!0,n)},w["UTF-16BE"]=function(n){return new F(!0,n)},b["UTF-16LE"]=function(n){return new q(!1,n)},w["UTF-16LE"]=function(n){return new F(!1,n)},b["x-user-defined"]=function(n){return new G(n)},w["x-user-defined"]=function(n){return new H(n)},t.TextEncoder||(t.TextEncoder=E),t.TextDecoder||(t.TextDecoder=_),n.exports&&(n.exports={TextEncoder:t.TextEncoder,TextDecoder:t.TextDecoder,EncodingIndexes:t["encoding-indexes"]})}(this||{})},5163:(n,t,e)=>{"use strict";e.r(t),e.d(t,{__assign:()=>u,__asyncDelegator:()=>k,__asyncGenerator:()=>v,__asyncValues:()=>I,__await:()=>w,__awaiter:()=>c,__classPrivateFieldGet:()=>T,__classPrivateFieldIn:()=>B,__classPrivateFieldSet:()=>x,__createBinding:()=>d,__decorate:()=>o,__exportStar:()=>f,__extends:()=>r,__generator:()=>h,__importDefault:()=>S,__importStar:()=>E,__makeTemplateObject:()=>A,__metadata:()=>a,__param:()=>s,__read:()=>g,__rest:()=>i,__spread:()=>y,__spreadArray:()=>b,__spreadArrays:()=>m,__values:()=>p});var l=function(n,t){return l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e])},l(n,t)};function r(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function e(){this.constructor=n}l(n,t),n.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}var u=function(){return u=Object.assign||function(n){for(var t,e=1,l=arguments.length;e<l;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},u.apply(this,arguments)};function i(n,t){var e={};for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&t.indexOf(l)<0&&(e[l]=n[l]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(l=Object.getOwnPropertySymbols(n);r<l.length;r++)t.indexOf(l[r])<0&&Object.prototype.propertyIsEnumerable.call(n,l[r])&&(e[l[r]]=n[l[r]])}return e}function o(n,t,e,l){var r,u=arguments.length,i=u<3?t:null===l?l=Object.getOwnPropertyDescriptor(t,e):l;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,t,e,l);else for(var o=n.length-1;o>=0;o--)(r=n[o])&&(i=(u<3?r(i):u>3?r(t,e,i):r(t,e))||i);return u>3&&i&&Object.defineProperty(t,e,i),i}function s(n,t){return function(e,l){t(e,l,n)}}function a(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)}function c(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))}function h(n,t){var e,l,r,u,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return u={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(u[Symbol.iterator]=function(){return this}),u;function o(u){return function(o){return function(u){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,l&&(r=2&u[0]?l.return:u[0]?l.throw||((r=l.return)&&r.call(l),0):l.next)&&!(r=r.call(l,u[1])).done)return r;switch(l=0,r&&(u=[2&u[0],r.value]),u[0]){case 0:case 1:r=u;break;case 4:return i.label++,{value:u[1],done:!1};case 5:i.label++,l=u[1],u=[0];continue;case 7:u=i.ops.pop(),i.trys.pop();continue;default:if(!(r=i.trys,(r=r.length>0&&r[r.length-1])||6!==u[0]&&2!==u[0])){i=0;continue}if(3===u[0]&&(!r||u[1]>r[0]&&u[1]<r[3])){i.label=u[1];break}if(6===u[0]&&i.label<r[1]){i.label=r[1],r=u;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(u);break}r[2]&&i.ops.pop(),i.trys.pop();continue}u=t.call(n,i)}catch(o){u=[6,o],l=0}finally{e=r=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,o])}}}var d=Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]};function f(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||d(t,n,e)}function p(n){var t="function"==typeof Symbol&&Symbol.iterator,e=t&&n[t],l=0;if(e)return e.call(n);if(n&&"number"==typeof n.length)return{next:function(){return n&&l>=n.length&&(n=void 0),{value:n&&n[l++],done:!n}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function g(n,t){var e="function"==typeof Symbol&&n[Symbol.iterator];if(!e)return n;var l,r,u=e.call(n),i=[];try{for(;(void 0===t||t-- >0)&&!(l=u.next()).done;)i.push(l.value)}catch(o){r={error:o}}finally{try{l&&!l.done&&(e=u.return)&&e.call(u)}finally{if(r)throw r.error}}return i}function y(){for(var n=[],t=0;t<arguments.length;t++)n=n.concat(g(arguments[t]));return n}function m(){for(var n=0,t=0,e=arguments.length;t<e;t++)n+=arguments[t].length;var l=Array(n),r=0;for(t=0;t<e;t++)for(var u=arguments[t],i=0,o=u.length;i<o;i++,r++)l[r]=u[i];return l}function b(n,t,e){if(e||2===arguments.length)for(var l,r=0,u=t.length;r<u;r++)!l&&r in t||(l||(l=Array.prototype.slice.call(t,0,r)),l[r]=t[r]);return n.concat(l||Array.prototype.slice.call(t))}function w(n){return this instanceof w?(this.v=n,this):new w(n)}function v(n,t,e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var l,r=e.apply(n,t||[]),u=[];return l={},i("next"),i("throw"),i("return"),l[Symbol.asyncIterator]=function(){return this},l;function i(n){r[n]&&(l[n]=function(t){return new Promise((function(e,l){u.push([n,t,e,l])>1||o(n,t)}))})}function o(n,t){try{(e=r[n](t)).value instanceof w?Promise.resolve(e.value.v).then(s,a):c(u[0][2],e)}catch(l){c(u[0][3],l)}var e}function s(n){o("next",n)}function a(n){o("throw",n)}function c(n,t){n(t),u.shift(),u.length&&o(u[0][0],u[0][1])}}function k(n){var t,e;return t={},l("next"),l("throw",(function(n){throw n})),l("return"),t[Symbol.iterator]=function(){return this},t;function l(l,r){t[l]=n[l]?function(t){return(e=!e)?{value:w(n[l](t)),done:"return"===l}:r?r(t):t}:r}}function I(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,e=n[Symbol.asyncIterator];return e?e.call(n):(n=p(n),t={},l("next"),l("throw"),l("return"),t[Symbol.asyncIterator]=function(){return this},t);function l(e){t[e]=n[e]&&function(t){return new Promise((function(l,r){(function(n,t,e,l){Promise.resolve(l).then((function(t){n({value:t,done:e})}),t)})(l,r,(t=n[e](t)).done,t.value)}))}}}function A(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n}var _=Object.create?function(n,t){Object.defineProperty(n,"default",{enumerable:!0,value:t})}:function(n,t){n.default=t};function E(n){if(n&&n.__esModule)return n;var t={};if(null!=n)for(var e in n)"default"!==e&&Object.prototype.hasOwnProperty.call(n,e)&&d(t,n,e);return _(t,n),t}function S(n){return n&&n.__esModule?n:{default:n}}function T(n,t,e,l){if("a"===e&&!l)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!l:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?l:"a"===e?l.call(n):l?l.value:t.get(n)}function x(n,t,e,l,r){if("m"===l)throw new TypeError("Private method is not writable");if("a"===l&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?n!==t||!r:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===l?r.call(n,e):r?r.value=e:t.set(n,e),e}function B(n,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof n?t===n:n.has(t)}},55029:(n,t,e)=>{"use strict";var l;e.d(t,{v4:()=>h});var r=new Uint8Array(16);function u(){if(!l&&!(l="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return l(r)}const i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const o=function(n){return"string"==typeof n&&i.test(n)};for(var s=[],a=0;a<256;++a)s.push((a+256).toString(16).substr(1));const c=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=(s[n[t+0]]+s[n[t+1]]+s[n[t+2]]+s[n[t+3]]+"-"+s[n[t+4]]+s[n[t+5]]+"-"+s[n[t+6]]+s[n[t+7]]+"-"+s[n[t+8]]+s[n[t+9]]+"-"+s[n[t+10]]+s[n[t+11]]+s[n[t+12]]+s[n[t+13]]+s[n[t+14]]+s[n[t+15]]).toLowerCase();if(!o(e))throw TypeError("Stringified UUID is invalid");return e};const h=function(n,t,e){var l=(n=n||{}).random||(n.rng||u)();if(l[6]=15&l[6]|64,l[8]=63&l[8]|128,t){e=e||0;for(var r=0;r<16;++r)t[e+r]=l[r];return t}return c(l)}},77378:()=>{},10868:()=>{},69314:()=>{},33196:()=>{},85297:n=>{n.exports=function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n},n.exports.__esModule=!0,n.exports.default=n.exports},91461:n=>{function t(n,t,e,l,r,u,i){try{var o=n[u](i),s=o.value}catch(a){return void e(a)}o.done?t(s):Promise.resolve(s).then(l,r)}n.exports=function(n){return function(){var e=this,l=arguments;return new Promise((function(r,u){var i=n.apply(e,l);function o(n){t(i,r,u,o,s,"next",n)}function s(n){t(i,r,u,o,s,"throw",n)}o(void 0)}))}},n.exports.__esModule=!0,n.exports.default=n.exports},53100:n=>{n.exports=function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")},n.exports.__esModule=!0,n.exports.default=n.exports},98870:n=>{function t(n,t){for(var e=0;e<t.length;e++){var l=t[e];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(n,l.key,l)}}n.exports=function(n,e,l){return e&&t(n.prototype,e),l&&t(n,l),Object.defineProperty(n,"prototype",{writable:!1}),n},n.exports.__esModule=!0,n.exports.default=n.exports},1147:n=>{function t(e){return n.exports=t=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},n.exports.__esModule=!0,n.exports.default=n.exports,t(e)}n.exports=t,n.exports.__esModule=!0,n.exports.default=n.exports},68230:(n,t,e)=>{var l=e(78560);n.exports=function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&l(n,t)},n.exports.__esModule=!0,n.exports.default=n.exports},71600:n=>{n.exports=function(n){return n&&n.__esModule?n:{default:n}},n.exports.__esModule=!0,n.exports.default=n.exports},60421:(n,t,e)=>{var l=e(67425).default,r=e(85297);n.exports=function(n,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return r(n)},n.exports.__esModule=!0,n.exports.default=n.exports},27609:(n,t,e)=>{var l=e(67425).default;function r(){"use strict";n.exports=r=function(){return t},n.exports.__esModule=!0,n.exports.default=n.exports;var t={},e=Object.prototype,u=e.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",a=i.toStringTag||"@@toStringTag";function c(n,t,e){return Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{c({},"")}catch(B){c=function(n,t,e){return n[t]=e}}function h(n,t,e,l){var r=t&&t.prototype instanceof p?t:p,u=Object.create(r.prototype),i=new S(l||[]);return u._invoke=function(n,t,e){var l="suspendedStart";return function(r,u){if("executing"===l)throw new Error("Generator is already running");if("completed"===l){if("throw"===r)throw u;return x()}for(e.method=r,e.arg=u;;){var i=e.delegate;if(i){var o=A(i,e);if(o){if(o===f)continue;return o}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if("suspendedStart"===l)throw l="completed",e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);l="executing";var s=d(n,t,e);if("normal"===s.type){if(l=e.done?"completed":"suspendedYield",s.arg===f)continue;return{value:s.arg,done:e.done}}"throw"===s.type&&(l="completed",e.method="throw",e.arg=s.arg)}}}(n,e,i),u}function d(n,t,e){try{return{type:"normal",arg:n.call(t,e)}}catch(B){return{type:"throw",arg:B}}}t.wrap=h;var f={};function p(){}function g(){}function y(){}var m={};c(m,o,(function(){return this}));var b=Object.getPrototypeOf,w=b&&b(b(T([])));w&&w!==e&&u.call(w,o)&&(m=w);var v=y.prototype=p.prototype=Object.create(m);function k(n){["next","throw","return"].forEach((function(t){c(n,t,(function(n){return this._invoke(t,n)}))}))}function I(n,t){function e(r,i,o,s){var a=d(n[r],n,i);if("throw"!==a.type){var c=a.arg,h=c.value;return h&&"object"==l(h)&&u.call(h,"__await")?t.resolve(h.__await).then((function(n){e("next",n,o,s)}),(function(n){e("throw",n,o,s)})):t.resolve(h).then((function(n){c.value=n,o(c)}),(function(n){return e("throw",n,o,s)}))}s(a.arg)}var r;this._invoke=function(n,l){function u(){return new t((function(t,r){e(n,l,t,r)}))}return r=r?r.then(u,u):u()}}function A(n,t){var e=n.iterator[t.method];if(void 0===e){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=void 0,A(n,t),"throw"===t.method))return f;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var l=d(e,n.iterator,t.arg);if("throw"===l.type)return t.method="throw",t.arg=l.arg,t.delegate=null,f;var r=l.arg;return r?r.done?(t[n.resultName]=r.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,f):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function _(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function E(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function S(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(_,this),this.reset(!0)}function T(n){if(n){var t=n[o];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var e=-1,l=function t(){for(;++e<n.length;)if(u.call(n,e))return t.value=n[e],t.done=!1,t;return t.value=void 0,t.done=!0,t};return l.next=l}}return{next:x}}function x(){return{value:void 0,done:!0}}return g.prototype=y,c(v,"constructor",y),c(y,"constructor",g),g.displayName=c(y,a,"GeneratorFunction"),t.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,y):(n.__proto__=y,c(n,a,"GeneratorFunction")),n.prototype=Object.create(v),n},t.awrap=function(n){return{__await:n}},k(I.prototype),c(I.prototype,s,(function(){return this})),t.AsyncIterator=I,t.async=function(n,e,l,r,u){void 0===u&&(u=Promise);var i=new I(h(n,e,l,r),u);return t.isGeneratorFunction(e)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},k(v),c(v,a,"Generator"),c(v,o,(function(){return this})),c(v,"toString",(function(){return"[object Generator]"})),t.keys=function(n){var t=[];for(var e in n)t.push(e);return t.reverse(),function e(){for(;t.length;){var l=t.pop();if(l in n)return e.value=l,e.done=!1,e}return e.done=!0,e}},t.values=T,S.prototype={constructor:S,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!n)for(var t in this)"t"===t.charAt(0)&&u.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function e(e,l){return i.type="throw",i.arg=n,t.next=e,l&&(t.method="next",t.arg=void 0),!!l}for(var l=this.tryEntries.length-1;l>=0;--l){var r=this.tryEntries[l],i=r.completion;if("root"===r.tryLoc)return e("end");if(r.tryLoc<=this.prev){var o=u.call(r,"catchLoc"),s=u.call(r,"finallyLoc");if(o&&s){if(this.prev<r.catchLoc)return e(r.catchLoc,!0);if(this.prev<r.finallyLoc)return e(r.finallyLoc)}else if(o){if(this.prev<r.catchLoc)return e(r.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return e(r.finallyLoc)}}}},abrupt:function(n,t){for(var e=this.tryEntries.length-1;e>=0;--e){var l=this.tryEntries[e];if(l.tryLoc<=this.prev&&u.call(l,"finallyLoc")&&this.prev<l.finallyLoc){var r=l;break}}r&&("break"===n||"continue"===n)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var i=r?r.completion:{};return i.type=n,i.arg=t,r?(this.method="next",this.next=r.finallyLoc,f):this.complete(i)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),f},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.finallyLoc===n)return this.complete(e.completion,e.afterLoc),E(e),f}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.tryLoc===n){var l=e.completion;if("throw"===l.type){var r=l.arg;E(e)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,e){return this.delegate={iterator:T(n),resultName:t,nextLoc:e},"next"===this.method&&(this.arg=void 0),f}},t}n.exports=r,n.exports.__esModule=!0,n.exports.default=n.exports},78560:n=>{function t(e,l){return n.exports=t=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},n.exports.__esModule=!0,n.exports.default=n.exports,t(e,l)}n.exports=t,n.exports.__esModule=!0,n.exports.default=n.exports},67425:n=>{function t(e){return n.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n.exports.__esModule=!0,n.exports.default=n.exports,t(e)}n.exports=t,n.exports.__esModule=!0,n.exports.default=n.exports},82841:(n,t,e)=>{var l=e(27609)();n.exports=l;try{regeneratorRuntime=l}catch(r){"object"==typeof globalThis?globalThis.regeneratorRuntime=l:Function("r","regeneratorRuntime = r")(l)}},80883:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeDecode=void 0;t.encodeDecode=n=>({decode:n.decode.bind(n),encode:n.encode.bind(n)})},58287:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u256be=t.u256=t.u192be=t.u192=t.u128be=t.u128=t.u64be=t.u64=t.bigIntBE=t.bigInt=void 0;const l=e(96346),r=e(41528),u=e(80883);t.bigInt=n=>t=>{const e=(0,l.blob)(n,t),{encode:i,decode:o}=(0,u.encodeDecode)(e),s=e;return s.decode=(n,t)=>{const e=o(n,t);return(0,r.toBigIntLE)(Buffer.from(e))},s.encode=(t,e,l)=>{const u=(0,r.toBufferLE)(t,n);return i(u,e,l)},s};t.bigIntBE=n=>t=>{const e=(0,l.blob)(n,t),{encode:i,decode:o}=(0,u.encodeDecode)(e),s=e;return s.decode=(n,t)=>{const e=o(n,t);return(0,r.toBigIntBE)(Buffer.from(e))},s.encode=(t,e,l)=>{const u=(0,r.toBufferBE)(t,n);return i(u,e,l)},s},t.u64=(0,t.bigInt)(8),t.u64be=(0,t.bigIntBE)(8),t.u128=(0,t.bigInt)(16),t.u128be=(0,t.bigIntBE)(16),t.u192=(0,t.bigInt)(24),t.u192be=(0,t.bigIntBE)(24),t.u256=(0,t.bigInt)(32),t.u256be=(0,t.bigIntBE)(32)},25281:function(n,t,e){"use strict";var l=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(t,"__esModule",{value:!0}),t.decimal=t.WAD=void 0;const r=l(e(6391)),u=e(80883),i=e(58287);t.WAD=new r.default("1e+18");t.decimal=n=>{const e=(0,i.u128)(n),{encode:l,decode:o}=(0,u.encodeDecode)(e),s=e;return s.decode=(n,e)=>{const l=o(n,e).toString();return new r.default(l).div(t.WAD)},s.encode=(n,e,r)=>{const u=BigInt(n.times(t.WAD).integerValue().toString());return l(u,e,r)},s}},28813:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e),Object.defineProperty(n,l,{enumerable:!0,get:function(){return t[e]}})}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(80883),t),r(e(58287),t),r(e(25281),t),r(e(4622),t),r(e(86254),t)},4622:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bool=void 0;const l=e(96346),r=e(80883);t.bool=n=>{const t=(0,l.u8)(n),{encode:e,decode:u}=(0,r.encodeDecode)(t),i=t;return i.decode=(n,t)=>!!u(n,t),i.encode=(n,t,l)=>{const r=Number(n);return e(r,t,l)},i}},86254:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.publicKey=void 0;const l=e(96346),r=e(70841),u=e(80883);t.publicKey=n=>{const t=(0,l.blob)(32,n),{encode:e,decode:i}=(0,u.encodeDecode)(t),o=t;return o.decode=(n,t)=>{const e=i(n,t);return new r.PublicKey(e)},o.encode=(n,t,l)=>{const r=n.toBuffer();return e(r,t,l)},o}},36563:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.amountToUiAmount=void 0;const r=e(27158),u=e(8075),i=e(78641);t.amountToUiAmount=function(n,t,e,o,s=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(new r.Transaction).add((0,i.createAmountToUiAmountInstruction)(e,o,s)),{returnData:u,err:a}=(yield n.simulateTransaction(l,[t],!1)).value;return(null==u?void 0:u.data)?Buffer.from(u.data[0],u.data[1]).toString("utf-8"):a}))}},14608:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.approve=void 0;const r=e(27158),u=e(8075),i=e(68728),o=e(47813);t.approve=function(n,t,e,s,a,c,h=[],d,f=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,h),p=(new r.Transaction).add((0,i.createApproveInstruction)(e,s,l,c,h,f));return yield(0,r.sendAndConfirmTransaction)(n,p,[t,...u],d)}))}},79970:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.approveChecked=void 0;const r=e(27158),u=e(8075),i=e(13878),o=e(47813);t.approveChecked=function(n,t,e,s,a,c,h,d,f=[],p,g=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(c,f),y=(new r.Transaction).add((0,i.createApproveCheckedInstruction)(s,e,a,l,h,d,f,g));return yield(0,r.sendAndConfirmTransaction)(n,y,[t,...u],p)}))}},64616:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.burn=void 0;const r=e(27158),u=e(8075),i=e(82900),o=e(47813);t.burn=function(n,t,e,s,a,c,h=[],d,f=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,h),p=(new r.Transaction).add((0,i.createBurnInstruction)(e,s,l,c,h,f));return yield(0,r.sendAndConfirmTransaction)(n,p,[t,...u],d)}))}},4642:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.burnChecked=void 0;const r=e(27158),u=e(8075),i=e(52432),o=e(47813);t.burnChecked=function(n,t,e,s,a,c,h,d=[],f,p=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,d),g=(new r.Transaction).add((0,i.createBurnCheckedInstruction)(e,s,l,c,h,d,p));return yield(0,r.sendAndConfirmTransaction)(n,g,[t,...u],f)}))}},38344:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.closeAccount=void 0;const r=e(27158),u=e(8075),i=e(15725),o=e(47813);t.closeAccount=function(n,t,e,s,a,c=[],h,d=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,c),f=(new r.Transaction).add((0,i.createCloseAccountInstruction)(e,s,l,c,d));return yield(0,r.sendAndConfirmTransaction)(n,f,[t,...u],h)}))}},57746:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createAccount=void 0;const r=e(27158),u=e(8075),i=e(53907),o=e(91358),s=e(41022),a=e(81705);t.createAccount=function(n,t,e,c,h,d,f=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){if(!h)return yield(0,a.createAssociatedTokenAccount)(n,t,e,c,d,f);const l=yield(0,s.getMint)(n,e,null==d?void 0:d.commitment,f),u=(0,i.getAccountLenForMint)(l),p=yield n.getMinimumBalanceForRentExemption(u),g=(new r.Transaction).add(r.SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:h.publicKey,space:u,lamports:p,programId:f}),(0,o.createInitializeAccountInstruction)(h.publicKey,e,c,f));return yield(0,r.sendAndConfirmTransaction)(n,g,[t,h],d),h.publicKey}))}},81705:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createAssociatedTokenAccount=void 0;const r=e(27158),u=e(8075),i=e(34684),o=e(41022);t.createAssociatedTokenAccount=function(n,t,e,s,a,c=u.TOKEN_PROGRAM_ID,h=u.ASSOCIATED_TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield(0,o.getAssociatedTokenAddress)(e,s,!1,c,h),u=(new r.Transaction).add((0,i.createAssociatedTokenAccountInstruction)(t.publicKey,l,s,e,c,h));return yield(0,r.sendAndConfirmTransaction)(n,u,[t],a),l}))}},19953:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createMint=void 0;const r=e(27158),u=e(8075),i=e(38631),o=e(41022);t.createMint=function(n,t,e,s,a,c=r.Keypair.generate(),h,d=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield(0,o.getMinimumBalanceForRentExemptMint)(n),u=(new r.Transaction).add(r.SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:c.publicKey,space:o.MINT_SIZE,lamports:l,programId:d}),(0,i.createInitializeMint2Instruction)(c.publicKey,a,e,s,d));return yield(0,r.sendAndConfirmTransaction)(n,u,[t,c],h),c.publicKey}))}},13972:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createMultisig=void 0;const r=e(27158),u=e(8075),i=e(46433),o=e(74610);t.createMultisig=function(n,t,e,s,a=r.Keypair.generate(),c,h=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield(0,o.getMinimumBalanceForRentExemptMultisig)(n),u=(new r.Transaction).add(r.SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:a.publicKey,space:o.MULTISIG_SIZE,lamports:l,programId:h}),(0,i.createInitializeMultisigInstruction)(a.publicKey,e,s,h));return yield(0,r.sendAndConfirmTransaction)(n,u,[t,a],c),a.publicKey}))}},4361:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createNativeMint=void 0;const r=e(27158),u=e(8075),i=e(78719);t.createNativeMint=function(n,t,e,o=u.NATIVE_MINT_2022,s=u.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(new r.Transaction).add((0,i.createCreateNativeMintInstruction)(t.publicKey,o,s));yield(0,r.sendAndConfirmTransaction)(n,l,[t],e)}))}},2929:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createWrappedNativeAccount=void 0;const r=e(27158),u=e(8075),i=e(34684),o=e(91358),s=e(20096),a=e(77014),c=e(41022),h=e(57746);t.createWrappedNativeAccount=function(n,t,e,d,f,p,g=u.TOKEN_PROGRAM_ID,y=u.NATIVE_MINT){return l(this,void 0,void 0,(function*(){if(!d)return yield(0,h.createAccount)(n,t,y,e,f,p,g);if(!f){const l=yield(0,c.getAssociatedTokenAddress)(y,e,!1,g,u.ASSOCIATED_TOKEN_PROGRAM_ID),o=(new r.Transaction).add((0,i.createAssociatedTokenAccountInstruction)(t.publicKey,l,e,y,g,u.ASSOCIATED_TOKEN_PROGRAM_ID),r.SystemProgram.transfer({fromPubkey:t.publicKey,toPubkey:l,lamports:d}),(0,s.createSyncNativeInstruction)(l,g));return yield(0,r.sendAndConfirmTransaction)(n,o,[t],p),l}const l=yield(0,a.getMinimumBalanceForRentExemptAccount)(n),m=(new r.Transaction).add(r.SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:f.publicKey,space:a.ACCOUNT_SIZE,lamports:l,programId:g}),r.SystemProgram.transfer({fromPubkey:t.publicKey,toPubkey:f.publicKey,lamports:d}),(0,o.createInitializeAccountInstruction)(f.publicKey,y,e,g));return yield(0,r.sendAndConfirmTransaction)(n,m,[t,f],p),f.publicKey}))}},32562:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.freezeAccount=void 0;const r=e(27158),u=e(8075),i=e(39670),o=e(47813);t.freezeAccount=function(n,t,e,s,a,c=[],h,d=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,c),f=(new r.Transaction).add((0,i.createFreezeAccountInstruction)(e,s,l,c,d));return yield(0,r.sendAndConfirmTransaction)(n,f,[t,...u],h)}))}},18743:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getOrCreateAssociatedTokenAccount=void 0;const r=e(27158),u=e(8075),i=e(35434),o=e(34684),s=e(77014),a=e(41022);t.getOrCreateAssociatedTokenAccount=function(n,t,e,c,h=!1,d,f,p=u.TOKEN_PROGRAM_ID,g=u.ASSOCIATED_TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield(0,a.getAssociatedTokenAddress)(e,c,h,p,g);let u;try{u=yield(0,s.getAccount)(n,l,d,p)}catch(y){if(!(y instanceof i.TokenAccountNotFoundError||y instanceof i.TokenInvalidAccountOwnerError))throw y;try{const u=(new r.Transaction).add((0,o.createAssociatedTokenAccountInstruction)(t.publicKey,l,c,e,p,g));yield(0,r.sendAndConfirmTransaction)(n,u,[t],f)}catch(y){}u=yield(0,s.getAccount)(n,l,d,p)}if(!u.mint.equals(e))throw new i.TokenInvalidMintError;if(!u.owner.equals(c))throw new i.TokenInvalidOwnerError;return u}))}},67621:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(36563),t),r(e(14608),t),r(e(79970),t),r(e(64616),t),r(e(4642),t),r(e(38344),t),r(e(57746),t),r(e(81705),t),r(e(19953),t),r(e(13972),t),r(e(4361),t),r(e(2929),t),r(e(32562),t),r(e(18743),t),r(e(26787),t),r(e(44934),t),r(e(43117),t),r(e(49506),t),r(e(8813),t),r(e(8156),t),r(e(79036),t),r(e(93553),t),r(e(44109),t)},47813:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSigners=void 0;const l=e(27158);t.getSigners=function(n,t){return n instanceof l.PublicKey?[n,t]:[n.publicKey,[n]]}},26787:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.mintTo=void 0;const r=e(27158),u=e(8075),i=e(36514),o=e(47813);t.mintTo=function(n,t,e,s,a,c,h=[],d,f=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,h),p=(new r.Transaction).add((0,i.createMintToInstruction)(e,s,l,c,h,f));return yield(0,r.sendAndConfirmTransaction)(n,p,[t,...u],d)}))}},44934:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.mintToChecked=void 0;const r=e(27158),u=e(8075),i=e(11702),o=e(47813);t.mintToChecked=function(n,t,e,s,a,c,h,d=[],f,p=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,d),g=(new r.Transaction).add((0,i.createMintToCheckedInstruction)(e,s,l,c,h,d,p));return yield(0,r.sendAndConfirmTransaction)(n,g,[t,...u],f)}))}},43117:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.revoke=void 0;const r=e(27158),u=e(8075),i=e(26248),o=e(47813);t.revoke=function(n,t,e,s,a=[],c,h=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(s,a),d=(new r.Transaction).add((0,i.createRevokeInstruction)(e,l,a,h));return yield(0,r.sendAndConfirmTransaction)(n,d,[t,...u],c)}))}},49506:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.setAuthority=void 0;const r=e(27158),u=e(8075),i=e(13249),o=e(47813);t.setAuthority=function(n,t,e,s,a,c,h=[],d,f=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(s,h),p=(new r.Transaction).add((0,i.createSetAuthorityInstruction)(e,l,a,c,h,f));return yield(0,r.sendAndConfirmTransaction)(n,p,[t,...u],d)}))}},8813:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.syncNative=void 0;const r=e(27158),u=e(8075),i=e(20096);t.syncNative=function(n,t,e,o,s=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(new r.Transaction).add((0,i.createSyncNativeInstruction)(e,s));return yield(0,r.sendAndConfirmTransaction)(n,l,[t],o)}))}},8156:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.thawAccount=void 0;const r=e(27158),u=e(8075),i=e(7765),o=e(47813);t.thawAccount=function(n,t,e,s,a,c=[],h,d=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,c),f=(new r.Transaction).add((0,i.createThawAccountInstruction)(e,s,l,c,d));return yield(0,r.sendAndConfirmTransaction)(n,f,[t,...u],h)}))}},79036:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.transfer=void 0;const r=e(27158),u=e(8075),i=e(22990),o=e(47813);t.transfer=function(n,t,e,s,a,c,h=[],d,f=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(a,h),p=(new r.Transaction).add((0,i.createTransferInstruction)(e,s,l,c,h,f));return yield(0,r.sendAndConfirmTransaction)(n,p,[t,...u],d)}))}},93553:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.transferChecked=void 0;const r=e(27158),u=e(8075),i=e(67997),o=e(47813);t.transferChecked=function(n,t,e,s,a,c,h,d,f=[],p,g=u.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,u]=(0,o.getSigners)(c,f),y=(new r.Transaction).add((0,i.createTransferCheckedInstruction)(e,s,a,l,h,d,f,g));return yield(0,r.sendAndConfirmTransaction)(n,y,[t,...u],p)}))}},44109:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.uiAmountToAmount=void 0;const r=e(28813),u=e(27158),i=e(8075),o=e(27776);t.uiAmountToAmount=function(n,t,e,s,a=i.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(new u.Transaction).add((0,o.createUiAmountToAmountInstruction)(e,s,a)),{returnData:i,err:c}=(yield n.simulateTransaction(l,[t],!1)).value;if(i){const n=Buffer.from(i.data[0],i.data[1]);return(0,r.u64)().decode(n)}return c}))}},8075:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.programSupportsExtensions=t.NATIVE_MINT_2022=t.NATIVE_MINT=t.ASSOCIATED_TOKEN_PROGRAM_ID=t.TOKEN_2022_PROGRAM_ID=t.TOKEN_PROGRAM_ID=void 0;const l=e(27158);t.TOKEN_PROGRAM_ID=new l.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"),t.TOKEN_2022_PROGRAM_ID=new l.PublicKey("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"),t.ASSOCIATED_TOKEN_PROGRAM_ID=new l.PublicKey("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"),t.NATIVE_MINT=new l.PublicKey("So11111111111111111111111111111111111111112"),t.NATIVE_MINT_2022=new l.PublicKey("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP"),t.programSupportsExtensions=function(n){return n!==t.TOKEN_PROGRAM_ID}},35434:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenUnsupportedInstructionError=t.TokenInvalidInstructionTypeError=t.TokenInvalidInstructionDataError=t.TokenInvalidInstructionKeysError=t.TokenInvalidInstructionProgramError=t.TokenOwnerOffCurveError=t.TokenInvalidOwnerError=t.TokenInvalidMintError=t.TokenInvalidAccountSizeError=t.TokenInvalidAccountOwnerError=t.TokenInvalidAccountError=t.TokenAccountNotFoundError=t.TokenError=void 0;class e extends Error{constructor(n){super(n)}}t.TokenError=e;t.TokenAccountNotFoundError=class extends e{constructor(){super(...arguments),this.name="TokenAccountNotFoundError"}};t.TokenInvalidAccountError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidAccountError"}};t.TokenInvalidAccountOwnerError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidAccountOwnerError"}};t.TokenInvalidAccountSizeError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidAccountSizeError"}};t.TokenInvalidMintError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidMintError"}};t.TokenInvalidOwnerError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidOwnerError"}};t.TokenOwnerOffCurveError=class extends e{constructor(){super(...arguments),this.name="TokenOwnerOffCurveError"}};t.TokenInvalidInstructionProgramError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidInstructionProgramError"}};t.TokenInvalidInstructionKeysError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidInstructionKeysError"}};t.TokenInvalidInstructionDataError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidInstructionDataError"}};t.TokenInvalidInstructionTypeError=class extends e{constructor(){super(...arguments),this.name="TokenInvalidInstructionTypeError"}};t.TokenUnsupportedInstructionError=class extends e{constructor(){super(...arguments),this.name="TokenUnsupportedInstructionError"}}},6869:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ACCOUNT_TYPE_SIZE=t.AccountType=void 0,function(n){n[n.Uninitialized=0]="Uninitialized",n[n.Mint=1]="Mint",n[n.Account=2]="Account"}(t.AccountType||(t.AccountType={})),t.ACCOUNT_TYPE_SIZE=1},15599:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.updateDefaultAccountState=t.initializeDefaultAccountState=void 0;const r=e(27158),u=e(47813),i=e(8075),o=e(32334);t.initializeDefaultAccountState=function(n,t,e,u,s,a=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(new r.Transaction).add((0,o.createInitializeDefaultAccountStateInstruction)(e,u,a));return yield(0,r.sendAndConfirmTransaction)(n,l,[t],s)}))},t.updateDefaultAccountState=function(n,t,e,s,a,c=[],h,d=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(a,c),f=(new r.Transaction).add((0,o.createUpdateDefaultAccountStateInstruction)(e,s,l,i,d));return yield(0,r.sendAndConfirmTransaction)(n,f,[t,...i],h)}))}},44641:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(15599),t),r(e(32334),t),r(e(34546),t)},32334:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createUpdateDefaultAccountStateInstruction=t.createInitializeDefaultAccountStateInstruction=t.defaultAccountStateInstructionData=t.DefaultAccountStateInstruction=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);var s;!function(n){n[n.Initialize=0]="Initialize",n[n.Update=1]="Update"}(s=t.DefaultAccountStateInstruction||(t.DefaultAccountStateInstruction={})),t.defaultAccountStateInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("defaultAccountStateInstruction"),(0,l.u8)("accountState")]),t.createInitializeDefaultAccountStateInstruction=function(n,e,l=u.TOKEN_2022_PROGRAM_ID){if(!(0,u.programSupportsExtensions)(l))throw new i.TokenUnsupportedInstructionError;const a=[{pubkey:n,isSigner:!1,isWritable:!0}],c=Buffer.alloc(t.defaultAccountStateInstructionData.span);return t.defaultAccountStateInstructionData.encode({instruction:o.TokenInstruction.DefaultAccountStateExtension,defaultAccountStateInstruction:s.Initialize,accountState:e},c),new r.TransactionInstruction({keys:a,programId:l,data:c})},t.createUpdateDefaultAccountStateInstruction=function(n,e,l,a=[],c=u.TOKEN_2022_PROGRAM_ID){if(!(0,u.programSupportsExtensions)(c))throw new i.TokenUnsupportedInstructionError;const h=[{pubkey:n,isSigner:!1,isWritable:!0}];h.push({pubkey:l,isSigner:!a.length,isWritable:!1});for(const t of a)h.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1});const d=Buffer.alloc(t.defaultAccountStateInstructionData.span);return t.defaultAccountStateInstructionData.encode({instruction:o.TokenInstruction.DefaultAccountStateExtension,defaultAccountStateInstruction:s.Update,accountState:e},d),new r.TransactionInstruction({keys:h,programId:c,data:d})}},34546:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getDefaultAccountState=t.DEFAULT_ACCOUNT_STATE_SIZE=t.DefaultAccountStateLayout=void 0;const l=e(96346),r=e(53907);t.DefaultAccountStateLayout=(0,l.struct)([(0,l.u8)("state")]),t.DEFAULT_ACCOUNT_STATE_SIZE=t.DefaultAccountStateLayout.span,t.getDefaultAccountState=function(n){const e=(0,r.getExtensionData)(r.ExtensionType.DefaultAccountState,n.tlvData);return null!==e?t.DefaultAccountStateLayout.decode(e):null}},53907:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getAccountLenForMint=t.getExtensionTypes=t.getExtensionData=t.getAccountLen=t.getMintLen=t.getAccountTypeOfMintType=t.getTypeLen=t.LENGTH_SIZE=t.TYPE_SIZE=t.ExtensionType=void 0;const l=e(77014),r=e(41022),u=e(74610),i=e(6869),o=e(44641),s=e(37905),a=e(18520),c=e(90664),h=e(70460),d=e(60872),f=e(77032);var p;function g(n){switch(n){case p.Uninitialized:return 0;case p.TransferFeeConfig:return f.TRANSFER_FEE_CONFIG_SIZE;case p.TransferFeeAmount:return f.TRANSFER_FEE_AMOUNT_SIZE;case p.MintCloseAuthority:return h.MINT_CLOSE_AUTHORITY_SIZE;case p.ConfidentialTransferMint:return 97;case p.ConfidentialTransferAccount:return 286;case p.DefaultAccountState:return o.DEFAULT_ACCOUNT_STATE_SIZE;case p.ImmutableOwner:return s.IMMUTABLE_OWNER_SIZE;case p.MemoTransfer:return c.MEMO_TRANSFER_SIZE;case p.NonTransferable:return d.NON_TRANSFERABLE_SIZE;case p.InterestBearingMint:return a.INTEREST_BEARING_MINT_CONFIG_STATE_SIZE;default:throw Error(`Unknown extension type: ${n}`)}}function y(n){switch(n){case p.TransferFeeConfig:return p.TransferFeeAmount;case p.ConfidentialTransferMint:return p.ConfidentialTransferAccount;case p.TransferFeeAmount:case p.ConfidentialTransferAccount:case p.DefaultAccountState:case p.ImmutableOwner:case p.MemoTransfer:case p.MintCloseAuthority:case p.NonTransferable:case p.Uninitialized:case p.InterestBearingMint:return p.Uninitialized}}function m(n,e){if(0===n.length)return e;{const e=l.ACCOUNT_SIZE+i.ACCOUNT_TYPE_SIZE+n.filter(((t,e)=>e===n.indexOf(t))).map((n=>g(n)+t.TYPE_SIZE+t.LENGTH_SIZE)).reduce(((n,t)=>n+t));return e===u.MULTISIG_SIZE?e+t.TYPE_SIZE:e}}function b(n){return m(n,l.ACCOUNT_SIZE)}function w(n){const e=[];let l=0;for(;l<n.length;){const r=n.readUInt16LE(l);e.push(r);const u=n.readUInt16LE(l+t.TYPE_SIZE);l+=t.TYPE_SIZE+t.LENGTH_SIZE+u}return e}!function(n){n[n.Uninitialized=0]="Uninitialized",n[n.TransferFeeConfig=1]="TransferFeeConfig",n[n.TransferFeeAmount=2]="TransferFeeAmount",n[n.MintCloseAuthority=3]="MintCloseAuthority",n[n.ConfidentialTransferMint=4]="ConfidentialTransferMint",n[n.ConfidentialTransferAccount=5]="ConfidentialTransferAccount",n[n.DefaultAccountState=6]="DefaultAccountState",n[n.ImmutableOwner=7]="ImmutableOwner",n[n.MemoTransfer=8]="MemoTransfer",n[n.NonTransferable=9]="NonTransferable",n[n.InterestBearingMint=10]="InterestBearingMint"}(p=t.ExtensionType||(t.ExtensionType={})),t.TYPE_SIZE=2,t.LENGTH_SIZE=2,t.getTypeLen=g,t.getAccountTypeOfMintType=y,t.getMintLen=function(n){return m(n,r.MINT_SIZE)},t.getAccountLen=b,t.getExtensionData=function(n,e){let l=0;for(;l<e.length;){const r=e.readUInt16LE(l),u=e.readUInt16LE(l+t.TYPE_SIZE),i=l+t.TYPE_SIZE+t.LENGTH_SIZE;if(r==n)return e.slice(i,i+u);l=i+u}return null},t.getExtensionTypes=w,t.getAccountLenForMint=function(n){return b(w(n.tlvData).map(y))}},37905:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getImmutableOwner=t.IMMUTABLE_OWNER_SIZE=t.ImmutableOwnerLayout=void 0;const l=e(96346),r=e(53907);t.ImmutableOwnerLayout=(0,l.struct)([]),t.IMMUTABLE_OWNER_SIZE=t.ImmutableOwnerLayout.span,t.getImmutableOwner=function(n){const e=(0,r.getExtensionData)(r.ExtensionType.ImmutableOwner,n.tlvData);return null!==e?t.ImmutableOwnerLayout.decode(e):null}},6047:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(6869),t),r(e(44641),t),r(e(53907),t),r(e(37905),t),r(e(47606),t),r(e(90664),t),r(e(70460),t),r(e(60872),t),r(e(77032),t)},83322:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.updateRateInterestBearingMint=t.createInterestBearingMint=void 0;const r=e(27158),u=e(47813),i=e(8075),o=e(54330),s=e(53907),a=e(34175);t.createInterestBearingMint=function(n,t,e,u,c,h,d,f=r.Keypair.generate(),p,g=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(0,s.getMintLen)([s.ExtensionType.InterestBearingMint]),i=yield n.getMinimumBalanceForRentExemption(l),y=(new r.Transaction).add(r.SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:f.publicKey,space:l,lamports:i,programId:g}),(0,a.createInitializeInterestBearingMintInstruction)(f.publicKey,c,h,g),(0,o.createInitializeMintInstruction)(f.publicKey,d,e,u,g));return yield(0,r.sendAndConfirmTransaction)(n,y,[t,f],p),f.publicKey}))},t.updateRateInterestBearingMint=function(n,t,e,o,s,c=[],h,d=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(o,c),f=(new r.Transaction).add((0,a.createUpdateRateInterestBearingMintInstruction)(e,l,s,i,d));return yield(0,r.sendAndConfirmTransaction)(n,f,[t,o,...i],h)}))}},47606:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(83322),t),r(e(34175),t),r(e(18520),t)},34175:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createUpdateRateInterestBearingMintInstruction=t.createInitializeInterestBearingMintInstruction=t.interestBearingMintUpdateRateInstructionData=t.interestBearingMintInitializeInstructionData=t.InterestBearingMintInstruction=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(61081),s=e(31886);var a;!function(n){n[n.Initialize=0]="Initialize",n[n.UpdateRate=1]="UpdateRate"}(a=t.InterestBearingMintInstruction||(t.InterestBearingMintInstruction={})),t.interestBearingMintInitializeInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("interestBearingMintInstruction"),(0,r.publicKey)("rateAuthority"),(0,l.s16)("rate")]),t.interestBearingMintUpdateRateInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("interestBearingMintInstruction"),(0,l.s16)("rate")]),t.createInitializeInterestBearingMintInstruction=function(n,e,l,r=i.TOKEN_2022_PROGRAM_ID){const o=[{pubkey:n,isSigner:!1,isWritable:!0}],c=Buffer.alloc(t.interestBearingMintInitializeInstructionData.span);return t.interestBearingMintInitializeInstructionData.encode({instruction:s.TokenInstruction.InterestBearingMintExtension,interestBearingMintInstruction:a.Initialize,rateAuthority:e,rate:l},c),new u.TransactionInstruction({keys:o,programId:r,data:c})},t.createUpdateRateInterestBearingMintInstruction=function(n,e,l,r=[],c=i.TOKEN_2022_PROGRAM_ID){const h=(0,o.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!r.length,isWritable:!1}],e,r),d=Buffer.alloc(t.interestBearingMintUpdateRateInstructionData.span);return t.interestBearingMintUpdateRateInstructionData.encode({instruction:s.TokenInstruction.InterestBearingMintExtension,interestBearingMintInstruction:a.UpdateRate,rate:l},d),new u.TransactionInstruction({keys:h,programId:c,data:d})}},18520:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getInterestBearingMintConfigState=t.INTEREST_BEARING_MINT_CONFIG_STATE_SIZE=t.InterestBearingMintConfigStateLayout=void 0;const l=e(96346),r=e(28813),u=e(53907);t.InterestBearingMintConfigStateLayout=(0,l.struct)([(0,r.publicKey)("rateAuthority"),(0,l.ns64)("initializationTimestamp"),(0,l.s16)("preUpdateAverageRate"),(0,l.ns64)("lastUpdateTimestamp"),(0,l.s16)("currentRate")]),t.INTEREST_BEARING_MINT_CONFIG_STATE_SIZE=t.InterestBearingMintConfigStateLayout.span,t.getInterestBearingMintConfigState=function(n){const e=(0,u.getExtensionData)(u.ExtensionType.InterestBearingMint,n.tlvData);return null!==e?t.InterestBearingMintConfigStateLayout.decode(e):null}},90117:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.disableRequiredMemoTransfers=t.enableRequiredMemoTransfers=void 0;const r=e(27158),u=e(47813),i=e(8075),o=e(12162);t.enableRequiredMemoTransfers=function(n,t,e,s,a=[],c,h=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(s,a),d=(new r.Transaction).add((0,o.createEnableRequiredMemoTransfersInstruction)(e,l,i,h));return yield(0,r.sendAndConfirmTransaction)(n,d,[t,...i],c)}))},t.disableRequiredMemoTransfers=function(n,t,e,s,a=[],c,h=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(s,a),d=(new r.Transaction).add((0,o.createDisableRequiredMemoTransfersInstruction)(e,l,i,h));return yield(0,r.sendAndConfirmTransaction)(n,d,[t,...i],c)}))}},90664:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(90117),t),r(e(12162),t),r(e(28047),t)},12162:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDisableRequiredMemoTransfersInstruction=t.createEnableRequiredMemoTransfersInstruction=t.memoTransferInstructionData=t.MemoTransferInstruction=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);var s;function a(n,e,l,a,c){if(!(0,u.programSupportsExtensions)(c))throw new i.TokenUnsupportedInstructionError;const h=[{pubkey:e,isSigner:!1,isWritable:!0}];h.push({pubkey:l,isSigner:!a.length,isWritable:!1});for(const t of a)h.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1});const d=Buffer.alloc(t.memoTransferInstructionData.span);return t.memoTransferInstructionData.encode({instruction:o.TokenInstruction.MemoTransferExtension,memoTransferInstruction:n?s.Enable:s.Disable},d),new r.TransactionInstruction({keys:h,programId:c,data:d})}!function(n){n[n.Enable=0]="Enable",n[n.Disable=1]="Disable"}(s=t.MemoTransferInstruction||(t.MemoTransferInstruction={})),t.memoTransferInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("memoTransferInstruction")]),t.createEnableRequiredMemoTransfersInstruction=function(n,t,e=[],l=u.TOKEN_2022_PROGRAM_ID){return a(!0,n,t,e,l)},t.createDisableRequiredMemoTransfersInstruction=function(n,t,e=[],l=u.TOKEN_2022_PROGRAM_ID){return a(!1,n,t,e,l)}},28047:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMemoTransfer=t.MEMO_TRANSFER_SIZE=t.MemoTransferLayout=void 0;const l=e(96346),r=e(28813),u=e(53907);t.MemoTransferLayout=(0,l.struct)([(0,r.bool)("requireIncomingTransferMemos")]),t.MEMO_TRANSFER_SIZE=t.MemoTransferLayout.span,t.getMemoTransfer=function(n){const e=(0,u.getExtensionData)(u.ExtensionType.MemoTransfer,n.tlvData);return null!==e?t.MemoTransferLayout.decode(e):null}},70460:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMintCloseAuthority=t.MINT_CLOSE_AUTHORITY_SIZE=t.MintCloseAuthorityLayout=void 0;const l=e(96346),r=e(28813),u=e(53907);t.MintCloseAuthorityLayout=(0,l.struct)([(0,r.publicKey)("closeAuthority")]),t.MINT_CLOSE_AUTHORITY_SIZE=t.MintCloseAuthorityLayout.span,t.getMintCloseAuthority=function(n){const e=(0,u.getExtensionData)(u.ExtensionType.MintCloseAuthority,n.tlvData);return null!==e?t.MintCloseAuthorityLayout.decode(e):null}},60872:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getNonTransferable=t.NON_TRANSFERABLE_SIZE=t.NonTransferableLayout=void 0;const l=e(96346),r=e(53907);t.NonTransferableLayout=(0,l.struct)([]),t.NON_TRANSFERABLE_SIZE=t.NonTransferableLayout.span,t.getNonTransferable=function(n){const e=(0,r.getExtensionData)(r.ExtensionType.NonTransferable,n.tlvData);return null!==e?t.NonTransferableLayout.decode(e):null}},72483:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.harvestWithheldTokensToMint=t.withdrawWithheldTokensFromAccounts=t.withdrawWithheldTokensFromMint=t.transferCheckedWithFee=void 0;const r=e(27158),u=e(47813),i=e(8075),o=e(12952);t.transferCheckedWithFee=function(n,t,e,s,a,c,h,d,f,p=[],g,y=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(c,p),m=(new r.Transaction).add((0,o.createTransferCheckedWithFeeInstruction)(e,s,a,l,h,d,f,p,y));return yield(0,r.sendAndConfirmTransaction)(n,m,[t,...i],g)}))},t.withdrawWithheldTokensFromMint=function(n,t,e,s,a,c=[],h,d=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(a,c),f=(new r.Transaction).add((0,o.createWithdrawWithheldTokensFromMintInstruction)(e,s,l,i,d));return yield(0,r.sendAndConfirmTransaction)(n,f,[t,...i],h)}))},t.withdrawWithheldTokensFromAccounts=function(n,t,e,s,a,c,h,d,f=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const[l,i]=(0,u.getSigners)(a,c),p=(new r.Transaction).add((0,o.createWithdrawWithheldTokensFromAccountsInstruction)(e,s,l,i,h,f));return yield(0,r.sendAndConfirmTransaction)(n,p,[t,...i],d)}))},t.harvestWithheldTokensToMint=function(n,t,e,u,s,a=i.TOKEN_2022_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=(new r.Transaction).add((0,o.createHarvestWithheldTokensToMintInstruction)(e,u,a));return yield(0,r.sendAndConfirmTransaction)(n,l,[t],s)}))}},77032:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(72483),t),r(e(12952),t),r(e(49990),t)},12952:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeHarvestWithheldTokensToMintInstructionUnchecked=t.decodeHarvestWithheldTokensToMintInstruction=t.createHarvestWithheldTokensToMintInstruction=t.harvestWithheldTokensToMintInstructionData=t.decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked=t.decodeWithdrawWithheldTokensFromAccountsInstruction=t.createWithdrawWithheldTokensFromAccountsInstruction=t.withdrawWithheldTokensFromAccountsInstructionData=t.decodeWithdrawWithheldTokensFromMintInstructionUnchecked=t.decodeWithdrawWithheldTokensFromMintInstruction=t.createWithdrawWithheldTokensFromMintInstruction=t.withdrawWithheldTokensFromMintInstructionData=t.decodeTransferCheckedWithFeeInstructionUnchecked=t.decodeTransferCheckedWithFeeInstruction=t.createTransferCheckedWithFeeInstruction=t.transferCheckedWithFeeInstructionData=t.decodeInitializeTransferFeeConfigInstructionUnchecked=t.decodeInitializeTransferFeeConfigInstruction=t.createInitializeTransferFeeConfigInstruction=t.initializeTransferFeeConfigInstructionData=t.TransferFeeInstruction=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);var a;function c({programId:n,keys:[e],data:l}){const{instruction:r,transferFeeInstruction:u,transferFeeConfigAuthorityOption:i,transferFeeConfigAuthority:o,withdrawWithheldAuthorityOption:s,withdrawWithheldAuthority:a,transferFeeBasisPoints:c,maximumFee:h}=t.initializeTransferFeeConfigInstructionData.decode(l);return{programId:n,keys:{mint:e},data:{instruction:r,transferFeeInstruction:u,transferFeeConfigAuthority:i?o:null,withdrawWithheldAuthority:s?a:null,transferFeeBasisPoints:c,maximumFee:h}}}function h({programId:n,keys:[e,l,r,u,...i],data:o}){const{instruction:s,transferFeeInstruction:a,amount:c,decimals:h,fee:d}=t.transferCheckedWithFeeInstructionData.decode(o);return{programId:n,keys:{source:e,mint:l,destination:r,authority:u,signers:i},data:{instruction:s,transferFeeInstruction:a,amount:c,decimals:h,fee:d}}}function d({programId:n,keys:[e,l,r,...u],data:i}){const{instruction:o,transferFeeInstruction:s}=t.withdrawWithheldTokensFromMintInstructionData.decode(i);return{programId:n,keys:{mint:e,destination:l,authority:r,signers:u},data:{instruction:o,transferFeeInstruction:s}}}function f({programId:n,keys:e,data:l}){const{instruction:r,transferFeeInstruction:u,numTokenAccounts:i}=t.withdrawWithheldTokensFromAccountsInstructionData.decode(l),[o,s,a,c,h]=[e[0],e[1],e[2],e.slice(3,3+i),e.slice(-1*i)];return{programId:n,keys:{mint:o,destination:s,authority:a,signers:c,sources:h},data:{instruction:r,transferFeeInstruction:u,numTokenAccounts:i}}}function p({programId:n,keys:[e,...l],data:r}){const{instruction:u,transferFeeInstruction:i}=t.harvestWithheldTokensToMintInstructionData.decode(r);return{programId:n,keys:{mint:e,sources:l},data:{instruction:u,transferFeeInstruction:i}}}!function(n){n[n.InitializeTransferFeeConfig=0]="InitializeTransferFeeConfig",n[n.TransferCheckedWithFee=1]="TransferCheckedWithFee",n[n.WithdrawWithheldTokensFromMint=2]="WithdrawWithheldTokensFromMint",n[n.WithdrawWithheldTokensFromAccounts=3]="WithdrawWithheldTokensFromAccounts",n[n.HarvestWithheldTokensToMint=4]="HarvestWithheldTokensToMint",n[n.SetTransferFee=5]="SetTransferFee"}(a=t.TransferFeeInstruction||(t.TransferFeeInstruction={})),t.initializeTransferFeeConfigInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("transferFeeInstruction"),(0,l.u8)("transferFeeConfigAuthorityOption"),(0,r.publicKey)("transferFeeConfigAuthority"),(0,l.u8)("withdrawWithheldAuthorityOption"),(0,r.publicKey)("withdrawWithheldAuthority"),(0,l.u16)("transferFeeBasisPoints"),(0,r.u64)("maximumFee")]),t.createInitializeTransferFeeConfigInstruction=function(n,e,l,r,c,h=i.TOKEN_2022_PROGRAM_ID){if(!(0,i.programSupportsExtensions)(h))throw new o.TokenUnsupportedInstructionError;const d=[{pubkey:n,isSigner:!1,isWritable:!0}],f=Buffer.alloc(t.initializeTransferFeeConfigInstructionData.span);return t.initializeTransferFeeConfigInstructionData.encode({instruction:s.TokenInstruction.TransferFeeExtension,transferFeeInstruction:a.InitializeTransferFeeConfig,transferFeeConfigAuthorityOption:e?1:0,transferFeeConfigAuthority:e||new u.PublicKey(0),withdrawWithheldAuthorityOption:l?1:0,withdrawWithheldAuthority:l||new u.PublicKey(0),transferFeeBasisPoints:r,maximumFee:c},f),new u.TransactionInstruction({keys:d,programId:h,data:f})},t.decodeInitializeTransferFeeConfigInstruction=function(n,e){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeTransferFeeConfigInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l},data:r}=c(n);if(r.instruction!==s.TokenInstruction.TransferFeeExtension||r.transferFeeInstruction!==a.InitializeTransferFeeConfig)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l},data:r}},t.decodeInitializeTransferFeeConfigInstructionUnchecked=c,t.transferCheckedWithFeeInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("transferFeeInstruction"),(0,r.u64)("amount"),(0,l.u8)("decimals"),(0,r.u64)("fee")]),t.createTransferCheckedWithFeeInstruction=function(n,e,l,r,c,h,d,f=[],p=i.TOKEN_2022_PROGRAM_ID){if(!(0,i.programSupportsExtensions)(p))throw new o.TokenUnsupportedInstructionError;const g=Buffer.alloc(t.transferCheckedWithFeeInstructionData.span);t.transferCheckedWithFeeInstructionData.encode({instruction:s.TokenInstruction.TransferFeeExtension,transferFeeInstruction:a.TransferCheckedWithFee,amount:c,decimals:h,fee:d},g);const y=[];y.push({pubkey:n,isSigner:!1,isWritable:!0}),y.push({pubkey:e,isSigner:!1,isWritable:!1}),y.push({pubkey:l,isSigner:!1,isWritable:!0}),y.push({pubkey:r,isSigner:!f.length,isWritable:!1});for(const t of f)y.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1});return new u.TransactionInstruction({keys:y,programId:p,data:g})},t.decodeTransferCheckedWithFeeInstruction=function(n,e){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.transferCheckedWithFeeInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{source:l,mint:r,destination:u,authority:i,signers:c},data:d}=h(n);if(d.instruction!==s.TokenInstruction.TransferFeeExtension||d.transferFeeInstruction!==a.TransferCheckedWithFee)throw new o.TokenInvalidInstructionTypeError;if(!r)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{source:l,mint:r,destination:u,authority:i,signers:c||null},data:d}},t.decodeTransferCheckedWithFeeInstructionUnchecked=h,t.withdrawWithheldTokensFromMintInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("transferFeeInstruction")]),t.createWithdrawWithheldTokensFromMintInstruction=function(n,e,l,r=[],c=i.TOKEN_2022_PROGRAM_ID){if(!(0,i.programSupportsExtensions)(c))throw new o.TokenUnsupportedInstructionError;const h=Buffer.alloc(t.withdrawWithheldTokensFromMintInstructionData.span);t.withdrawWithheldTokensFromMintInstructionData.encode({instruction:s.TokenInstruction.TransferFeeExtension,transferFeeInstruction:a.WithdrawWithheldTokensFromMint},h);const d=[];d.push({pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!r.length,isWritable:!1});for(const t of r)d.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1});return new u.TransactionInstruction({keys:d,programId:c,data:h})},t.decodeWithdrawWithheldTokensFromMintInstruction=function(n,e){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.withdrawWithheldTokensFromMintInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l,destination:r,authority:u,signers:i},data:c}=d(n);if(c.instruction!==s.TokenInstruction.TransferFeeExtension||c.transferFeeInstruction!==a.WithdrawWithheldTokensFromMint)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l,destination:r,authority:u,signers:i||null},data:c}},t.decodeWithdrawWithheldTokensFromMintInstructionUnchecked=d,t.withdrawWithheldTokensFromAccountsInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("transferFeeInstruction"),(0,l.u8)("numTokenAccounts")]),t.createWithdrawWithheldTokensFromAccountsInstruction=function(n,e,l,r,c,h=i.TOKEN_2022_PROGRAM_ID){if(!(0,i.programSupportsExtensions)(h))throw new o.TokenUnsupportedInstructionError;const d=Buffer.alloc(t.withdrawWithheldTokensFromAccountsInstructionData.span);t.withdrawWithheldTokensFromAccountsInstructionData.encode({instruction:s.TokenInstruction.TransferFeeExtension,transferFeeInstruction:a.WithdrawWithheldTokensFromAccounts,numTokenAccounts:c.length},d);const f=[];f.push({pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:l,isSigner:!r.length,isWritable:!1});for(const t of r)f.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1});for(const t of c)f.push({pubkey:t,isSigner:!1,isWritable:!0});return new u.TransactionInstruction({keys:f,programId:h,data:d})},t.decodeWithdrawWithheldTokensFromAccountsInstruction=function(n,e){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.withdrawWithheldTokensFromAccountsInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l,destination:r,authority:u,signers:i,sources:c},data:h}=f(n);if(h.instruction!==s.TokenInstruction.TransferFeeExtension||h.transferFeeInstruction!==a.WithdrawWithheldTokensFromAccounts)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l,destination:r,authority:u,signers:i||null,sources:c||null},data:h}},t.decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked=f,t.harvestWithheldTokensToMintInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("transferFeeInstruction")]),t.createHarvestWithheldTokensToMintInstruction=function(n,e,l=i.TOKEN_2022_PROGRAM_ID){if(!(0,i.programSupportsExtensions)(l))throw new o.TokenUnsupportedInstructionError;const r=Buffer.alloc(t.harvestWithheldTokensToMintInstructionData.span);t.harvestWithheldTokensToMintInstructionData.encode({instruction:s.TokenInstruction.TransferFeeExtension,transferFeeInstruction:a.HarvestWithheldTokensToMint},r);const c=[];c.push({pubkey:n,isSigner:!1,isWritable:!0});for(const t of e)c.push({pubkey:t,isSigner:!1,isWritable:!0});return new u.TransactionInstruction({keys:c,programId:l,data:r})},t.decodeHarvestWithheldTokensToMintInstruction=function(n,e){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.harvestWithheldTokensToMintInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l,sources:r},data:u}=p(n);if(u.instruction!==s.TokenInstruction.TransferFeeExtension||u.transferFeeInstruction!==a.HarvestWithheldTokensToMint)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l,sources:r},data:u}},t.decodeHarvestWithheldTokensToMintInstructionUnchecked=p},49990:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTransferFeeAmount=t.getTransferFeeConfig=t.TRANSFER_FEE_AMOUNT_SIZE=t.TransferFeeAmountLayout=t.TRANSFER_FEE_CONFIG_SIZE=t.TransferFeeConfigLayout=t.transferFeeLayout=t.ONE_IN_BASIS_POINTS=t.MAX_FEE_BASIS_POINTS=void 0;const l=e(96346),r=e(28813),u=e(53907);function i(n){return(0,l.struct)([(0,r.u64)("epoch"),(0,r.u64)("maximumFee"),(0,l.u16)("transferFeeBasisPoints")],n)}t.MAX_FEE_BASIS_POINTS=1e4,t.ONE_IN_BASIS_POINTS=t.MAX_FEE_BASIS_POINTS,t.transferFeeLayout=i,t.TransferFeeConfigLayout=(0,l.struct)([(0,r.publicKey)("transferFeeConfigAuthority"),(0,r.publicKey)("withdrawWithheldAuthority"),(0,r.u64)("withheldAmount"),i("olderTransferFee"),i("newerTransferFee")]),t.TRANSFER_FEE_CONFIG_SIZE=t.TransferFeeConfigLayout.span,t.TransferFeeAmountLayout=(0,l.struct)([(0,r.u64)("withheldAmount")]),t.TRANSFER_FEE_AMOUNT_SIZE=t.TransferFeeAmountLayout.span,t.getTransferFeeConfig=function(n){const e=(0,u.getExtensionData)(u.ExtensionType.TransferFeeConfig,n.tlvData);return null!==e?t.TransferFeeConfigLayout.decode(e):null},t.getTransferFeeAmount=function(n){const e=(0,u.getExtensionData)(u.ExtensionType.TransferFeeAmount,n.tlvData);return null!==e?t.TransferFeeAmountLayout.decode(e):null}},52828:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(67621),t),r(e(8075),t),r(e(35434),t),r(e(6047),t),r(e(87885),t),r(e(79235),t)},78641:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeAmountToUiAmountInstructionUnchecked=t.decodeAmountToUiAmountInstruction=t.createAmountToUiAmountInstruction=t.amountToUiAmountInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);function a({programId:n,keys:[e],data:l}){return{programId:n,keys:{mint:e},data:t.amountToUiAmountInstructionData.decode(l)}}t.amountToUiAmountInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount")]),t.createAmountToUiAmountInstruction=function(n,e,l=i.TOKEN_PROGRAM_ID){const r=[{pubkey:n,isSigner:!1,isWritable:!1}],o=Buffer.alloc(t.amountToUiAmountInstructionData.span);return t.amountToUiAmountInstructionData.encode({instruction:s.TokenInstruction.AmountToUiAmount,amount:BigInt(e)},o),new u.TransactionInstruction({keys:r,programId:l,data:o})},t.decodeAmountToUiAmountInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.amountToUiAmountInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l},data:r}=a(n);if(r.instruction!==s.TokenInstruction.AmountToUiAmount)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l},data:r}},t.decodeAmountToUiAmountInstructionUnchecked=a},68728:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeApproveInstructionUnchecked=t.decodeApproveInstruction=t.createApproveInstruction=t.approveInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{account:e,delegate:l,owner:r,multiSigners:u},data:t.approveInstructionData.decode(i)}}t.approveInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount")]),t.createApproveInstruction=function(n,e,l,r,o=[],c=i.TOKEN_PROGRAM_ID){const h=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1}],l,o),d=Buffer.alloc(t.approveInstructionData.span);return t.approveInstructionData.encode({instruction:a.TokenInstruction.Approve,amount:BigInt(r)},d),new u.TransactionInstruction({keys:h,programId:c,data:d})},t.decodeApproveInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.approveInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,delegate:r,owner:u,multiSigners:s},data:h}=c(n);if(h.instruction!==a.TokenInstruction.Approve)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,delegate:r,owner:u,multiSigners:s},data:h}},t.decodeApproveInstructionUnchecked=c},13878:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeApproveCheckedInstructionUnchecked=t.decodeApproveCheckedInstruction=t.createApproveCheckedInstruction=t.approveCheckedInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,u,...i],data:o}){return{programId:n,keys:{account:e,mint:l,delegate:r,owner:u,multiSigners:i},data:t.approveCheckedInstructionData.decode(o)}}t.approveCheckedInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount"),(0,l.u8)("decimals")]),t.createApproveCheckedInstruction=function(n,e,l,r,o,c,h=[],d=i.TOKEN_PROGRAM_ID){const f=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!1}],r,h),p=Buffer.alloc(t.approveCheckedInstructionData.span);return t.approveCheckedInstructionData.encode({instruction:a.TokenInstruction.ApproveChecked,amount:BigInt(o),decimals:c},p),new u.TransactionInstruction({keys:f,programId:d,data:p})},t.decodeApproveCheckedInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.approveCheckedInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,delegate:u,owner:s,multiSigners:h},data:d}=c(n);if(d.instruction!==a.TokenInstruction.ApproveChecked)throw new o.TokenInvalidInstructionTypeError;if(!(l&&r&&u&&s))throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,delegate:u,owner:s,multiSigners:h},data:d}},t.decodeApproveCheckedInstructionUnchecked=c},34684:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAssociatedTokenAccountInstruction=void 0;const l=e(27158),r=e(8075);t.createAssociatedTokenAccountInstruction=function(n,t,e,u,i=r.TOKEN_PROGRAM_ID,o=r.ASSOCIATED_TOKEN_PROGRAM_ID){const s=[{pubkey:n,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!1,isWritable:!1},{pubkey:l.SystemProgram.programId,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!1}];return new l.TransactionInstruction({keys:s,programId:o,data:Buffer.alloc(0)})}},82900:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeBurnInstructionUnchecked=t.decodeBurnInstruction=t.createBurnInstruction=t.burnInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{account:e,mint:l,owner:r,multiSigners:u},data:t.burnInstructionData.decode(i)}}t.burnInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount")]),t.createBurnInstruction=function(n,e,l,r,o=[],c=i.TOKEN_PROGRAM_ID){const h=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0}],l,o),d=Buffer.alloc(t.burnInstructionData.span);return t.burnInstructionData.encode({instruction:a.TokenInstruction.Burn,amount:BigInt(r)},d),new u.TransactionInstruction({keys:h,programId:c,data:d})},t.decodeBurnInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.burnInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,owner:u,multiSigners:s},data:h}=c(n);if(h.instruction!==a.TokenInstruction.Burn)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,owner:u,multiSigners:s},data:h}},t.decodeBurnInstructionUnchecked=c},52432:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeBurnCheckedInstructionUnchecked=t.decodeBurnCheckedInstruction=t.createBurnCheckedInstruction=t.burnCheckedInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{account:e,mint:l,owner:r,multiSigners:u},data:t.burnCheckedInstructionData.decode(i)}}t.burnCheckedInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount"),(0,l.u8)("decimals")]),t.createBurnCheckedInstruction=function(n,e,l,r,o,c=[],h=i.TOKEN_PROGRAM_ID){const d=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0}],l,c),f=Buffer.alloc(t.burnCheckedInstructionData.span);return t.burnCheckedInstructionData.encode({instruction:a.TokenInstruction.BurnChecked,amount:BigInt(r),decimals:o},f),new u.TransactionInstruction({keys:d,programId:h,data:f})},t.decodeBurnCheckedInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.burnCheckedInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,owner:u,multiSigners:s},data:h}=c(n);if(h.instruction!==a.TokenInstruction.BurnChecked)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,owner:u,multiSigners:s},data:h}},t.decodeBurnCheckedInstructionUnchecked=c},15725:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeCloseAccountInstructionUnchecked=t.decodeCloseAccountInstruction=t.createCloseAccountInstruction=t.closeAccountInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(61081),s=e(31886);function a({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{account:e,destination:l,authority:r,multiSigners:u},data:t.closeAccountInstructionData.decode(i)}}t.closeAccountInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createCloseAccountInstruction=function(n,e,l,i=[],a=u.TOKEN_PROGRAM_ID){const c=(0,o.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0}],l,i),h=Buffer.alloc(t.closeAccountInstructionData.span);return t.closeAccountInstructionData.encode({instruction:s.TokenInstruction.CloseAccount},h),new r.TransactionInstruction({keys:c,programId:a,data:h})},t.decodeCloseAccountInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.closeAccountInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l,destination:r,authority:o,multiSigners:c},data:h}=a(n);if(h.instruction!==s.TokenInstruction.CloseAccount)throw new i.TokenInvalidInstructionTypeError;if(!l||!r||!o)throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,destination:r,authority:o,multiSigners:c},data:h}},t.decodeCloseAccountInstructionUnchecked=a},78719:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createCreateNativeMintInstruction=t.createNativeMintInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);t.createNativeMintInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createCreateNativeMintInstruction=function(n,e=u.NATIVE_MINT_2022,l=u.TOKEN_2022_PROGRAM_ID){if(!(0,u.programSupportsExtensions)(l))throw new i.TokenUnsupportedInstructionError;const s=[{pubkey:n,isSigner:!0,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:r.SystemProgram.programId,isSigner:!1,isWritable:!1}],a=Buffer.alloc(t.createNativeMintInstructionData.span);return t.createNativeMintInstructionData.encode({instruction:o.TokenInstruction.CreateNativeMint},a),new r.TransactionInstruction({keys:s,programId:l,data:a})}},20623:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUiamountToAmountInstruction=t.isAmountToUiAmountInstruction=t.isInitializeMint2Instruction=t.isInitializeAccount3Instruction=t.isSyncNativeInstruction=t.isInitializeAccount2Instruction=t.isBurnCheckedInstruction=t.isMintToCheckedInstruction=t.isApproveCheckedInstruction=t.isTransferCheckedInstruction=t.isThawAccountInstruction=t.isFreezeAccountInstruction=t.isCloseAccountInstruction=t.isBurnInstruction=t.isMintToInstruction=t.isSetAuthorityInstruction=t.isRevokeInstruction=t.isApproveInstruction=t.isTransferInstruction=t.isInitializeMultisigInstruction=t.isInitializeAccountInstruction=t.isInitializeMintInstruction=t.decodeInstruction=void 0;const l=e(96346),r=e(8075),u=e(35434),i=e(78641),o=e(68728),s=e(13878),a=e(82900),c=e(52432),h=e(15725),d=e(39670),f=e(91358),p=e(48979),g=e(53218),y=e(54330),m=e(38631),b=e(46433),w=e(36514),v=e(11702),k=e(26248),I=e(13249),A=e(20096),_=e(7765),E=e(22990),S=e(67997),T=e(31886),x=e(27776);t.decodeInstruction=function(n,t=r.TOKEN_PROGRAM_ID){if(!n.data.length)throw new u.TokenInvalidInstructionDataError;const e=(0,l.u8)().decode(n.data);if(e===T.TokenInstruction.InitializeMint)return(0,y.decodeInitializeMintInstruction)(n,t);if(e===T.TokenInstruction.InitializeAccount)return(0,f.decodeInitializeAccountInstruction)(n,t);if(e===T.TokenInstruction.InitializeMultisig)return(0,b.decodeInitializeMultisigInstruction)(n,t);if(e===T.TokenInstruction.Transfer)return(0,E.decodeTransferInstruction)(n,t);if(e===T.TokenInstruction.Approve)return(0,o.decodeApproveInstruction)(n,t);if(e===T.TokenInstruction.Revoke)return(0,k.decodeRevokeInstruction)(n,t);if(e===T.TokenInstruction.SetAuthority)return(0,I.decodeSetAuthorityInstruction)(n,t);if(e===T.TokenInstruction.MintTo)return(0,w.decodeMintToInstruction)(n,t);if(e===T.TokenInstruction.Burn)return(0,a.decodeBurnInstruction)(n,t);if(e===T.TokenInstruction.CloseAccount)return(0,h.decodeCloseAccountInstruction)(n,t);if(e===T.TokenInstruction.FreezeAccount)return(0,d.decodeFreezeAccountInstruction)(n,t);if(e===T.TokenInstruction.ThawAccount)return(0,_.decodeThawAccountInstruction)(n,t);if(e===T.TokenInstruction.TransferChecked)return(0,S.decodeTransferCheckedInstruction)(n,t);if(e===T.TokenInstruction.ApproveChecked)return(0,s.decodeApproveCheckedInstruction)(n,t);if(e===T.TokenInstruction.MintToChecked)return(0,v.decodeMintToCheckedInstruction)(n,t);if(e===T.TokenInstruction.BurnChecked)return(0,c.decodeBurnCheckedInstruction)(n,t);if(e===T.TokenInstruction.InitializeAccount2)return(0,p.decodeInitializeAccount2Instruction)(n,t);if(e===T.TokenInstruction.SyncNative)return(0,A.decodeSyncNativeInstruction)(n,t);if(e===T.TokenInstruction.InitializeAccount3)return(0,g.decodeInitializeAccount3Instruction)(n,t);if(e===T.TokenInstruction.InitializeMint2)return(0,m.decodeInitializeMint2Instruction)(n,t);if(e===T.TokenInstruction.AmountToUiAmount)return(0,i.decodeAmountToUiAmountInstruction)(n,t);if(e===T.TokenInstruction.UiAmountToAmount)return(0,x.decodeUiAmountToAmountInstruction)(n,t);if(e===T.TokenInstruction.InitializeMultisig2)throw new u.TokenInvalidInstructionTypeError;throw new u.TokenInvalidInstructionTypeError},t.isInitializeMintInstruction=function(n){return n.data.instruction===T.TokenInstruction.InitializeMint},t.isInitializeAccountInstruction=function(n){return n.data.instruction===T.TokenInstruction.InitializeAccount},t.isInitializeMultisigInstruction=function(n){return n.data.instruction===T.TokenInstruction.InitializeMultisig},t.isTransferInstruction=function(n){return n.data.instruction===T.TokenInstruction.Transfer},t.isApproveInstruction=function(n){return n.data.instruction===T.TokenInstruction.Approve},t.isRevokeInstruction=function(n){return n.data.instruction===T.TokenInstruction.Revoke},t.isSetAuthorityInstruction=function(n){return n.data.instruction===T.TokenInstruction.SetAuthority},t.isMintToInstruction=function(n){return n.data.instruction===T.TokenInstruction.MintTo},t.isBurnInstruction=function(n){return n.data.instruction===T.TokenInstruction.Burn},t.isCloseAccountInstruction=function(n){return n.data.instruction===T.TokenInstruction.CloseAccount},t.isFreezeAccountInstruction=function(n){return n.data.instruction===T.TokenInstruction.FreezeAccount},t.isThawAccountInstruction=function(n){return n.data.instruction===T.TokenInstruction.ThawAccount},t.isTransferCheckedInstruction=function(n){return n.data.instruction===T.TokenInstruction.TransferChecked},t.isApproveCheckedInstruction=function(n){return n.data.instruction===T.TokenInstruction.ApproveChecked},t.isMintToCheckedInstruction=function(n){return n.data.instruction===T.TokenInstruction.MintToChecked},t.isBurnCheckedInstruction=function(n){return n.data.instruction===T.TokenInstruction.BurnChecked},t.isInitializeAccount2Instruction=function(n){return n.data.instruction===T.TokenInstruction.InitializeAccount2},t.isSyncNativeInstruction=function(n){return n.data.instruction===T.TokenInstruction.SyncNative},t.isInitializeAccount3Instruction=function(n){return n.data.instruction===T.TokenInstruction.InitializeAccount3},t.isInitializeMint2Instruction=function(n){return n.data.instruction===T.TokenInstruction.InitializeMint2},t.isAmountToUiAmountInstruction=function(n){return n.data.instruction===T.TokenInstruction.AmountToUiAmount},t.isUiamountToAmountInstruction=function(n){return n.data.instruction===T.TokenInstruction.UiAmountToAmount}},39670:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeFreezeAccountInstructionUnchecked=t.decodeFreezeAccountInstruction=t.createFreezeAccountInstruction=t.freezeAccountInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(61081),s=e(31886);function a({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{account:e,mint:l,authority:r,multiSigners:u},data:t.freezeAccountInstructionData.decode(i)}}t.freezeAccountInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createFreezeAccountInstruction=function(n,e,l,i=[],a=u.TOKEN_PROGRAM_ID){const c=(0,o.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1}],l,i),h=Buffer.alloc(t.freezeAccountInstructionData.span);return t.freezeAccountInstructionData.encode({instruction:s.TokenInstruction.FreezeAccount},h),new r.TransactionInstruction({keys:c,programId:a,data:h})},t.decodeFreezeAccountInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.freezeAccountInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,authority:o,multiSigners:c},data:h}=a(n);if(h.instruction!==s.TokenInstruction.FreezeAccount)throw new i.TokenInvalidInstructionTypeError;if(!l||!r||!o)throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,authority:o,multiSigners:c},data:h}},t.decodeFreezeAccountInstructionUnchecked=a},87885:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(34684),t),r(e(20623),t),r(e(31886),t),r(e(54330),t),r(e(91358),t),r(e(46433),t),r(e(22990),t),r(e(68728),t),r(e(26248),t),r(e(13249),t),r(e(36514),t),r(e(82900),t),r(e(15725),t),r(e(39670),t),r(e(7765),t),r(e(67997),t),r(e(13878),t),r(e(11702),t),r(e(52432),t),r(e(48979),t),r(e(20096),t),r(e(53218),t),r(e(89326),t),r(e(38631),t),r(e(4),t),r(e(78641),t),r(e(27776),t),r(e(93434),t),r(e(27892),t),r(e(78719),t),r(e(33817),t)},91358:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeAccountInstructionUnchecked=t.decodeInitializeAccountInstruction=t.createInitializeAccountInstruction=t.initializeAccountInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);function s({programId:n,keys:[e,l,r,u],data:i}){return{programId:n,keys:{account:e,mint:l,owner:r,rent:u},data:t.initializeAccountInstructionData.decode(i)}}t.initializeAccountInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createInitializeAccountInstruction=function(n,e,l,i=u.TOKEN_PROGRAM_ID){const s=[{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:r.SYSVAR_RENT_PUBKEY,isSigner:!1,isWritable:!1}],a=Buffer.alloc(t.initializeAccountInstructionData.span);return t.initializeAccountInstructionData.encode({instruction:o.TokenInstruction.InitializeAccount},a),new r.TransactionInstruction({keys:s,programId:i,data:a})},t.decodeInitializeAccountInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeAccountInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,owner:a,rent:c},data:h}=s(n);if(h.instruction!==o.TokenInstruction.InitializeAccount)throw new i.TokenInvalidInstructionTypeError;if(!(l&&r&&a&&c))throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,owner:a,rent:c},data:h}},t.decodeInitializeAccountInstructionUnchecked=s},48979:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeAccount2InstructionUnchecked=t.decodeInitializeAccount2Instruction=t.createInitializeAccount2Instruction=t.initializeAccount2InstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);function a({programId:n,keys:[e,l,r],data:u}){return{programId:n,keys:{account:e,mint:l,rent:r},data:t.initializeAccount2InstructionData.decode(u)}}t.initializeAccount2InstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.publicKey)("owner")]),t.createInitializeAccount2Instruction=function(n,e,l,r=i.TOKEN_PROGRAM_ID){const o=[{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:u.SYSVAR_RENT_PUBKEY,isSigner:!1,isWritable:!1}],a=Buffer.alloc(t.initializeAccount2InstructionData.span);return t.initializeAccount2InstructionData.encode({instruction:s.TokenInstruction.InitializeAccount2,owner:l},a),new u.TransactionInstruction({keys:o,programId:r,data:a})},t.decodeInitializeAccount2Instruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeAccount2InstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,rent:u},data:c}=a(n);if(c.instruction!==s.TokenInstruction.InitializeAccount2)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,rent:u},data:c}},t.decodeInitializeAccount2InstructionUnchecked=a},53218:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeAccount3InstructionUnchecked=t.decodeInitializeAccount3Instruction=t.createInitializeAccount3Instruction=t.initializeAccount3InstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);function a({programId:n,keys:[e,l],data:r}){return{programId:n,keys:{account:e,mint:l},data:t.initializeAccount3InstructionData.decode(r)}}t.initializeAccount3InstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.publicKey)("owner")]),t.createInitializeAccount3Instruction=function(n,e,l,r=i.TOKEN_PROGRAM_ID){const o=[{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1}],a=Buffer.alloc(t.initializeAccount3InstructionData.span);return t.initializeAccount3InstructionData.encode({instruction:s.TokenInstruction.InitializeAccount3,owner:l},a),new u.TransactionInstruction({keys:o,programId:r,data:a})},t.decodeInitializeAccount3Instruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeAccount3InstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r},data:u}=a(n);if(u.instruction!==s.TokenInstruction.InitializeAccount3)throw new o.TokenInvalidInstructionTypeError;if(!l||!r)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r},data:u}},t.decodeInitializeAccount3InstructionUnchecked=a},4:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeImmutableOwnerInstructionUnchecked=t.decodeInitializeImmutableOwnerInstruction=t.createInitializeImmutableOwnerInstruction=t.initializeImmutableOwnerInstructionData=void 0;const l=e(96346),r=e(27158),u=e(35434),i=e(31886);function o({programId:n,keys:[e],data:l}){const{instruction:r}=t.initializeImmutableOwnerInstructionData.decode(l);return{programId:n,keys:{account:e},data:{instruction:r}}}t.initializeImmutableOwnerInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createInitializeImmutableOwnerInstruction=function(n,e){const l=[{pubkey:n,isSigner:!1,isWritable:!0}],u=Buffer.alloc(t.initializeImmutableOwnerInstructionData.span);return t.initializeImmutableOwnerInstructionData.encode({instruction:i.TokenInstruction.InitializeImmutableOwner},u),new r.TransactionInstruction({keys:l,programId:e,data:u})},t.decodeInitializeImmutableOwnerInstruction=function(n,e){if(!n.programId.equals(e))throw new u.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeImmutableOwnerInstructionData.span)throw new u.TokenInvalidInstructionDataError;const{keys:{account:l},data:r}=o(n);if(r.instruction!==i.TokenInstruction.InitializeImmutableOwner)throw new u.TokenInvalidInstructionTypeError;if(!l)throw new u.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l},data:r}},t.decodeInitializeImmutableOwnerInstructionUnchecked=o},54330:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeMintInstructionUnchecked=t.decodeInitializeMintInstruction=t.createInitializeMintInstruction=t.initializeMintInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);function a({programId:n,keys:[e,l],data:r}){const{instruction:u,decimals:i,mintAuthority:o,freezeAuthorityOption:s,freezeAuthority:a}=t.initializeMintInstructionData.decode(r);return{programId:n,keys:{mint:e,rent:l},data:{instruction:u,decimals:i,mintAuthority:o,freezeAuthority:s?a:null}}}t.initializeMintInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("decimals"),(0,r.publicKey)("mintAuthority"),(0,l.u8)("freezeAuthorityOption"),(0,r.publicKey)("freezeAuthority")]),t.createInitializeMintInstruction=function(n,e,l,r,o=i.TOKEN_PROGRAM_ID){const a=[{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:u.SYSVAR_RENT_PUBKEY,isSigner:!1,isWritable:!1}],c=Buffer.alloc(t.initializeMintInstructionData.span);return t.initializeMintInstructionData.encode({instruction:s.TokenInstruction.InitializeMint,decimals:e,mintAuthority:l,freezeAuthorityOption:r?1:0,freezeAuthority:r||new u.PublicKey(0)},c),new u.TransactionInstruction({keys:a,programId:o,data:c})},t.decodeInitializeMintInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeMintInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l,rent:r},data:u}=a(n);if(u.instruction!==s.TokenInstruction.InitializeMint)throw new o.TokenInvalidInstructionTypeError;if(!l||!r)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l,rent:r},data:u}},t.decodeInitializeMintInstructionUnchecked=a},38631:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeMint2InstructionUnchecked=t.decodeInitializeMint2Instruction=t.createInitializeMint2Instruction=t.initializeMint2InstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);function a({programId:n,keys:[e],data:l}){const{instruction:r,decimals:u,mintAuthority:i,freezeAuthorityOption:o,freezeAuthority:s}=t.initializeMint2InstructionData.decode(l);return{programId:n,keys:{mint:e},data:{instruction:r,decimals:u,mintAuthority:i,freezeAuthority:o?s:null}}}t.initializeMint2InstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("decimals"),(0,r.publicKey)("mintAuthority"),(0,l.u8)("freezeAuthorityOption"),(0,r.publicKey)("freezeAuthority")]),t.createInitializeMint2Instruction=function(n,e,l,r,o=i.TOKEN_PROGRAM_ID){const a=[{pubkey:n,isSigner:!1,isWritable:!0}],c=Buffer.alloc(t.initializeMint2InstructionData.span);return t.initializeMint2InstructionData.encode({instruction:s.TokenInstruction.InitializeMint2,decimals:e,mintAuthority:l,freezeAuthorityOption:r?1:0,freezeAuthority:r||new u.PublicKey(0)},c),new u.TransactionInstruction({keys:a,programId:o,data:c})},t.decodeInitializeMint2Instruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeMint2InstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l},data:r}=a(n);if(r.instruction!==s.TokenInstruction.InitializeMint2)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l},data:r}},t.decodeInitializeMint2InstructionUnchecked=a},93434:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeMintCloseAuthorityInstructionUnchecked=t.decodeInitializeMintCloseAuthorityInstruction=t.createInitializeMintCloseAuthorityInstruction=t.initializeMintCloseAuthorityInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(31886);function a({programId:n,keys:[e],data:l}){const{instruction:r,closeAuthorityOption:u,closeAuthority:i}=t.initializeMintCloseAuthorityInstructionData.decode(l);return{programId:n,keys:{mint:e},data:{instruction:r,closeAuthority:u?i:null}}}t.initializeMintCloseAuthorityInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("closeAuthorityOption"),(0,r.publicKey)("closeAuthority")]),t.createInitializeMintCloseAuthorityInstruction=function(n,e,l){if(!(0,i.programSupportsExtensions)(l))throw new o.TokenUnsupportedInstructionError;const r=[{pubkey:n,isSigner:!1,isWritable:!0}],a=Buffer.alloc(t.initializeMintCloseAuthorityInstructionData.span);return t.initializeMintCloseAuthorityInstructionData.encode({instruction:s.TokenInstruction.InitializeMintCloseAuthority,closeAuthorityOption:e?1:0,closeAuthority:e||new u.PublicKey(0)},a),new u.TransactionInstruction({keys:r,programId:l,data:a})},t.decodeInitializeMintCloseAuthorityInstruction=function(n,e){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeMintCloseAuthorityInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l},data:r}=a(n);if(r.instruction!==s.TokenInstruction.InitializeMintCloseAuthority)throw new o.TokenInvalidInstructionTypeError;if(!l)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l},data:r}},t.decodeInitializeMintCloseAuthorityInstructionUnchecked=a},46433:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeInitializeMultisigInstructionUnchecked=t.decodeInitializeMultisigInstruction=t.createInitializeMultisigInstruction=t.initializeMultisigInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);function s({programId:n,keys:[e,l,...r],data:u}){return{programId:n,keys:{account:e,rent:l,signers:r},data:t.initializeMultisigInstructionData.decode(u)}}t.initializeMultisigInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("m")]),t.createInitializeMultisigInstruction=function(n,e,l,i=u.TOKEN_PROGRAM_ID){const s=[{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r.SYSVAR_RENT_PUBKEY,isSigner:!1,isWritable:!1}];for(const t of e)s.push({pubkey:t,isSigner:!1,isWritable:!1});const a=Buffer.alloc(t.initializeMultisigInstructionData.span);return t.initializeMultisigInstructionData.encode({instruction:o.TokenInstruction.InitializeMultisig,m:l},a),new r.TransactionInstruction({keys:s,programId:i,data:a})},t.decodeInitializeMultisigInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.initializeMultisigInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l,rent:r,signers:a},data:c}=s(n);if(c.instruction!==o.TokenInstruction.InitializeMultisig)throw new i.TokenInvalidInstructionTypeError;if(!l||!r||!a.length)throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,rent:r,signers:a},data:c}},t.decodeInitializeMultisigInstructionUnchecked=s},89326:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},33817:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createInitializeNonTransferableMintInstruction=t.initializeNonTransferableMintInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);t.initializeNonTransferableMintInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createInitializeNonTransferableMintInstruction=function(n,e){if(!(0,u.programSupportsExtensions)(e))throw new i.TokenUnsupportedInstructionError;const l=[{pubkey:n,isSigner:!1,isWritable:!0}],s=Buffer.alloc(t.initializeNonTransferableMintInstructionData.span);return t.initializeNonTransferableMintInstructionData.encode({instruction:o.TokenInstruction.InitializeNonTransferableMint},s),new r.TransactionInstruction({keys:l,programId:e,data:s})}},61081:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addSigners=void 0,t.addSigners=function(n,t,e){if(e.length){n.push({pubkey:t,isSigner:!1,isWritable:!1});for(const t of e)n.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1})}else n.push({pubkey:t,isSigner:!0,isWritable:!1});return n}},36514:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeMintToInstructionUnchecked=t.decodeMintToInstruction=t.createMintToInstruction=t.mintToInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{mint:e,destination:l,authority:r,multiSigners:u},data:t.mintToInstructionData.decode(i)}}t.mintToInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount")]),t.createMintToInstruction=function(n,e,l,r,o=[],c=i.TOKEN_PROGRAM_ID){const h=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0}],l,o),d=Buffer.alloc(t.mintToInstructionData.span);return t.mintToInstructionData.encode({instruction:a.TokenInstruction.MintTo,amount:BigInt(r)},d),new u.TransactionInstruction({keys:h,programId:c,data:d})},t.decodeMintToInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.mintToInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l,destination:r,authority:u,multiSigners:s},data:h}=c(n);if(h.instruction!==a.TokenInstruction.MintTo)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l,destination:r,authority:u,multiSigners:s},data:h}},t.decodeMintToInstructionUnchecked=c},11702:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeMintToCheckedInstructionUnchecked=t.decodeMintToCheckedInstruction=t.createMintToCheckedInstruction=t.mintToCheckedInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{mint:e,destination:l,authority:r,multiSigners:u},data:t.mintToCheckedInstructionData.decode(i)}}t.mintToCheckedInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount"),(0,l.u8)("decimals")]),t.createMintToCheckedInstruction=function(n,e,l,r,o,c=[],h=i.TOKEN_PROGRAM_ID){const d=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0}],l,c),f=Buffer.alloc(t.mintToCheckedInstructionData.span);return t.mintToCheckedInstructionData.encode({instruction:a.TokenInstruction.MintToChecked,amount:BigInt(r),decimals:o},f),new u.TransactionInstruction({keys:d,programId:h,data:f})},t.decodeMintToCheckedInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.mintToCheckedInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{mint:l,destination:r,authority:u,multiSigners:s},data:h}=c(n);if(h.instruction!==a.TokenInstruction.MintToChecked)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{mint:l,destination:r,authority:u,multiSigners:s},data:h}},t.decodeMintToCheckedInstructionUnchecked=c},27892:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createReallocateInstruction=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(61081),s=e(31886);t.createReallocateInstruction=function(n,t,e,a,c=[],h=u.TOKEN_2022_PROGRAM_ID){if(!(0,u.programSupportsExtensions)(h))throw new i.TokenUnsupportedInstructionError;const d=[{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!0,isWritable:!0},{pubkey:r.SystemProgram.programId,isSigner:!1,isWritable:!1}],f=(0,o.addSigners)(d,a,c),p=(0,l.struct)([(0,l.u8)("instruction"),(0,l.seq)((0,l.u16)(),e.length,"extensionTypes")]),g=Buffer.alloc(p.span);return p.encode({instruction:s.TokenInstruction.Reallocate,extensionTypes:e},g),new r.TransactionInstruction({keys:f,programId:h,data:g})}},26248:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeRevokeInstructionUnchecked=t.decodeRevokeInstruction=t.createRevokeInstruction=t.revokeInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(61081),s=e(31886);function a({programId:n,keys:[e,l,...r],data:u}){return{programId:n,keys:{account:e,owner:l,multiSigners:r},data:t.revokeInstructionData.decode(u)}}t.revokeInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createRevokeInstruction=function(n,e,l=[],i=u.TOKEN_PROGRAM_ID){const a=(0,o.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0}],e,l),c=Buffer.alloc(t.revokeInstructionData.span);return t.revokeInstructionData.encode({instruction:s.TokenInstruction.Revoke},c),new r.TransactionInstruction({keys:a,programId:i,data:c})},t.decodeRevokeInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.revokeInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l,owner:r,multiSigners:o},data:c}=a(n);if(c.instruction!==s.TokenInstruction.Revoke)throw new i.TokenInvalidInstructionTypeError;if(!l||!r)throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,owner:r,multiSigners:o},data:c}},t.decodeRevokeInstructionUnchecked=a},13249:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeSetAuthorityInstructionUnchecked=t.decodeSetAuthorityInstruction=t.createSetAuthorityInstruction=t.setAuthorityInstructionData=t.AuthorityType=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,...r],data:u}){const{instruction:i,authorityType:o,newAuthorityOption:s,newAuthority:a}=t.setAuthorityInstructionData.decode(u);return{programId:n,keys:{account:e,currentAuthority:l,multiSigners:r},data:{instruction:i,authorityType:o,newAuthority:s?a:null}}}!function(n){n[n.MintTokens=0]="MintTokens",n[n.FreezeAccount=1]="FreezeAccount",n[n.AccountOwner=2]="AccountOwner",n[n.CloseAccount=3]="CloseAccount"}(t.AuthorityType||(t.AuthorityType={})),t.setAuthorityInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,l.u8)("authorityType"),(0,l.u8)("newAuthorityOption"),(0,r.publicKey)("newAuthority")]),t.createSetAuthorityInstruction=function(n,e,l,r,o=[],c=i.TOKEN_PROGRAM_ID){const h=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0}],e,o),d=Buffer.alloc(t.setAuthorityInstructionData.span);return t.setAuthorityInstructionData.encode({instruction:a.TokenInstruction.SetAuthority,authorityType:l,newAuthorityOption:r?1:0,newAuthority:r||new u.PublicKey(0)},d),new u.TransactionInstruction({keys:h,programId:c,data:d})},t.decodeSetAuthorityInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.setAuthorityInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{account:l,currentAuthority:r,multiSigners:u},data:s}=c(n);if(s.instruction!==a.TokenInstruction.SetAuthority)throw new o.TokenInvalidInstructionTypeError;if(!l||!r)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,currentAuthority:r,multiSigners:u},data:s}},t.decodeSetAuthorityInstructionUnchecked=c},20096:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeSyncNativeInstructionUnchecked=t.decodeSyncNativeInstruction=t.createSyncNativeInstruction=t.syncNativeInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);function s({programId:n,keys:[e],data:l}){return{programId:n,keys:{account:e},data:t.syncNativeInstructionData.decode(l)}}t.syncNativeInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createSyncNativeInstruction=function(n,e=u.TOKEN_PROGRAM_ID){const l=[{pubkey:n,isSigner:!1,isWritable:!0}],i=Buffer.alloc(t.syncNativeInstructionData.span);return t.syncNativeInstructionData.encode({instruction:o.TokenInstruction.SyncNative},i),new r.TransactionInstruction({keys:l,programId:e,data:i})},t.decodeSyncNativeInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.syncNativeInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l},data:r}=s(n);if(r.instruction!==o.TokenInstruction.SyncNative)throw new i.TokenInvalidInstructionTypeError;if(!l)throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l},data:r}},t.decodeSyncNativeInstructionUnchecked=s},7765:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeThawAccountInstructionUnchecked=t.decodeThawAccountInstruction=t.createThawAccountInstruction=t.thawAccountInstructionData=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(61081),s=e(31886);function a({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{account:e,mint:l,authority:r,multiSigners:u},data:t.thawAccountInstructionData.decode(i)}}t.thawAccountInstructionData=(0,l.struct)([(0,l.u8)("instruction")]),t.createThawAccountInstruction=function(n,e,l,i=[],a=u.TOKEN_PROGRAM_ID){const c=(0,o.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1}],l,i),h=Buffer.alloc(t.thawAccountInstructionData.span);return t.thawAccountInstructionData.encode({instruction:s.TokenInstruction.ThawAccount},h),new r.TransactionInstruction({keys:c,programId:a,data:h})},t.decodeThawAccountInstruction=function(n,e=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new i.TokenInvalidInstructionProgramError;if(n.data.length!==t.thawAccountInstructionData.span)throw new i.TokenInvalidInstructionDataError;const{keys:{account:l,mint:r,authority:o,multiSigners:c},data:h}=a(n);if(h.instruction!==s.TokenInstruction.ThawAccount)throw new i.TokenInvalidInstructionTypeError;if(!l||!r||!o)throw new i.TokenInvalidInstructionKeysError;return{programId:e,keys:{account:l,mint:r,authority:o,multiSigners:c},data:h}},t.decodeThawAccountInstructionUnchecked=a},22990:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeTransferInstructionUnchecked=t.decodeTransferInstruction=t.createTransferInstruction=t.transferInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,...u],data:i}){return{programId:n,keys:{source:e,destination:l,owner:r,multiSigners:u},data:t.transferInstructionData.decode(i)}}t.transferInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount")]),t.createTransferInstruction=function(n,e,l,r,o=[],c=i.TOKEN_PROGRAM_ID){const h=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0}],l,o),d=Buffer.alloc(t.transferInstructionData.span);return t.transferInstructionData.encode({instruction:a.TokenInstruction.Transfer,amount:BigInt(r)},d),new u.TransactionInstruction({keys:h,programId:c,data:d})},t.decodeTransferInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.transferInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{source:l,destination:r,owner:u,multiSigners:s},data:h}=c(n);if(h.instruction!==a.TokenInstruction.Transfer)throw new o.TokenInvalidInstructionTypeError;if(!l||!r||!u)throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{source:l,destination:r,owner:u,multiSigners:s},data:h}},t.decodeTransferInstructionUnchecked=c},67997:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeTransferCheckedInstructionUnchecked=t.decodeTransferCheckedInstruction=t.createTransferCheckedInstruction=t.transferCheckedInstructionData=void 0;const l=e(96346),r=e(28813),u=e(27158),i=e(8075),o=e(35434),s=e(61081),a=e(31886);function c({programId:n,keys:[e,l,r,u,...i],data:o}){return{programId:n,keys:{source:e,mint:l,destination:r,owner:u,multiSigners:i},data:t.transferCheckedInstructionData.decode(o)}}t.transferCheckedInstructionData=(0,l.struct)([(0,l.u8)("instruction"),(0,r.u64)("amount"),(0,l.u8)("decimals")]),t.createTransferCheckedInstruction=function(n,e,l,r,o,c,h=[],d=i.TOKEN_PROGRAM_ID){const f=(0,s.addSigners)([{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!0}],r,h),p=Buffer.alloc(t.transferCheckedInstructionData.span);return t.transferCheckedInstructionData.encode({instruction:a.TokenInstruction.TransferChecked,amount:BigInt(o),decimals:c},p),new u.TransactionInstruction({keys:f,programId:d,data:p})},t.decodeTransferCheckedInstruction=function(n,e=i.TOKEN_PROGRAM_ID){if(!n.programId.equals(e))throw new o.TokenInvalidInstructionProgramError;if(n.data.length!==t.transferCheckedInstructionData.span)throw new o.TokenInvalidInstructionDataError;const{keys:{source:l,mint:r,destination:u,owner:s,multiSigners:h},data:d}=c(n);if(d.instruction!==a.TokenInstruction.TransferChecked)throw new o.TokenInvalidInstructionTypeError;if(!(l&&r&&u&&s))throw new o.TokenInvalidInstructionKeysError;return{programId:e,keys:{source:l,mint:r,destination:u,owner:s,multiSigners:h},data:d}},t.decodeTransferCheckedInstructionUnchecked=c},31886:(n,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenInstruction=void 0,function(n){n[n.InitializeMint=0]="InitializeMint",n[n.InitializeAccount=1]="InitializeAccount",n[n.InitializeMultisig=2]="InitializeMultisig",n[n.Transfer=3]="Transfer",n[n.Approve=4]="Approve",n[n.Revoke=5]="Revoke",n[n.SetAuthority=6]="SetAuthority",n[n.MintTo=7]="MintTo",n[n.Burn=8]="Burn",n[n.CloseAccount=9]="CloseAccount",n[n.FreezeAccount=10]="FreezeAccount",n[n.ThawAccount=11]="ThawAccount",n[n.TransferChecked=12]="TransferChecked",n[n.ApproveChecked=13]="ApproveChecked",n[n.MintToChecked=14]="MintToChecked",n[n.BurnChecked=15]="BurnChecked",n[n.InitializeAccount2=16]="InitializeAccount2",n[n.SyncNative=17]="SyncNative",n[n.InitializeAccount3=18]="InitializeAccount3",n[n.InitializeMultisig2=19]="InitializeMultisig2",n[n.InitializeMint2=20]="InitializeMint2",n[n.GetAccountDataSize=21]="GetAccountDataSize",n[n.InitializeImmutableOwner=22]="InitializeImmutableOwner",n[n.AmountToUiAmount=23]="AmountToUiAmount",n[n.UiAmountToAmount=24]="UiAmountToAmount",n[n.InitializeMintCloseAuthority=25]="InitializeMintCloseAuthority",n[n.TransferFeeExtension=26]="TransferFeeExtension",n[n.ConfidentialTransferExtension=27]="ConfidentialTransferExtension",n[n.DefaultAccountStateExtension=28]="DefaultAccountStateExtension",n[n.Reallocate=29]="Reallocate",n[n.MemoTransferExtension=30]="MemoTransferExtension",n[n.CreateNativeMint=31]="CreateNativeMint",n[n.InitializeNonTransferableMint=32]="InitializeNonTransferableMint",n[n.InterestBearingMintExtension=33]="InterestBearingMintExtension"}(t.TokenInstruction||(t.TokenInstruction={}))},27776:(n,t,e)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeUiAmountToAmountInstructionUnchecked=t.decodeUiAmountToAmountInstruction=t.createUiAmountToAmountInstruction=void 0;const l=e(96346),r=e(27158),u=e(8075),i=e(35434),o=e(31886);function s({programId:n,keys:[t],data:e}){return{programId:n,keys:{mint:t},data:(0,l.struct)([(0,l.u8)("instruction"),(0,l.blob)(e.length-1,"amount")]).decode(e)}}t.createUiAmountToAmountInstruction=function(n,t,e=u.TOKEN_PROGRAM_ID){const i=[{pubkey:n,isSigner:!1,isWritable:!1}],s=Buffer.from(t,"utf8"),a=(0,l.struct)([(0,l.u8)("instruction"),(0,l.blob)(s.length,"amount")]),c=Buffer.alloc(a.span);return a.encode({instruction:o.TokenInstruction.UiAmountToAmount,amount:s},c),new r.TransactionInstruction({keys:i,programId:e,data:c})},t.decodeUiAmountToAmountInstruction=function(n,t=u.TOKEN_PROGRAM_ID){if(!n.programId.equals(t))throw new i.TokenInvalidInstructionProgramError;const e=(0,l.struct)([(0,l.u8)("instruction"),(0,l.blob)(n.data.length-1,"amount")]);if(n.data.length!==e.span)throw new i.TokenInvalidInstructionDataError;const{keys:{mint:r},data:a}=s(n);if(a.instruction!==o.TokenInstruction.UiAmountToAmount)throw new i.TokenInvalidInstructionTypeError;if(!r)throw new i.TokenInvalidInstructionKeysError;return{programId:t,keys:{mint:r},data:a}},t.decodeUiAmountToAmountInstructionUnchecked=s},77014:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.unpackAccount=t.getMinimumBalanceForRentExemptAccountWithExtensions=t.getMinimumBalanceForRentExemptAccount=t.getMultipleAccounts=t.getAccount=t.ACCOUNT_SIZE=t.AccountLayout=t.AccountState=void 0;const r=e(96346),u=e(28813),i=e(8075),o=e(35434),s=e(6869),a=e(53907),c=e(74610);var h;function d(n,t,e){return l(this,void 0,void 0,(function*(){const l=(0,a.getAccountLen)(t);return yield n.getMinimumBalanceForRentExemption(l,e)}))}function f(n,e,l=i.TOKEN_PROGRAM_ID){if(!e)throw new o.TokenAccountNotFoundError;if(!e.owner.equals(l))throw new o.TokenInvalidAccountOwnerError;if(e.data.length<t.ACCOUNT_SIZE)throw new o.TokenInvalidAccountSizeError;const r=t.AccountLayout.decode(e.data.slice(0,t.ACCOUNT_SIZE));let u=Buffer.alloc(0);if(e.data.length>t.ACCOUNT_SIZE){if(e.data.length===c.MULTISIG_SIZE)throw new o.TokenInvalidAccountSizeError;if(e.data[t.ACCOUNT_SIZE]!=s.AccountType.Account)throw new o.TokenInvalidAccountError;u=e.data.slice(t.ACCOUNT_SIZE+s.ACCOUNT_TYPE_SIZE)}return{address:n,mint:r.mint,owner:r.owner,amount:r.amount,delegate:r.delegateOption?r.delegate:null,delegatedAmount:r.delegatedAmount,isInitialized:r.state!==h.Uninitialized,isFrozen:r.state===h.Frozen,isNative:!!r.isNativeOption,rentExemptReserve:r.isNativeOption?r.isNative:null,closeAuthority:r.closeAuthorityOption?r.closeAuthority:null,tlvData:u}}!function(n){n[n.Uninitialized=0]="Uninitialized",n[n.Initialized=1]="Initialized",n[n.Frozen=2]="Frozen"}(h=t.AccountState||(t.AccountState={})),t.AccountLayout=(0,r.struct)([(0,u.publicKey)("mint"),(0,u.publicKey)("owner"),(0,u.u64)("amount"),(0,r.u32)("delegateOption"),(0,u.publicKey)("delegate"),(0,r.u8)("state"),(0,r.u32)("isNativeOption"),(0,u.u64)("isNative"),(0,u.u64)("delegatedAmount"),(0,r.u32)("closeAuthorityOption"),(0,u.publicKey)("closeAuthority")]),t.ACCOUNT_SIZE=t.AccountLayout.span,t.getAccount=function(n,t,e,r=i.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield n.getAccountInfo(t,e);return f(t,l,r)}))},t.getMultipleAccounts=function(n,t,e,r=i.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield n.getMultipleAccountsInfo(t,e);return t.map(((n,t)=>f(n,l[t],r)))}))},t.getMinimumBalanceForRentExemptAccount=function(n,t){return l(this,void 0,void 0,(function*(){return yield d(n,[],t)}))},t.getMinimumBalanceForRentExemptAccountWithExtensions=d,t.unpackAccount=f},79235:function(n,t,e){"use strict";var l=this&&this.__createBinding||(Object.create?function(n,t,e,l){void 0===l&&(l=e);var r=Object.getOwnPropertyDescriptor(t,e);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(n,l,r)}:function(n,t,e,l){void 0===l&&(l=e),n[l]=t[e]}),r=this&&this.__exportStar||function(n,t){for(var e in n)"default"===e||Object.prototype.hasOwnProperty.call(t,e)||l(t,n,e)};Object.defineProperty(t,"__esModule",{value:!0}),r(e(77014),t),r(e(41022),t),r(e(74610),t)},41022:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getAssociatedTokenAddressSync=t.getAssociatedTokenAddress=t.getMinimumBalanceForRentExemptMintWithExtensions=t.getMinimumBalanceForRentExemptMint=t.unpackMint=t.getMint=t.MINT_SIZE=t.MintLayout=void 0;const r=e(96346),u=e(28813),i=e(27158),o=e(8075),s=e(35434),a=e(6869),c=e(53907),h=e(77014),d=e(74610);function f(n,e,l=o.TOKEN_PROGRAM_ID){if(!e)throw new s.TokenAccountNotFoundError;if(!e.owner.equals(l))throw new s.TokenInvalidAccountOwnerError;if(e.data.length<t.MINT_SIZE)throw new s.TokenInvalidAccountSizeError;const r=t.MintLayout.decode(e.data.slice(0,t.MINT_SIZE));let u=Buffer.alloc(0);if(e.data.length>t.MINT_SIZE){if(e.data.length<=h.ACCOUNT_SIZE)throw new s.TokenInvalidAccountSizeError;if(e.data.length===d.MULTISIG_SIZE)throw new s.TokenInvalidAccountSizeError;if(e.data[h.ACCOUNT_SIZE]!=a.AccountType.Mint)throw new s.TokenInvalidMintError;u=e.data.slice(h.ACCOUNT_SIZE+a.ACCOUNT_TYPE_SIZE)}return{address:n,mintAuthority:r.mintAuthorityOption?r.mintAuthority:null,supply:r.supply,decimals:r.decimals,isInitialized:r.isInitialized,freezeAuthority:r.freezeAuthorityOption?r.freezeAuthority:null,tlvData:u}}function p(n,t,e){return l(this,void 0,void 0,(function*(){const l=(0,c.getMintLen)(t);return yield n.getMinimumBalanceForRentExemption(l,e)}))}t.MintLayout=(0,r.struct)([(0,r.u32)("mintAuthorityOption"),(0,u.publicKey)("mintAuthority"),(0,u.u64)("supply"),(0,r.u8)("decimals"),(0,u.bool)("isInitialized"),(0,r.u32)("freezeAuthorityOption"),(0,u.publicKey)("freezeAuthority")]),t.MINT_SIZE=t.MintLayout.span,t.getMint=function(n,t,e,r=o.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield n.getAccountInfo(t,e);return f(t,l,r)}))},t.unpackMint=f,t.getMinimumBalanceForRentExemptMint=function(n,t){return l(this,void 0,void 0,(function*(){return yield p(n,[],t)}))},t.getMinimumBalanceForRentExemptMintWithExtensions=p,t.getAssociatedTokenAddress=function(n,t,e=!1,r=o.TOKEN_PROGRAM_ID,u=o.ASSOCIATED_TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){if(!e&&!i.PublicKey.isOnCurve(t.toBuffer()))throw new s.TokenOwnerOffCurveError;const[l]=yield i.PublicKey.findProgramAddress([t.toBuffer(),r.toBuffer(),n.toBuffer()],u);return l}))},t.getAssociatedTokenAddressSync=function(n,t,e=!1,l=o.TOKEN_PROGRAM_ID,r=o.ASSOCIATED_TOKEN_PROGRAM_ID){if(!e&&!i.PublicKey.isOnCurve(t.toBuffer()))throw new s.TokenOwnerOffCurveError;const[u]=i.PublicKey.findProgramAddressSync([t.toBuffer(),l.toBuffer(),n.toBuffer()],r);return u}},74610:function(n,t,e){"use strict";var l=this&&this.__awaiter||function(n,t,e,l){return new(e||(e=Promise))((function(r,u){function i(n){try{s(l.next(n))}catch(t){u(t)}}function o(n){try{s(l.throw(n))}catch(t){u(t)}}function s(n){var t;n.done?r(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,o)}s((l=l.apply(n,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getMinimumBalanceForRentExemptMultisig=t.unpackMultisig=t.getMultisig=t.MULTISIG_SIZE=t.MultisigLayout=void 0;const r=e(96346),u=e(28813),i=e(8075),o=e(35434);function s(n,e,l=i.TOKEN_PROGRAM_ID){if(!e)throw new o.TokenAccountNotFoundError;if(!e.owner.equals(l))throw new o.TokenInvalidAccountOwnerError;if(e.data.length!=t.MULTISIG_SIZE)throw new o.TokenInvalidAccountSizeError;const r=t.MultisigLayout.decode(e.data);return Object.assign({address:n},r)}t.MultisigLayout=(0,r.struct)([(0,r.u8)("m"),(0,r.u8)("n"),(0,u.bool)("isInitialized"),(0,u.publicKey)("signer1"),(0,u.publicKey)("signer2"),(0,u.publicKey)("signer3"),(0,u.publicKey)("signer4"),(0,u.publicKey)("signer5"),(0,u.publicKey)("signer6"),(0,u.publicKey)("signer7"),(0,u.publicKey)("signer8"),(0,u.publicKey)("signer9"),(0,u.publicKey)("signer10"),(0,u.publicKey)("signer11")]),t.MULTISIG_SIZE=t.MultisigLayout.span,t.getMultisig=function(n,t,e,r=i.TOKEN_PROGRAM_ID){return l(this,void 0,void 0,(function*(){const l=yield n.getAccountInfo(t,e);return s(t,l,r)}))},t.unpackMultisig=s,t.getMinimumBalanceForRentExemptMultisig=function(n,e){return l(this,void 0,void 0,(function*(){return yield n.getMinimumBalanceForRentExemption(t.MULTISIG_SIZE,e)}))}},21686:(n,t,e)=>{"use strict";var l;e.d(t,{E9:()=>I,P6:()=>nn,Z_:()=>J});var r=e(77378);const u=BigInt(0),i=BigInt(1),o=BigInt(2),s=BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),a=Object.freeze({a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),l:s,n:s,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")}),c=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000"),h=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),d=(BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742"),BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235")),f=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),p=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),g=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");class y{constructor(n,t,e,l){this.x=n,this.y=t,this.z=e,this.t=l}static fromAffine(n){if(!(n instanceof I))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return n.equals(I.ZERO)?y.ZERO:new y(n.x,n.y,i,C(n.x*n.y))}static toAffineBatch(n){const t=function(n,t=a.P){const e=new Array(n.length),l=U(n.reduce(((n,l,r)=>l===u?n:(e[r]=n,C(n*l,t))),i),t);return n.reduceRight(((n,l,r)=>l===u?n:(e[r]=C(n*e[r],t),C(n*l,t))),l),e}(n.map((n=>n.z)));return n.map(((n,e)=>n.toAffine(t[e])))}static normalizeZ(n){return this.toAffineBatch(n).map(this.fromAffine)}equals(n){m(n);const{x:t,y:e,z:l}=this,{x:r,y:u,z:i}=n,o=C(t*i),s=C(r*l),a=C(e*i),c=C(u*l);return o===s&&a===c}negate(){return new y(C(-this.x),this.y,this.z,C(-this.t))}double(){const{x:n,y:t,z:e}=this,{a:l}=a,r=C(n*n),u=C(t*t),i=C(o*C(e*e)),s=C(l*r),c=n+t,h=C(C(c*c)-r-u),d=s+u,f=d-i,p=s-u,g=C(h*f),m=C(d*p),b=C(h*p),w=C(f*d);return new y(g,m,w,b)}add(n){m(n);const{x:t,y:e,z:l,t:r}=this,{x:i,y:s,z:a,t:c}=n,h=C((e-t)*(s+i)),d=C((e+t)*(s-i)),f=C(d-h);if(f===u)return this.double();const p=C(l*o*c),g=C(r*o*a),b=g+p,w=d+h,v=g-p,k=C(b*f),I=C(w*v),A=C(b*v),_=C(f*w);return new y(k,I,_,A)}subtract(n){return this.add(n.negate())}precomputeWindow(n){const t=1+256/n,e=[];let l=this,r=l;for(let u=0;u<t;u++){r=l,e.push(r);for(let t=1;t<2**(n-1);t++)r=r.add(l),e.push(r);l=r.double()}return e}wNAF(n,t){!t&&this.equals(y.BASE)&&(t=I.BASE);const e=t&&t._WINDOW_SIZE||1;if(256%e)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let l=t&&k.get(t);l||(l=this.precomputeWindow(e),t&&1!==e&&(l=y.normalizeZ(l),k.set(t,l)));let r=y.ZERO,u=y.ZERO;const o=1+256/e,s=2**(e-1),a=BigInt(2**e-1),c=2**e,h=BigInt(e);for(let d=0;d<o;d++){const t=d*s;let e=Number(n&a);if(n>>=h,e>s&&(e-=c,n+=i),0===e){let n=l[t];d%2&&(n=n.negate()),u=u.add(n)}else{let n=l[t+Math.abs(e)-1];e<0&&(n=n.negate()),r=r.add(n)}}return y.normalizeZ([r,u])[0]}multiply(n,t){return this.wNAF(j(n,a.l),t)}multiplyUnsafe(n){let t=j(n,a.l,!1);const e=y.BASE,l=y.ZERO;if(t===u)return l;if(this.equals(l)||t===i)return this;if(this.equals(e))return this.wNAF(t);let r=l,o=this;for(;t>u;)t&i&&(r=r.add(o)),o=o.double(),t>>=i;return r}isSmallOrder(){return this.multiplyUnsafe(a.h).equals(y.ZERO)}isTorsionFree(){return this.multiplyUnsafe(a.l).equals(y.ZERO)}toAffine(n=U(this.z)){const{x:t,y:e,z:l}=this,r=C(t*n),u=C(e*n);if(C(l*n)!==i)throw new Error("invZ was invalid");return new I(r,u)}fromRistrettoBytes(){w()}toRistrettoBytes(){w()}fromRistrettoHash(){w()}}function m(n){if(!(n instanceof y))throw new TypeError("ExtendedPoint expected")}function b(n){if(!(n instanceof v))throw new TypeError("RistrettoPoint expected")}function w(){throw new Error("Legacy method: switch to RistrettoPoint")}y.BASE=new y(a.Gx,a.Gy,i,C(a.Gx*a.Gy)),y.ZERO=new y(u,i,i,u);class v{constructor(n){this.ep=n}static calcElligatorRistrettoMap(n){const{d:t}=a,e=C(h*n*n),l=C((e+i)*p);let r=BigInt(-1);const u=C((r-t*e)*C(e+t));let{isValid:o,value:s}=z(l,u),c=C(s*n);P(c)||(c=C(-c)),o||(s=c),o||(r=e);const f=C(r*(e-i)*g-u),m=s*s,b=C((s+s)*u),w=C(f*d),v=C(i-m),k=C(i+m);return new y(C(b*k),C(v*w),C(w*k),C(b*v))}static hashToCurve(n){const t=M((n=W(n,64)).slice(0,32)),e=this.calcElligatorRistrettoMap(t),l=M(n.slice(32,64)),r=this.calcElligatorRistrettoMap(l);return new v(e.add(r))}static fromHex(n){n=W(n,32);const{a:t,d:e}=a,l="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",r=M(n);if(!function(n,t){if(n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}(B(r),n)||P(r))throw new Error(l);const o=C(r*r),s=C(i+t*o),c=C(i-t*o),h=C(s*s),d=C(c*c),f=C(t*e*h-d),{isValid:p,value:g}=K(C(f*d)),m=C(g*c),b=C(g*m*f);let w=C((r+r)*m);P(w)&&(w=C(-w));const k=C(s*b),I=C(w*k);if(!p||P(I)||k===u)throw new Error(l);return new v(new y(w,k,i,I))}toRawBytes(){let{x:n,y:t,z:e,t:l}=this.ep;const r=C(C(e+t)*C(e-t)),u=C(n*t),i=C(u*u),{value:o}=K(C(r*i)),s=C(o*r),a=C(o*u),c=C(s*a*l);let d;if(P(l*c)){let e=C(t*h),l=C(n*h);n=e,t=l,d=C(s*f)}else d=a;P(n*c)&&(t=C(-t));let p=C((e-t)*d);return P(p)&&(p=C(-p)),B(p)}toHex(){return S(this.toRawBytes())}toString(){return this.toHex()}equals(n){b(n);const t=this.ep,e=n.ep,l=C(t.x*e.y)===C(t.y*e.x),r=C(t.y*e.y)===C(t.x*e.x);return l||r}add(n){return b(n),new v(this.ep.add(n.ep))}subtract(n){return b(n),new v(this.ep.subtract(n.ep))}multiply(n){return new v(this.ep.multiply(n))}multiplyUnsafe(n){return new v(this.ep.multiplyUnsafe(n))}}v.BASE=new v(y.BASE),v.ZERO=new v(y.ZERO);const k=new WeakMap;class I{constructor(n,t){this.x=n,this.y=t}_setWindowSize(n){this._WINDOW_SIZE=n,k.delete(this)}static fromHex(n,t=!0){const{d:e,P:l}=a,r=(n=W(n,32)).slice();r[31]=-129&n[31];const u=R(r);if(t&&u>=l)throw new Error("Expected 0 < hex < P");if(!t&&u>=c)throw new Error("Expected 0 < hex < 2**256");const o=C(u*u),s=C(o-i),h=C(e*o+i);let{isValid:d,value:f}=z(s,h);if(!d)throw new Error("Point.fromHex: invalid y coordinate");const p=(f&i)===i;return 0!=(128&n[31])!==p&&(f=C(-f)),new I(f,u)}static async fromPrivateKey(n){return(await Z(n)).point}toRawBytes(){const n=B(this.y);return n[31]|=this.x&i?128:0,n}toHex(){return S(this.toRawBytes())}toX25519(){const{y:n}=this;return B(C((i+n)*U(i-n)))}isTorsionFree(){return y.fromAffine(this).isTorsionFree()}equals(n){return this.x===n.x&&this.y===n.y}negate(){return new I(C(-this.x),this.y)}add(n){return y.fromAffine(this).add(y.fromAffine(n)).toAffine()}subtract(n){return this.add(n.negate())}multiply(n){return y.fromAffine(this).multiply(n,this).toAffine()}}I.BASE=new I(a.Gx,a.Gy),I.ZERO=new I(u,i);class A{constructor(n,t){this.r=n,this.s=t,this.assertValidity()}static fromHex(n){const t=W(n,64),e=I.fromHex(t.slice(0,32),!1),l=R(t.slice(32,64));return new A(e,l)}assertValidity(){const{r:n,s:t}=this;if(!(n instanceof I))throw new Error("Expected Point instance");return j(t,a.l,!1),this}toRawBytes(){const n=new Uint8Array(64);return n.set(this.r.toRawBytes()),n.set(B(this.s),32),n}toHex(){return S(this.toRawBytes())}}function _(...n){if(!n.every((n=>n instanceof Uint8Array)))throw new Error("Expected Uint8Array list");if(1===n.length)return n[0];const t=n.reduce(((n,t)=>n+t.length),0),e=new Uint8Array(t);for(let l=0,r=0;l<n.length;l++){const t=n[l];e.set(t,r),r+=t.length}return e}const E=Array.from({length:256},((n,t)=>t.toString(16).padStart(2,"0")));function S(n){if(!(n instanceof Uint8Array))throw new Error("Uint8Array expected");let t="";for(let e=0;e<n.length;e++)t+=E[n[e]];return t}function T(n){if("string"!=typeof n)throw new TypeError("hexToBytes: expected string, got "+typeof n);if(n.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(n.length/2);for(let e=0;e<t.length;e++){const l=2*e,r=n.slice(l,l+2),u=Number.parseInt(r,16);if(Number.isNaN(u)||u<0)throw new Error("Invalid byte sequence");t[e]=u}return t}function x(n){return T(n.toString(16).padStart(64,"0"))}function B(n){return x(n).reverse()}function P(n){return(C(n)&i)===i}function R(n){if(!(n instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+S(Uint8Array.from(n).reverse()))}const O=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function M(n){return C(R(n)&O)}function C(n,t=a.P){const e=n%t;return e>=u?e:t+e}function U(n,t=a.P){if(n===u||t<=u)throw new Error(`invert: expected positive integers, got n=${n} mod=${t}`);let e=C(n,t),l=t,r=u,o=i,s=i,c=u;for(;e!==u;){const n=l/e,t=l%e,u=r-s*n,i=o-c*n;l=e,e=t,r=s,o=c,s=u,c=i}if(l!==i)throw new Error("invert: does not exist");return C(r,t)}function L(n,t){const{P:e}=a;let l=n;for(;t-- >u;)l*=l,l%=e;return l}function N(n){const{P:t}=a,e=BigInt(5),l=BigInt(10),r=BigInt(20),u=BigInt(40),s=BigInt(80),c=n*n%t*n%t,h=L(c,o)*c%t,d=L(h,i)*n%t,f=L(d,e)*d%t,p=L(f,l)*f%t,g=L(p,r)*p%t,y=L(g,u)*g%t,m=L(y,s)*y%t,b=L(m,s)*y%t,w=L(b,l)*f%t;return{pow_p_5_8:L(w,o)*n%t,b2:c}}function z(n,t){const e=C(t*t*t),l=C(e*e*t);let r=C(n*e*N(n*l).pow_p_5_8);const u=C(t*r*r),i=r,o=C(r*h),s=u===n,a=u===C(-n),c=u===C(-n*h);return s&&(r=i),(a||c)&&(r=o),P(r)&&(r=C(-r)),{isValid:s||a,value:r}}function K(n){return z(i,n)}function D(n){return C(R(n),a.l)}function W(n,t){const e=n instanceof Uint8Array?Uint8Array.from(n):T(n);if("number"==typeof t&&e.length!==t)throw new Error(`Expected ${t} bytes`);return e}function j(n,t,e=!0){if(!t)throw new TypeError("Specify max value");if("number"==typeof n&&Number.isSafeInteger(n)&&(n=BigInt(n)),"bigint"==typeof n&&n<t)if(e){if(u<n)return n}else if(u<=n)return n;throw new TypeError("Expected valid scalar: 0 < scalar < max")}function F(n){return n[0]&=248,n[31]&=127,n[31]|=64,n}function q(n){if(32!==(n="bigint"==typeof n||"number"==typeof n?x(j(n,c)):W(n)).length)throw new Error("Expected 32 bytes");return n}function H(n){const t=F(n.slice(0,32)),e=n.slice(32,64),l=D(t),r=I.BASE.multiply(l),u=r.toRawBytes();return{head:t,prefix:e,scalar:l,point:r,pointBytes:u}}let G;function $(...n){if("function"!=typeof G)throw new Error("utils.sha512Sync must be set to use sync methods");return G(...n)}async function Z(n){return H(await nn.sha512(q(n)))}function V(n){return H($(q(n)))}function X(n,t,e){t=W(t),e instanceof I||(e=I.fromHex(e,!1));const{r:l,s:r}=n instanceof A?n.assertValidity():A.fromHex(n);return{r:l,s:r,SB:y.BASE.multiplyUnsafe(r),pub:e,msg:t}}function Y(n,t,e,l){const r=D(l),u=y.fromAffine(n).multiplyUnsafe(r);return y.fromAffine(t).add(u).subtract(e).multiplyUnsafe(a.h).equals(y.ZERO)}const J={getExtendedPublicKey:V,getPublicKey:function(n){return V(n).pointBytes},sign:function(n,t){n=W(n);const{prefix:e,scalar:l,pointBytes:r}=V(t),u=D($(e,n)),i=I.BASE.multiply(u),o=C(u+D($(i.toRawBytes(),r,n))*l,a.l);return new A(i,o).toRawBytes()},verify:function(n,t,e){const{r:l,SB:r,msg:u,pub:i}=X(n,t,e),o=$(l.toRawBytes(),i.toRawBytes(),u);return Y(i,l,r,o)}};I.BASE._setWindowSize(8);const Q={node:l||(l=e.t(r,2)),web:"object"==typeof self&&"crypto"in self?self.crypto:void 0},nn={bytesToHex:S,hexToBytes:T,concatBytes:_,getExtendedPublicKey:Z,mod:C,invert:U,TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],hashToPrivateScalar:n=>{if((n=W(n)).length<40||n.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");return C(R(n),a.l-i)+i},randomBytes:(n=32)=>{if(Q.web)return Q.web.getRandomValues(new Uint8Array(n));if(Q.node){const{randomBytes:t}=Q.node;return new Uint8Array(t(n).buffer)}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>nn.randomBytes(32),sha512:async(...n)=>{const t=_(...n);if(Q.web){const n=await Q.web.subtle.digest("SHA-512",t.buffer);return new Uint8Array(n)}if(Q.node)return Uint8Array.from(Q.node.createHash("sha512").update(t).digest());throw new Error("The environment doesn't have sha512 function")},precompute(n=8,t=I.BASE){const e=t.equals(I.BASE)?t:new I(t.x,t.y);return e._setWindowSize(n),e.multiply(o),e},sha512Sync:void 0};Object.defineProperties(nn,{sha512Sync:{configurable:!1,get:()=>G,set(n){G||(G=n)}}})},59629:(n,t,e)=>{"use strict";function l(n){if(!Number.isSafeInteger(n)||n<0)throw new Error(`Wrong positive integer: ${n}`)}function r(n,...t){if(!(n instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(n.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${n.length}`)}e.d(t,{ZP:()=>i});const u={number:l,bool:function(n){if("boolean"!=typeof n)throw new Error(`Expected boolean, not ${n}`)},bytes:r,hash:function(n){if("function"!=typeof n||"function"!=typeof n.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");l(n.outputLen),l(n.blockLen)},exists:function(n,t=!0){if(n.destroyed)throw new Error("Hash instance has been destroyed");if(t&&n.finished)throw new Error("Hash#digest() has already been called")},output:function(n,t){r(n);const e=t.outputLen;if(n.length<e)throw new Error(`digestInto() expects output buffer of length at least ${e}`)}},i=u},5088:(n,t,e)=>{"use strict";e.d(t,{N:()=>u});var l=e(59629),r=e(94850);class u extends r.kb{constructor(n,t,e,l){super(),this.blockLen=n,this.outputLen=t,this.padOffset=e,this.isLE=l,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(n),this.view=(0,r.GL)(this.buffer)}update(n){l.ZP.exists(this);const{view:t,buffer:e,blockLen:u}=this,i=(n=(0,r.O0)(n)).length;for(let l=0;l<i;){const o=Math.min(u-this.pos,i-l);if(o!==u)e.set(n.subarray(l,l+o),this.pos),this.pos+=o,l+=o,this.pos===u&&(this.process(t,0),this.pos=0);else{const t=(0,r.GL)(n);for(;u<=i-l;l+=u)this.process(t,l)}}return this.length+=n.length,this.roundClean(),this}digestInto(n){l.ZP.exists(this),l.ZP.output(n,this),this.finished=!0;const{buffer:t,view:e,blockLen:u,isLE:i}=this;let{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>u-o&&(this.process(e,0),o=0);for(let l=o;l<u;l++)t[l]=0;!function(n,t,e,l){if("function"==typeof n.setBigUint64)return n.setBigUint64(t,e,l);const r=BigInt(32),u=BigInt(4294967295),i=Number(e>>r&u),o=Number(e&u),s=l?4:0,a=l?0:4;n.setUint32(t+s,i,l),n.setUint32(t+a,o,l)}(e,u-8,BigInt(8*this.length),i),this.process(e,0);const s=(0,r.GL)(n);this.get().forEach(((n,t)=>s.setUint32(4*t,n,i)))}digest(){const{buffer:n,outputLen:t}=this;this.digestInto(n);const e=n.slice(0,t);return this.destroy(),e}_cloneInto(n){n||(n=new this.constructor),n.set(...this.get());const{blockLen:t,buffer:e,length:l,finished:r,destroyed:u,pos:i}=this;return n.length=l,n.pos=i,n.finished=r,n.destroyed=u,l%t&&n.buffer.set(e),n}}},96541:(n,t,e)=>{"use strict";e.d(t,{ZP:()=>i});const l=BigInt(2**32-1),r=BigInt(32);function u(n,t=!1){return t?{h:Number(n&l),l:Number(n>>r&l)}:{h:0|Number(n>>r&l),l:0|Number(n&l)}}const i={fromBig:u,split:function(n,t=!1){let e=new Uint32Array(n.length),l=new Uint32Array(n.length);for(let r=0;r<n.length;r++){const{h:i,l:o}=u(n[r],t);[e[r],l[r]]=[i,o]}return[e,l]},toBig:(n,t)=>BigInt(n>>>0)<<r|BigInt(t>>>0),shrSH:(n,t,e)=>n>>>e,shrSL:(n,t,e)=>n<<32-e|t>>>e,rotrSH:(n,t,e)=>n>>>e|t<<32-e,rotrSL:(n,t,e)=>n<<32-e|t>>>e,rotrBH:(n,t,e)=>n<<64-e|t>>>e-32,rotrBL:(n,t,e)=>n>>>e-32|t<<64-e,rotr32H:(n,t)=>t,rotr32L:(n,t)=>n,rotlSH:(n,t,e)=>n<<e|t>>>32-e,rotlSL:(n,t,e)=>t<<e|n>>>32-e,rotlBH:(n,t,e)=>t<<e-32|n>>>64-e,rotlBL:(n,t,e)=>n<<e-32|t>>>64-e,add:function(n,t,e,l){const r=(t>>>0)+(l>>>0);return{h:n+e+(r/2**32|0)|0,l:0|r}},add3L:(n,t,e)=>(n>>>0)+(t>>>0)+(e>>>0),add3H:(n,t,e,l)=>t+e+l+(n/2**32|0)|0,add4L:(n,t,e,l)=>(n>>>0)+(t>>>0)+(e>>>0)+(l>>>0),add4H:(n,t,e,l,r)=>t+e+l+r+(n/2**32|0)|0,add5H:(n,t,e,l,r,u)=>t+e+l+r+u+(n/2**32|0)|0,add5L:(n,t,e,l,r)=>(n>>>0)+(t>>>0)+(e>>>0)+(l>>>0)+(r>>>0)}},10846:(n,t,e)=>{"use strict";e.d(t,{b:()=>i});var l=e(59629),r=e(94850);class u extends r.kb{constructor(n,t){super(),this.finished=!1,this.destroyed=!1,l.ZP.hash(n);const e=(0,r.O0)(t);if(this.iHash=n.create(),!(this.iHash instanceof r.kb))throw new TypeError("Expected instance of class which extends utils.Hash");const u=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const i=new Uint8Array(u);i.set(e.length>this.iHash.blockLen?n.create().update(e).digest():e);for(let l=0;l<i.length;l++)i[l]^=54;this.iHash.update(i),this.oHash=n.create();for(let l=0;l<i.length;l++)i[l]^=106;this.oHash.update(i),i.fill(0)}update(n){return l.ZP.exists(this),this.iHash.update(n),this}digestInto(n){l.ZP.exists(this),l.ZP.bytes(n,this.outputLen),this.finished=!0,this.iHash.digestInto(n),this.oHash.update(n),this.oHash.digestInto(n),this.destroy()}digest(){const n=new Uint8Array(this.oHash.outputLen);return this.digestInto(n),n}_cloneInto(n){n||(n=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:e,finished:l,destroyed:r,blockLen:u,outputLen:i}=this;return n.finished=l,n.destroyed=r,n.blockLen=u,n.outputLen=i,n.oHash=t._cloneInto(n.oHash),n.iHash=e._cloneInto(n.iHash),n}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const i=(n,t,e)=>new u(n,t).update(e).digest();i.create=(n,t)=>new u(n,t)},53929:(n,t,e)=>{"use strict";e.d(t,{J:()=>c});var l=e(5088),r=e(94850);const u=(n,t,e)=>n&t^n&e^t&e,i=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),o=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),s=new Uint32Array(64);class a extends l.N{constructor(){super(64,32,8,!1),this.A=0|o[0],this.B=0|o[1],this.C=0|o[2],this.D=0|o[3],this.E=0|o[4],this.F=0|o[5],this.G=0|o[6],this.H=0|o[7]}get(){const{A:n,B:t,C:e,D:l,E:r,F:u,G:i,H:o}=this;return[n,t,e,l,r,u,i,o]}set(n,t,e,l,r,u,i,o){this.A=0|n,this.B=0|t,this.C=0|e,this.D=0|l,this.E=0|r,this.F=0|u,this.G=0|i,this.H=0|o}process(n,t){for(let r=0;r<16;r++,t+=4)s[r]=n.getUint32(t,!1);for(let u=16;u<64;u++){const n=s[u-15],t=s[u-2],e=(0,r.np)(n,7)^(0,r.np)(n,18)^n>>>3,l=(0,r.np)(t,17)^(0,r.np)(t,19)^t>>>10;s[u]=l+s[u-7]+e+s[u-16]|0}let{A:e,B:l,C:o,D:a,E:c,F:h,G:d,H:f}=this;for(let g=0;g<64;g++){const n=f+((0,r.np)(c,6)^(0,r.np)(c,11)^(0,r.np)(c,25))+((p=c)&h^~p&d)+i[g]+s[g]|0,t=((0,r.np)(e,2)^(0,r.np)(e,13)^(0,r.np)(e,22))+u(e,l,o)|0;f=d,d=h,h=c,c=a+n|0,a=o,o=l,l=e,e=n+t|0}var p;e=e+this.A|0,l=l+this.B|0,o=o+this.C|0,a=a+this.D|0,c=c+this.E|0,h=h+this.F|0,d=d+this.G|0,f=f+this.H|0,this.set(e,l,o,a,c,h,d,f)}roundClean(){s.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const c=(0,r.hE)((()=>new a))},48796:(n,t,e)=>{"use strict";e.d(t,{fr:()=>k});var l=e(59629),r=e(96541),u=e(94850);const[i,o,s]=[[],[],[]],a=BigInt(0),c=BigInt(1),h=BigInt(2),d=BigInt(7),f=BigInt(256),p=BigInt(113);for(let A=0,_=c,E=1,S=0;A<24;A++){[E,S]=[S,(2*E+3*S)%5],i.push(2*(5*S+E)),o.push((A+1)*(A+2)/2%64);let n=a;for(let t=0;t<7;t++)_=(_<<c^(_>>d)*p)%f,_&h&&(n^=c<<(c<<BigInt(t))-c);s.push(n)}const[g,y]=r.ZP.split(s,!0),m=(n,t,e)=>e>32?r.ZP.rotlBH(n,t,e):r.ZP.rotlSH(n,t,e),b=(n,t,e)=>e>32?r.ZP.rotlBL(n,t,e):r.ZP.rotlSL(n,t,e);class w extends u.kb{constructor(n,t,e,r=!1,i=24){if(super(),this.blockLen=n,this.suffix=t,this.outputLen=e,this.enableXOF=r,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,l.ZP.number(e),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,u.Jq)(this.state)}keccak(){!function(n,t=24){const e=new Uint32Array(10);for(let l=24-t;l<24;l++){for(let l=0;l<10;l++)e[l]=n[l]^n[l+10]^n[l+20]^n[l+30]^n[l+40];for(let l=0;l<10;l+=2){const t=(l+8)%10,r=(l+2)%10,u=e[r],i=e[r+1],o=m(u,i,1)^e[t],s=b(u,i,1)^e[t+1];for(let e=0;e<50;e+=10)n[l+e]^=o,n[l+e+1]^=s}let t=n[2],r=n[3];for(let e=0;e<24;e++){const l=o[e],u=m(t,r,l),s=b(t,r,l),a=i[e];t=n[a],r=n[a+1],n[a]=u,n[a+1]=s}for(let l=0;l<50;l+=10){for(let t=0;t<10;t++)e[t]=n[l+t];for(let t=0;t<10;t++)n[l+t]^=~e[(t+2)%10]&e[(t+4)%10]}n[0]^=g[l],n[1]^=y[l]}e.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(n){l.ZP.exists(this);const{blockLen:t,state:e}=this,r=(n=(0,u.O0)(n)).length;for(let l=0;l<r;){const u=Math.min(t-this.pos,r-l);for(let t=0;t<u;t++)e[this.pos++]^=n[l++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:n,suffix:t,pos:e,blockLen:l}=this;n[e]^=t,0!=(128&t)&&e===l-1&&this.keccak(),n[l-1]^=128,this.keccak()}writeInto(n){l.ZP.exists(this,!1),l.ZP.bytes(n),this.finish();const t=this.state,{blockLen:e}=this;for(let l=0,r=n.length;l<r;){this.posOut>=e&&this.keccak();const u=Math.min(e-this.posOut,r-l);n.set(t.subarray(this.posOut,this.posOut+u),l),this.posOut+=u,l+=u}return n}xofInto(n){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(n)}xof(n){return l.ZP.number(n),this.xofInto(new Uint8Array(n))}digestInto(n){if(l.ZP.output(n,this),this.finished)throw new Error("digest() was already called");return this.writeInto(n),this.destroy(),n}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(n){const{blockLen:t,suffix:e,outputLen:l,rounds:r,enableXOF:u}=this;return n||(n=new w(t,e,l,u,r)),n.state32.set(this.state32),n.pos=this.pos,n.posOut=this.posOut,n.finished=this.finished,n.rounds=r,n.suffix=e,n.outputLen=l,n.enableXOF=u,n.destroyed=this.destroyed,n}}const v=(n,t,e)=>(0,u.hE)((()=>new w(t,n,e))),k=(v(6,144,28),v(6,136,32),v(6,104,48),v(6,72,64),v(1,144,28),v(1,136,32)),I=(v(1,104,48),v(1,72,64),(n,t,e)=>(0,u.K$)(((l={})=>new w(t,n,void 0===l.dkLen?e:l.dkLen,!0))));I(31,168,16),I(31,136,32)},8448:(n,t,e)=>{"use strict";e.d(t,{o:()=>f});var l=e(5088),r=e(96541),u=e(94850);const[i,o]=r.ZP.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((n=>BigInt(n)))),s=new Uint32Array(80),a=new Uint32Array(80);class c extends l.N{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:n,Al:t,Bh:e,Bl:l,Ch:r,Cl:u,Dh:i,Dl:o,Eh:s,El:a,Fh:c,Fl:h,Gh:d,Gl:f,Hh:p,Hl:g}=this;return[n,t,e,l,r,u,i,o,s,a,c,h,d,f,p,g]}set(n,t,e,l,r,u,i,o,s,a,c,h,d,f,p,g){this.Ah=0|n,this.Al=0|t,this.Bh=0|e,this.Bl=0|l,this.Ch=0|r,this.Cl=0|u,this.Dh=0|i,this.Dl=0|o,this.Eh=0|s,this.El=0|a,this.Fh=0|c,this.Fl=0|h,this.Gh=0|d,this.Gl=0|f,this.Hh=0|p,this.Hl=0|g}process(n,t){for(let r=0;r<16;r++,t+=4)s[r]=n.getUint32(t),a[r]=n.getUint32(t+=4);for(let i=16;i<80;i++){const n=0|s[i-15],t=0|a[i-15],e=r.ZP.rotrSH(n,t,1)^r.ZP.rotrSH(n,t,8)^r.ZP.shrSH(n,t,7),l=r.ZP.rotrSL(n,t,1)^r.ZP.rotrSL(n,t,8)^r.ZP.shrSL(n,t,7),u=0|s[i-2],o=0|a[i-2],c=r.ZP.rotrSH(u,o,19)^r.ZP.rotrBH(u,o,61)^r.ZP.shrSH(u,o,6),h=r.ZP.rotrSL(u,o,19)^r.ZP.rotrBL(u,o,61)^r.ZP.shrSL(u,o,6),d=r.ZP.add4L(l,h,a[i-7],a[i-16]),f=r.ZP.add4H(d,e,c,s[i-7],s[i-16]);s[i]=0|f,a[i]=0|d}let{Ah:e,Al:l,Bh:u,Bl:c,Ch:h,Cl:d,Dh:f,Dl:p,Eh:g,El:y,Fh:m,Fl:b,Gh:w,Gl:v,Hh:k,Hl:I}=this;for(let A=0;A<80;A++){const n=r.ZP.rotrSH(g,y,14)^r.ZP.rotrSH(g,y,18)^r.ZP.rotrBH(g,y,41),t=r.ZP.rotrSL(g,y,14)^r.ZP.rotrSL(g,y,18)^r.ZP.rotrBL(g,y,41),_=g&m^~g&w,E=y&b^~y&v,S=r.ZP.add5L(I,t,E,o[A],a[A]),T=r.ZP.add5H(S,k,n,_,i[A],s[A]),x=0|S,B=r.ZP.rotrSH(e,l,28)^r.ZP.rotrBH(e,l,34)^r.ZP.rotrBH(e,l,39),P=r.ZP.rotrSL(e,l,28)^r.ZP.rotrBL(e,l,34)^r.ZP.rotrBL(e,l,39),R=e&u^e&h^u&h,O=l&c^l&d^c&d;k=0|w,I=0|v,w=0|m,v=0|b,m=0|g,b=0|y,({h:g,l:y}=r.ZP.add(0|f,0|p,0|T,0|x)),f=0|h,p=0|d,h=0|u,d=0|c,u=0|e,c=0|l;const M=r.ZP.add3L(x,P,O);e=r.ZP.add3H(M,T,B,R),l=0|M}({h:e,l}=r.ZP.add(0|this.Ah,0|this.Al,0|e,0|l)),({h:u,l:c}=r.ZP.add(0|this.Bh,0|this.Bl,0|u,0|c)),({h,l:d}=r.ZP.add(0|this.Ch,0|this.Cl,0|h,0|d)),({h:f,l:p}=r.ZP.add(0|this.Dh,0|this.Dl,0|f,0|p)),({h:g,l:y}=r.ZP.add(0|this.Eh,0|this.El,0|g,0|y)),({h:m,l:b}=r.ZP.add(0|this.Fh,0|this.Fl,0|m,0|b)),({h:w,l:v}=r.ZP.add(0|this.Gh,0|this.Gl,0|w,0|v)),({h:k,l:I}=r.ZP.add(0|this.Hh,0|this.Hl,0|k,0|I)),this.set(e,l,u,c,h,d,f,p,g,y,m,b,w,v,k,I)}roundClean(){s.fill(0),a.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class h extends c{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class d extends c{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const f=(0,u.hE)((()=>new c));(0,u.hE)((()=>new h)),(0,u.hE)((()=>new d))},94850:(n,t,e)=>{"use strict";e.d(t,{kb:()=>o,GL:()=>r,np:()=>u,O0:()=>i,Jq:()=>l,hE:()=>s,K$:()=>a});"object"==typeof self&&"crypto"in self&&self.crypto;const l=n=>new Uint32Array(n.buffer,n.byteOffset,Math.floor(n.byteLength/4)),r=n=>new DataView(n.buffer,n.byteOffset,n.byteLength),u=(n,t)=>n<<32-t|n>>>t;if(!(68===new Uint8Array(new Uint32Array([287454020]).buffer)[0]))throw new Error("Non little-endian hardware is not supported");Array.from({length:256},((n,t)=>t.toString(16).padStart(2,"0")));function i(n){if("string"==typeof n&&(n=function(n){if("string"!=typeof n)throw new TypeError("utf8ToBytes expected string, got "+typeof n);return(new TextEncoder).encode(n)}(n)),!(n instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof n})`);return n}class o{clone(){return this._cloneInto()}}function s(n){const t=t=>n().update(i(t)).digest(),e=n();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>n(),t}function a(n){const t=(t,e)=>n(e).update(i(t)).digest(),e=n({});return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=t=>n(t),t}},89580:(n,t,e)=>{"use strict";var l;e.d(t,{$3:()=>$,P6:()=>en,kS:()=>Q});var r=e(69314);const u=BigInt(0),i=BigInt(1),o=BigInt(2),s=BigInt(3),a=BigInt(8),c=Object.freeze({a:u,b:BigInt(7),P:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:i,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")});function h(n){const{a:t,b:e}=c,l=O(n*n),r=O(l*n);return O(r+t*n+e)}const d=c.a===u;class f extends Error{constructor(n){super(n)}}class p{constructor(n,t,e){this.x=n,this.y=t,this.z=e}static fromAffine(n){if(!(n instanceof y))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new p(n.x,n.y,i)}static toAffineBatch(n){const t=function(n,t=c.P){const e=new Array(n.length),l=C(n.reduce(((n,l,r)=>l===u?n:(e[r]=n,O(n*l,t))),i),t);return n.reduceRight(((n,l,r)=>l===u?n:(e[r]=O(n*e[r],t),O(n*l,t))),l),e}(n.map((n=>n.z)));return n.map(((n,e)=>n.toAffine(t[e])))}static normalizeZ(n){return p.toAffineBatch(n).map(p.fromAffine)}equals(n){if(!(n instanceof p))throw new TypeError("JacobianPoint expected");const{x:t,y:e,z:l}=this,{x:r,y:u,z:i}=n,o=O(l*l),s=O(i*i),a=O(t*s),c=O(r*o),h=O(O(e*i)*s),d=O(O(u*l)*o);return a===c&&h===d}negate(){return new p(this.x,O(-this.y),this.z)}double(){const{x:n,y:t,z:e}=this,l=O(n*n),r=O(t*t),u=O(r*r),i=n+r,c=O(o*(O(i*i)-l-u)),h=O(s*l),d=O(h*h),f=O(d-o*c),g=O(h*(c-f)-a*u),y=O(o*t*e);return new p(f,g,y)}add(n){if(!(n instanceof p))throw new TypeError("JacobianPoint expected");const{x:t,y:e,z:l}=this,{x:r,y:i,z:s}=n;if(r===u||i===u)return this;if(t===u||e===u)return n;const a=O(l*l),c=O(s*s),h=O(t*c),d=O(r*a),f=O(O(e*s)*c),g=O(O(i*l)*a),y=O(d-h),m=O(g-f);if(y===u)return m===u?this.double():p.ZERO;const b=O(y*y),w=O(y*b),v=O(h*b),k=O(m*m-w-o*v),I=O(m*(v-k)-f*w),A=O(l*s*y);return new p(k,I,A)}subtract(n){return this.add(n.negate())}multiplyUnsafe(n){const t=p.ZERO;if("bigint"==typeof n&&n===u)return t;let e=R(n);if(e===i)return this;if(!d){let n=t,l=this;for(;e>u;)e&i&&(n=n.add(l)),l=l.double(),e>>=i;return n}let{k1neg:l,k1:r,k2neg:o,k2:s}=N(e),a=t,h=t,f=this;for(;r>u||s>u;)r&i&&(a=a.add(f)),s&i&&(h=h.add(f)),f=f.double(),r>>=i,s>>=i;return l&&(a=a.negate()),o&&(h=h.negate()),h=new p(O(h.x*c.beta),h.y,h.z),a.add(h)}precomputeWindow(n){const t=d?128/n+1:256/n+1,e=[];let l=this,r=l;for(let u=0;u<t;u++){r=l,e.push(r);for(let t=1;t<2**(n-1);t++)r=r.add(l),e.push(r);l=r.double()}return e}wNAF(n,t){!t&&this.equals(p.BASE)&&(t=y.BASE);const e=t&&t._WINDOW_SIZE||1;if(256%e)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let l=t&&g.get(t);l||(l=this.precomputeWindow(e),t&&1!==e&&(l=p.normalizeZ(l),g.set(t,l)));let r=p.ZERO,u=p.ZERO;const o=1+(d?128/e:256/e),s=2**(e-1),a=BigInt(2**e-1),c=2**e,h=BigInt(e);for(let d=0;d<o;d++){const t=d*s;let e=Number(n&a);if(n>>=h,e>s&&(e-=c,n+=i),0===e){let n=l[t];d%2&&(n=n.negate()),u=u.add(n)}else{let n=l[t+Math.abs(e)-1];e<0&&(n=n.negate()),r=r.add(n)}}return{p:r,f:u}}multiply(n,t){let e,l,r=R(n);if(d){const{k1neg:n,k1:u,k2neg:i,k2:o}=N(r);let{p:s,f:a}=this.wNAF(u,t),{p:h,f:d}=this.wNAF(o,t);n&&(s=s.negate()),i&&(h=h.negate()),h=new p(O(h.x*c.beta),h.y,h.z),e=s.add(h),l=a.add(d)}else{const{p:n,f:u}=this.wNAF(r,t);e=n,l=u}return p.normalizeZ([e,l])[0]}toAffine(n=C(this.z)){const{x:t,y:e,z:l}=this,r=n,u=O(r*r),o=O(u*r),s=O(t*u),a=O(e*o);if(O(l*r)!==i)throw new Error("invZ was invalid");return new y(s,a)}}p.BASE=new p(c.Gx,c.Gy,i),p.ZERO=new p(u,i,u);const g=new WeakMap;class y{constructor(n,t){this.x=n,this.y=t}_setWindowSize(n){this._WINDOW_SIZE=n,g.delete(this)}hasEvenY(){return this.y%o===u}static fromCompressedHex(n){const t=32===n.length,e=B(t?n:n.subarray(1));if(!F(e))throw new Error("Point is not on curve");let l=function(n){const{P:t}=c,e=BigInt(6),l=BigInt(11),r=BigInt(22),u=BigInt(23),i=BigInt(44),a=BigInt(88),h=n*n*n%t,d=h*h*n%t,f=M(d,s)*d%t,p=M(f,s)*d%t,g=M(p,o)*h%t,y=M(g,l)*g%t,m=M(y,r)*y%t,b=M(m,i)*m%t,w=M(b,a)*b%t,v=M(w,i)*m%t,k=M(v,s)*d%t,I=M(k,u)*y%t,A=M(I,e)*h%t;return M(A,o)}(h(e));const r=(l&i)===i;if(t)r&&(l=O(-l));else{1==(1&n[0])!==r&&(l=O(-l))}const u=new y(e,l);return u.assertValidity(),u}static fromUncompressedHex(n){const t=B(n.subarray(1,33)),e=B(n.subarray(33,65)),l=new y(t,e);return l.assertValidity(),l}static fromHex(n){const t=P(n),e=t.length,l=t[0];if(32===e||33===e&&(2===l||3===l))return this.fromCompressedHex(t);if(65===e&&4===l)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${e}`)}static fromPrivateKey(n){return y.BASE.multiply(H(n))}static fromSignature(n,t,e){const l=z(n=P(n)),{r,s:u}=G(t);if(0!==e&&1!==e)throw new Error("Cannot recover signature: invalid recovery bit");const i=1&e?"03":"02",o=y.fromHex(i+_(r)),{n:s}=c,a=C(r,s),h=O(-l*a,s),d=O(u*a,s),f=y.BASE.multiplyAndAddUnsafe(o,h,d);if(!f)throw new Error("Cannot recover signature: point at infinify");return f.assertValidity(),f}toRawBytes(n=!1){return x(this.toHex(n))}toHex(n=!1){const t=_(this.x);if(n){return`${this.hasEvenY()?"02":"03"}${t}`}return`04${t}${_(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const n="Point is not on elliptic curve",{x:t,y:e}=this;if(!F(t)||!F(e))throw new Error(n);const l=O(e*e);if(O(l-h(t))!==u)throw new Error(n)}equals(n){return this.x===n.x&&this.y===n.y}negate(){return new y(this.x,O(-this.y))}double(){return p.fromAffine(this).double().toAffine()}add(n){return p.fromAffine(this).add(p.fromAffine(n)).toAffine()}subtract(n){return this.add(n.negate())}multiply(n){return p.fromAffine(this).multiply(n,this).toAffine()}multiplyAndAddUnsafe(n,t,e){const l=p.fromAffine(this),r=t===u||t===i||this!==y.BASE?l.multiplyUnsafe(t):l.multiply(t),o=p.fromAffine(n).multiplyUnsafe(e),s=r.add(o);return s.equals(p.ZERO)?void 0:s.toAffine()}}function m(n){return Number.parseInt(n[0],16)>=8?"00"+n:n}function b(n){if(n.length<2||2!==n[0])throw new Error(`Invalid signature integer tag: ${I(n)}`);const t=n[1],e=n.subarray(2,t+2);if(!t||e.length!==t)throw new Error("Invalid signature integer: wrong length");if(0===e[0]&&e[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:B(e),left:n.subarray(t+2)}}y.BASE=new y(c.Gx,c.Gy),y.ZERO=new y(u,u);class w{constructor(n,t){this.r=n,this.s=t,this.assertValidity()}static fromCompact(n){const t=n instanceof Uint8Array,e="Signature.fromCompact";if("string"!=typeof n&&!t)throw new TypeError(`${e}: Expected string or Uint8Array`);const l=t?I(n):n;if(128!==l.length)throw new Error(`${e}: Expected 64-byte hex`);return new w(T(l.slice(0,64)),T(l.slice(64,128)))}static fromDER(n){const t=n instanceof Uint8Array;if("string"!=typeof n&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:e,s:l}=function(n){if(n.length<2||48!=n[0])throw new Error(`Invalid signature tag: ${I(n)}`);if(n[1]!==n.length-2)throw new Error("Invalid signature: incorrect length");const{data:t,left:e}=b(n.subarray(2)),{data:l,left:r}=b(e);if(r.length)throw new Error(`Invalid signature: left bytes after parsing: ${I(r)}`);return{r:t,s:l}}(t?n:x(n));return new w(e,l)}static fromHex(n){return this.fromDER(n)}assertValidity(){const{r:n,s:t}=this;if(!j(n))throw new Error("Invalid Signature: r must be 0 < r < n");if(!j(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const n=c.n>>i;return this.s>n}normalizeS(){return this.hasHighS()?new w(this.r,c.n-this.s):this}toDERRawBytes(n=!1){return x(this.toDERHex(n))}toDERHex(n=!1){const t=m(S(this.s));if(n)return t;const e=m(S(this.r)),l=S(e.length/2),r=S(t.length/2);return`30${S(e.length/2+t.length/2+4)}02${l}${e}02${r}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return x(this.toCompactHex())}toCompactHex(){return _(this.r)+_(this.s)}}function v(...n){if(!n.every((n=>n instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===n.length)return n[0];const t=n.reduce(((n,t)=>n+t.length),0),e=new Uint8Array(t);for(let l=0,r=0;l<n.length;l++){const t=n[l];e.set(t,r),r+=t.length}return e}const k=Array.from({length:256},((n,t)=>t.toString(16).padStart(2,"0")));function I(n){if(!(n instanceof Uint8Array))throw new Error("Expected Uint8Array");let t="";for(let e=0;e<n.length;e++)t+=k[n[e]];return t}const A=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");function _(n){if("bigint"!=typeof n)throw new Error("Expected bigint");if(!(u<=n&&n<A))throw new Error("Expected number < 2^256");return n.toString(16).padStart(64,"0")}function E(n){const t=x(_(n));if(32!==t.length)throw new Error("Error: expected 32 bytes");return t}function S(n){const t=n.toString(16);return 1&t.length?`0${t}`:t}function T(n){if("string"!=typeof n)throw new TypeError("hexToNumber: expected string, got "+typeof n);return BigInt(`0x${n}`)}function x(n){if("string"!=typeof n)throw new TypeError("hexToBytes: expected string, got "+typeof n);if(n.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+n.length);const t=new Uint8Array(n.length/2);for(let e=0;e<t.length;e++){const l=2*e,r=n.slice(l,l+2),u=Number.parseInt(r,16);if(Number.isNaN(u)||u<0)throw new Error("Invalid byte sequence");t[e]=u}return t}function B(n){return T(I(n))}function P(n){return n instanceof Uint8Array?Uint8Array.from(n):x(n)}function R(n){if("number"==typeof n&&Number.isSafeInteger(n)&&n>0)return BigInt(n);if("bigint"==typeof n&&j(n))return n;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function O(n,t=c.P){const e=n%t;return e>=u?e:t+e}function M(n,t){const{P:e}=c;let l=n;for(;t-- >u;)l*=l,l%=e;return l}function C(n,t=c.P){if(n===u||t<=u)throw new Error(`invert: expected positive integers, got n=${n} mod=${t}`);let e=O(n,t),l=t,r=u,o=i,s=i,a=u;for(;e!==u;){const n=l/e,t=l%e,u=r-s*n,i=o-a*n;l=e,e=t,r=s,o=a,s=u,a=i}if(l!==i)throw new Error("invert: does not exist");return O(r,t)}const U=(n,t)=>(n+t/o)/t,L={a1:BigInt("0x3086d221a7d46bcde86c90e49284eb15"),b1:-i*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),a2:BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),b2:BigInt("0x3086d221a7d46bcde86c90e49284eb15"),POW_2_128:BigInt("0x100000000000000000000000000000000")};function N(n){const{n:t}=c,{a1:e,b1:l,a2:r,b2:u,POW_2_128:i}=L,o=U(u*n,t),s=U(-l*n,t);let a=O(n-o*e-s*r,t),h=O(-o*l-s*u,t);const d=a>i,f=h>i;if(d&&(a=t-a),f&&(h=t-h),a>i||h>i)throw new Error("splitScalarEndo: Endomorphism failed, k="+n);return{k1neg:d,k1:a,k2neg:f,k2:h}}function z(n){const{n:t}=c,e=8*n.length-256;let l=B(n);return e>0&&(l>>=BigInt(e)),l>=t&&(l-=t),l}let K,D;class W{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(...n){return en.hmacSha256(this.k,...n)}hmacSync(...n){return D(this.k,...n)}checkSync(){if("function"!=typeof D)throw new f("hmacSha256Sync needs to be set")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(n=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),n),this.v=await this.hmac(this.v),0!==n.length&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),n),this.v=await this.hmac(this.v))}reseedSync(n=new Uint8Array){this.checkSync(),this.k=this.hmacSync(this.v,Uint8Array.from([0]),n),this.v=this.hmacSync(this.v),0!==n.length&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),n),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.checkSync(),this.incr(),this.v=this.hmacSync(this.v),this.v}}function j(n){return u<n&&n<c.n}function F(n){return u<n&&n<c.P}function q(n,t,e){const l=B(n);if(!j(l))return;const{n:r}=c,o=y.BASE.multiply(l),s=O(o.x,r);if(s===u)return;const a=O(C(l,r)*O(t+e*s,r),r);if(a===u)return;const h=new w(s,a);return{sig:h,recovery:(o.x===h.r?0:2)|Number(o.y&i)}}function H(n){let t;if("bigint"==typeof n)t=n;else if("number"==typeof n&&Number.isSafeInteger(n)&&n>0)t=BigInt(n);else if("string"==typeof n){if(64!==n.length)throw new Error("Expected 32 bytes of private key");t=T(n)}else{if(!(n instanceof Uint8Array))throw new TypeError("Expected valid private key");if(32!==n.length)throw new Error("Expected 32 bytes of private key");t=B(n)}if(!j(t))throw new Error("Expected private key: 0 < key < n");return t}function G(n){if(n instanceof w)return n.assertValidity(),n;try{return w.fromDER(n)}catch(t){return w.fromCompact(n)}}function $(n,t=!1){return y.fromPrivateKey(n).toRawBytes(t)}function Z(n){return B(n.length>32?n.slice(0,32):n)}function V(n){const t=Z(n),e=O(t,c.n);return X(e<u?t:e)}function X(n){return E(n)}function Y(n,t,e){if(null==n)throw new Error(`sign: expected valid message hash, not "${n}"`);const l=P(n),r=H(t),u=[X(r),V(l)];if(null!=e){!0===e&&(e=en.randomBytes(32));const n=P(e);if(32!==n.length)throw new Error("sign: Expected 32 bytes of extra data");u.push(n)}return{seed:v(...u),m:Z(l),d:r}}function J(n,t){let{sig:e,recovery:l}=n;const{canonical:r,der:u,recovered:i}=Object.assign({canonical:!0,der:!0},t);r&&e.hasHighS()&&(e=e.normalizeS(),l^=1);const o=u?e.toDERRawBytes():e.toCompactRawBytes();return i?[o,l]:o}function Q(n,t,e={}){const{seed:l,m:r,d:u}=Y(n,t,e.extraEntropy);let i;const o=new W;for(o.reseedSync(l);!(i=q(o.generateSync(),r,u));)o.reseedSync();return J(i,e)}y.BASE._setWindowSize(8);const nn={node:l||(l=e.t(r,2)),web:"object"==typeof self&&"crypto"in self?self.crypto:void 0},tn={},en={bytesToHex:I,hexToBytes:x,concatBytes:v,mod:O,invert:C,isValidPrivateKey(n){try{return H(n),!0}catch(t){return!1}},_bigintTo32Bytes:E,_normalizePrivateKey:H,hashToPrivateKey:n=>{if((n=P(n)).length<40||n.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");return E(O(B(n),c.n-i)+i)},randomBytes:(n=32)=>{if(nn.web)return nn.web.getRandomValues(new Uint8Array(n));if(nn.node){const{randomBytes:t}=nn.node;return Uint8Array.from(t(n))}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>en.hashToPrivateKey(en.randomBytes(40)),sha256:async(...n)=>{if(nn.web){const t=await nn.web.subtle.digest("SHA-256",v(...n));return new Uint8Array(t)}if(nn.node){const{createHash:t}=nn.node,e=t("sha256");return n.forEach((n=>e.update(n))),Uint8Array.from(e.digest())}throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(n,...t)=>{if(nn.web){const e=await nn.web.subtle.importKey("raw",n,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),l=v(...t),r=await nn.web.subtle.sign("HMAC",e,l);return new Uint8Array(r)}if(nn.node){const{createHmac:e}=nn.node,l=e("sha256",n);return t.forEach((n=>l.update(n))),Uint8Array.from(l.digest())}throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(n,...t)=>{let e=tn[n];if(void 0===e){const t=await en.sha256(Uint8Array.from(n,(n=>n.charCodeAt(0))));e=v(t,t),tn[n]=e}return en.sha256(e,...t)},taggedHashSync:(n,...t)=>{if("function"!=typeof K)throw new f("sha256Sync is undefined, you need to set it");let e=tn[n];if(void 0===e){const t=K(Uint8Array.from(n,(n=>n.charCodeAt(0))));e=v(t,t),tn[n]=e}return K(e,...t)},precompute(n=8,t=y.BASE){const e=t===y.BASE?t:new y(t.x,t.y);return e._setWindowSize(n),e.multiply(s),e}};Object.defineProperties(en,{sha256Sync:{configurable:!1,get:()=>K,set(n){K||(K=n)}},hmacSha256Sync:{configurable:!1,get:()=>D,set(n){D||(D=n)}}})},50974:(n,t,e)=>{"use strict";e.d(t,{AG:()=>k,G0:()=>x,IM:()=>_,IX:()=>y,O7:()=>m,Rx:()=>I,Ue:()=>h,Yj:()=>g,Z_:()=>E,_4:()=>B,bc:()=>S,dt:()=>T,eE:()=>b,hu:()=>c,i0:()=>w,jt:()=>A,oQ:()=>P});class l extends TypeError{constructor(n,t){let e;const{message:l,...r}=n,{path:u}=n;super(0===u.length?l:"At path: "+u.join(".")+" -- "+l),Object.assign(this,r),this.name=this.constructor.name,this.failures=()=>{var l;return null!=(l=e)?l:e=[n,...t()]}}}function r(n){return"object"==typeof n&&null!=n}function u(n){return"string"==typeof n?JSON.stringify(n):""+n}function i(n,t,e,l){if(!0===n)return;!1===n?n={}:"string"==typeof n&&(n={message:n});const{path:r,branch:i}=t,{type:o}=e,{refinement:s,message:a="Expected a value of type `"+o+"`"+(s?" with refinement `"+s+"`":"")+", but received: `"+u(l)+"`"}=n;return{value:l,type:o,refinement:s,key:r[r.length-1],path:r,branch:i,...n,message:a}}function*o(n,t,e,l){var u;r(u=n)&&"function"==typeof u[Symbol.iterator]||(n=[n]);for(const r of n){const n=i(r,t,e,l);n&&(yield n)}}function*s(n,t,e={}){const{path:l=[],branch:u=[n],coerce:i=!1,mask:o=!1}=e,a={path:l,branch:u};if(i&&(n=t.coercer(n,a),o&&"type"!==t.type&&r(t.schema)&&r(n)&&!Array.isArray(n)))for(const r in n)void 0===t.schema[r]&&delete n[r];let c=!0;for(const r of t.validator(n,a))c=!1,yield[r,void 0];for(let[h,d,f]of t.entries(n,a)){const t=s(d,f,{path:void 0===h?l:[...l,h],branch:void 0===h?u:[...u,d],coerce:i,mask:o});for(const e of t)e[0]?(c=!1,yield[e[0],void 0]):i&&(d=e[1],void 0===h?n=d:n instanceof Map?n.set(h,d):n instanceof Set?n.add(d):r(n)&&(n[h]=d))}if(c)for(const r of t.refiner(n,a))c=!1,yield[r,void 0];c&&(yield[void 0,n])}class a{constructor(n){const{type:t,schema:e,validator:l,refiner:r,coercer:u=(n=>n),entries:i=function*(){}}=n;this.type=t,this.schema=e,this.entries=i,this.coercer=u,this.validator=l?(n,t)=>o(l(n,t),t,this,n):()=>[],this.refiner=r?(n,t)=>o(r(n,t),t,this,n):()=>[]}assert(n){return c(n,this)}create(n){return h(n,this)}is(n){return d(n,this)}mask(n){return function(n,t){const e=f(n,t,{coerce:!0,mask:!0});if(e[0])throw e[0];return e[1]}(n,this)}validate(n,t={}){return f(n,this,t)}}function c(n,t){const e=f(n,t);if(e[0])throw e[0]}function h(n,t){const e=f(n,t,{coerce:!0});if(e[0])throw e[0];return e[1]}function d(n,t){return!f(n,t)[0]}function f(n,t,e={}){const r=s(n,t,e),u=function(n){const{done:t,value:e}=n.next();return t?void 0:e}(r);if(u[0]){return[new l(u[0],(function*(){for(const n of r)n[0]&&(yield n[0])})),void 0]}return[void 0,u[1]]}function p(n,t){return new a({type:n,schema:null,validator:t})}function g(){return p("any",(()=>!0))}function y(n){return new a({type:"array",schema:n,*entries(t){if(n&&Array.isArray(t))for(const[e,l]of t.entries())yield[e,l,n]},coercer:n=>Array.isArray(n)?n.slice():n,validator:n=>Array.isArray(n)||"Expected an array value, but received: "+u(n)})}function m(){return p("boolean",(n=>"boolean"==typeof n))}function b(n){return p("instance",(t=>t instanceof n||"Expected a `"+n.name+"` instance, but received: "+u(t)))}function w(n){const t=u(n),e=typeof n;return new a({type:"literal",schema:"string"===e||"number"===e||"boolean"===e?n:null,validator:e=>e===n||"Expected the literal `"+t+"`, but received: "+u(e)})}function v(){return p("never",(()=>!1))}function k(n){return new a({...n,validator:(t,e)=>null===t||n.validator(t,e),refiner:(t,e)=>null===t||n.refiner(t,e)})}function I(){return p("number",(n=>"number"==typeof n&&!isNaN(n)||"Expected a number, but received: "+u(n)))}function A(n){return new a({...n,validator:(t,e)=>void 0===t||n.validator(t,e),refiner:(t,e)=>void 0===t||n.refiner(t,e)})}function _(n,t){return new a({type:"record",schema:null,*entries(e){if(r(e))for(const l in e){const r=e[l];yield[l,l,n],yield[l,r,t]}},validator:n=>r(n)||"Expected an object, but received: "+u(n)})}function E(){return p("string",(n=>"string"==typeof n||"Expected a string, but received: "+u(n)))}function S(n){const t=v();return new a({type:"tuple",schema:null,*entries(e){if(Array.isArray(e)){const l=Math.max(n.length,e.length);for(let r=0;r<l;r++)yield[r,e[r],n[r]||t]}},validator:n=>Array.isArray(n)||"Expected an array, but received: "+u(n)})}function T(n){const t=Object.keys(n);return new a({type:"type",schema:n,*entries(e){if(r(e))for(const l of t)yield[l,e[l],n[l]]},validator:n=>r(n)||"Expected an object, but received: "+u(n)})}function x(n){const t=n.map((n=>n.type)).join(" | ");return new a({type:"union",schema:null,validator(e,l){const r=[];for(const t of n){const[...n]=s(e,t,l),[u]=n;if(!u[0])return[];for(const[t]of n)t&&r.push(t)}return["Expected the value to satisfy a union of `"+t+"`, but received: "+u(e),...r]}})}function B(){return p("unknown",(()=>!0))}function P(n,t,e){return new a({...n,coercer:(l,r)=>d(l,t)?n.coercer(e(l,r),r):n.coercer(l,r)})}},92338:(n,t,e)=>{"use strict";function l(n,t,e){return t<=n&&n<=e}function r(n){if(void 0===n)return{};if(n===Object(n))return n;throw TypeError("Could not convert argument to dictionary")}e.r(t),e.d(t,{TextDecoder:()=>a,TextEncoder:()=>c});function u(n){this.tokens=[].slice.call(n)}u.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.shift():-1},prepend:function(n){if(Array.isArray(n))for(var t=n;t.length;)this.tokens.unshift(t.pop());else this.tokens.unshift(n)},push:function(n){if(Array.isArray(n))for(var t=n;t.length;)this.tokens.push(t.shift());else this.tokens.push(n)}};var i=-1;function o(n,t){if(n)throw TypeError("Decoder error");return t||65533}var s="utf-8";function a(n,t){if(!(this instanceof a))return new a(n,t);if((n=void 0!==n?String(n).toLowerCase():s)!==s)throw new Error("Encoding not supported. Only utf-8 is supported");t=r(t),this._streaming=!1,this._BOMseen=!1,this._decoder=null,this._fatal=Boolean(t.fatal),this._ignoreBOM=Boolean(t.ignoreBOM),Object.defineProperty(this,"encoding",{value:"utf-8"}),Object.defineProperty(this,"fatal",{value:this._fatal}),Object.defineProperty(this,"ignoreBOM",{value:this._ignoreBOM})}function c(n,t){if(!(this instanceof c))return new c(n,t);if((n=void 0!==n?String(n).toLowerCase():s)!==s)throw new Error("Encoding not supported. Only utf-8 is supported");t=r(t),this._streaming=!1,this._encoder=null,this._options={fatal:Boolean(t.fatal)},Object.defineProperty(this,"encoding",{value:"utf-8"})}function h(n){var t=n.fatal,e=0,r=0,u=0,s=128,a=191;this.handler=function(n,c){if(-1===c&&0!==u)return u=0,o(t);if(-1===c)return i;if(0===u){if(l(c,0,127))return c;if(l(c,194,223))u=1,e=c-192;else if(l(c,224,239))224===c&&(s=160),237===c&&(a=159),u=2,e=c-224;else{if(!l(c,240,244))return o(t);240===c&&(s=144),244===c&&(a=143),u=3,e=c-240}return e<<=6*u,null}if(!l(c,s,a))return e=u=r=0,s=128,a=191,n.prepend(c),o(t);if(s=128,a=191,e+=c-128<<6*(u-(r+=1)),r!==u)return null;var h=e;return e=u=r=0,h}}function d(n){n.fatal;this.handler=function(n,t){if(-1===t)return i;if(l(t,0,127))return t;var e,r;l(t,128,2047)?(e=1,r=192):l(t,2048,65535)?(e=2,r=224):l(t,65536,1114111)&&(e=3,r=240);for(var u=[(t>>6*e)+r];e>0;){var o=t>>6*(e-1);u.push(128|63&o),e-=1}return u}}a.prototype={decode:function(n,t){var e;e="object"==typeof n&&n instanceof ArrayBuffer?new Uint8Array(n):"object"==typeof n&&"buffer"in n&&n.buffer instanceof ArrayBuffer?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):new Uint8Array(0),t=r(t),this._streaming||(this._decoder=new h({fatal:this._fatal}),this._BOMseen=!1),this._streaming=Boolean(t.stream);for(var l,o=new u(e),s=[];!o.endOfStream()&&(l=this._decoder.handler(o,o.read()))!==i;)null!==l&&(Array.isArray(l)?s.push.apply(s,l):s.push(l));if(!this._streaming){do{if((l=this._decoder.handler(o,o.read()))===i)break;null!==l&&(Array.isArray(l)?s.push.apply(s,l):s.push(l))}while(!o.endOfStream());this._decoder=null}return s.length&&(-1===["utf-8"].indexOf(this.encoding)||this._ignoreBOM||this._BOMseen||(65279===s[0]?(this._BOMseen=!0,s.shift()):this._BOMseen=!0)),function(n){for(var t="",e=0;e<n.length;++e){var l=n[e];l<=65535?t+=String.fromCharCode(l):(l-=65536,t+=String.fromCharCode(55296+(l>>10),56320+(1023&l)))}return t}(s)}},c.prototype={encode:function(n,t){n=n?String(n):"",t=r(t),this._streaming||(this._encoder=new d(this._options)),this._streaming=Boolean(t.stream);for(var e,l=[],o=new u(function(n){for(var t=String(n),e=t.length,l=0,r=[];l<e;){var u=t.charCodeAt(l);if(u<55296||u>57343)r.push(u);else if(56320<=u&&u<=57343)r.push(65533);else if(55296<=u&&u<=56319)if(l===e-1)r.push(65533);else{var i=n.charCodeAt(l+1);if(56320<=i&&i<=57343){var o=1023&u,s=1023&i;r.push(65536+(o<<10)+s),l+=1}else r.push(65533)}l+=1}return r}(n));!o.endOfStream()&&(e=this._encoder.handler(o,o.read()))!==i;)Array.isArray(e)?l.push.apply(l,e):l.push(e);if(!this._streaming){for(;(e=this._encoder.handler(o,o.read()))!==i;)Array.isArray(e)?l.push.apply(l,e):l.push(e);this._encoder=null}return new Uint8Array(l)}}}},n=>{var t;t=76333,n(n.s=t)}]);/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */

/*! micro-ed25519-hdkey - MIT License (c) 2022 Paul Miller (paulmillr.com) */

/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */

/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */

/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */

/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */

/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */

/**
 * Support for translating between Uint8Array instances and JavaScript
 * native types.
 *
 * {@link module:Layout~Layout|Layout} is the basis of a class
 * hierarchy that associates property names with sequences of encoded
 * bytes.
 *
 * Layouts are supported for these scalar (numeric) types:
 * * {@link module:Layout~UInt|Unsigned integers in little-endian
 *   format} with {@link module:Layout.u8|8-bit}, {@link
 *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},
 *   {@link module:Layout.u32|32-bit}, {@link
 *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}
 *   representation ranges;
 * * {@link module:Layout~UIntBE|Unsigned integers in big-endian
 *   format} with {@link module:Layout.u16be|16-bit}, {@link
 *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},
 *   {@link module:Layout.u40be|40-bit}, and {@link
 *   module:Layout.u48be|48-bit} representation ranges;
 * * {@link module:Layout~Int|Signed integers in little-endian
 *   format} with {@link module:Layout.s8|8-bit}, {@link
 *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},
 *   {@link module:Layout.s32|32-bit}, {@link
 *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}
 *   representation ranges;
 * * {@link module:Layout~IntBE|Signed integers in big-endian format}
 *   with {@link module:Layout.s16be|16-bit}, {@link
 *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},
 *   {@link module:Layout.s40be|40-bit}, and {@link
 *   module:Layout.s48be|48-bit} representation ranges;
 * * 64-bit integral values that decode to an exact (if magnitude is
 *   less than 2^53) or nearby integral Number in {@link
 *   module:Layout.nu64|unsigned little-endian}, {@link
 *   module:Layout.nu64be|unsigned big-endian}, {@link
 *   module:Layout.ns64|signed little-endian}, and {@link
 *   module:Layout.ns64be|unsigned big-endian} encodings;
 * * 32-bit floating point values with {@link
 *   module:Layout.f32|little-endian} and {@link
 *   module:Layout.f32be|big-endian} representations;
 * * 64-bit floating point values with {@link
 *   module:Layout.f64|little-endian} and {@link
 *   module:Layout.f64be|big-endian} representations;
 * * {@link module:Layout.const|Constants} that take no space in the
 *   encoded expression.
 *
 * and for these aggregate types:
 * * {@link module:Layout.seq|Sequence}s of instances of a {@link
 *   module:Layout~Layout|Layout}, with JavaScript representation as
 *   an Array and constant or data-dependent {@link
 *   module:Layout~Sequence#count|length};
 * * {@link module:Layout.struct|Structure}s that aggregate a
 *   heterogeneous sequence of {@link module:Layout~Layout|Layout}
 *   instances, with JavaScript representation as an Object;
 * * {@link module:Layout.union|Union}s that support multiple {@link
 *   module:Layout~VariantLayout|variant layouts} over a fixed
 *   (padded) or variable (not padded) span of bytes, using an
 *   unsigned integer at the start of the data or a separate {@link
 *   module:Layout.unionLayoutDiscriminator|layout element} to
 *   determine which layout to use when interpreting the buffer
 *   contents;
 * * {@link module:Layout.bits|BitStructure}s that contain a sequence
 *   of individual {@link
 *   module:Layout~BitStructure#addField|BitField}s packed into an 8,
 *   16, 24, or 32-bit unsigned integer starting at the least- or
 *   most-significant bit;
 * * {@link module:Layout.cstr|C strings} of varying length;
 * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link
 *   module:Layout~Blob#length|length} raw data.
 *
 * All {@link module:Layout~Layout|Layout} instances are immutable
 * after construction, to prevent internal state from becoming
 * inconsistent.
 *
 * @local Layout
 * @local ExternalLayout
 * @local GreedyCount
 * @local OffsetLayout
 * @local UInt
 * @local UIntBE
 * @local Int
 * @local IntBE
 * @local NearUInt64
 * @local NearUInt64BE
 * @local NearInt64
 * @local NearInt64BE
 * @local Float
 * @local FloatBE
 * @local Double
 * @local DoubleBE
 * @local Sequence
 * @local Structure
 * @local UnionDiscriminator
 * @local UnionLayoutDiscriminator
 * @local Union
 * @local VariantLayout
 * @local BitStructure
 * @local BitField
 * @local Boolean
 * @local Blob
 * @local CString
 * @local Constant
 * @local bindConstructorLayout
 * @module Layout
 * @license MIT
 * @author Peter A. Bigot
 * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}
 */
